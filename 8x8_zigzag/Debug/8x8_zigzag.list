
8x8_zigzag.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000030c  08000194  08000194  00001194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080004a0  080004a0  0000201c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080004a0  080004a0  0000201c  2**0
                  CONTENTS
  4 .ARM          00000000  080004a0  080004a0  0000201c  2**0
                  CONTENTS
  5 .preinit_array 00000000  080004a0  080004a0  0000201c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080004a0  080004a0  000014a0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  080004a4  080004a4  000014a4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         0000001c  20000000  080004a8  00002000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  2000001c  080004c4  0000201c  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000038  080004c4  00002038  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  0000201c  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000136  00000000  00000000  0000204c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000000b9  00000000  00000000  00002182  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000050  00000000  00000000  00002240  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000033  00000000  00000000  00002290  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00000acb  00000000  00000000  000022c3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000001ce  00000000  00000000  00002d8e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00002e83  00000000  00000000  00002f5c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  00005ddf  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000084  00000000  00000000  00005e24  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000005c  00000000  00000000  00005ea8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000194 <__do_global_dtors_aux>:
 8000194:	b510      	push	{r4, lr}
 8000196:	4c05      	ldr	r4, [pc, #20]	@ (80001ac <__do_global_dtors_aux+0x18>)
 8000198:	7823      	ldrb	r3, [r4, #0]
 800019a:	b933      	cbnz	r3, 80001aa <__do_global_dtors_aux+0x16>
 800019c:	4b04      	ldr	r3, [pc, #16]	@ (80001b0 <__do_global_dtors_aux+0x1c>)
 800019e:	b113      	cbz	r3, 80001a6 <__do_global_dtors_aux+0x12>
 80001a0:	4804      	ldr	r0, [pc, #16]	@ (80001b4 <__do_global_dtors_aux+0x20>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	2301      	movs	r3, #1
 80001a8:	7023      	strb	r3, [r4, #0]
 80001aa:	bd10      	pop	{r4, pc}
 80001ac:	2000001c 	.word	0x2000001c
 80001b0:	00000000 	.word	0x00000000
 80001b4:	08000488 	.word	0x08000488

080001b8 <frame_dummy>:
 80001b8:	b508      	push	{r3, lr}
 80001ba:	4b03      	ldr	r3, [pc, #12]	@ (80001c8 <frame_dummy+0x10>)
 80001bc:	b11b      	cbz	r3, 80001c6 <frame_dummy+0xe>
 80001be:	4903      	ldr	r1, [pc, #12]	@ (80001cc <frame_dummy+0x14>)
 80001c0:	4803      	ldr	r0, [pc, #12]	@ (80001d0 <frame_dummy+0x18>)
 80001c2:	f3af 8000 	nop.w
 80001c6:	bd08      	pop	{r3, pc}
 80001c8:	00000000 	.word	0x00000000
 80001cc:	20000020 	.word	0x20000020
 80001d0:	08000488 	.word	0x08000488

080001d4 <delay>:
volatile unsigned int *GPIOA_ODR=(volatile unsigned int*)0x40020014;

volatile unsigned int *GPIOB_MODER=(volatile unsigned int*)0x40020400;
volatile unsigned int *GPIOB_ODR=(volatile unsigned int*)0x40020414;
void delay()
{
 80001d4:	b480      	push	{r7}
 80001d6:	b083      	sub	sp, #12
 80001d8:	af00      	add	r7, sp, #0
	int i = 0;
 80001da:	2300      	movs	r3, #0
 80001dc:	607b      	str	r3, [r7, #4]
	while (i < 90000) {
 80001de:	e003      	b.n	80001e8 <delay+0x14>
	    __asm("NOP");
 80001e0:	bf00      	nop
	    i++;
 80001e2:	687b      	ldr	r3, [r7, #4]
 80001e4:	3301      	adds	r3, #1
 80001e6:	607b      	str	r3, [r7, #4]
	while (i < 90000) {
 80001e8:	687b      	ldr	r3, [r7, #4]
 80001ea:	4a05      	ldr	r2, [pc, #20]	@ (8000200 <delay+0x2c>)
 80001ec:	4293      	cmp	r3, r2
 80001ee:	ddf7      	ble.n	80001e0 <delay+0xc>
	}

}
 80001f0:	bf00      	nop
 80001f2:	bf00      	nop
 80001f4:	370c      	adds	r7, #12
 80001f6:	46bd      	mov	sp, r7
 80001f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80001fc:	4770      	bx	lr
 80001fe:	bf00      	nop
 8000200:	00015f8f 	.word	0x00015f8f

08000204 <main>:

int main()
{
 8000204:	b580      	push	{r7, lr}
 8000206:	b082      	sub	sp, #8
 8000208:	af00      	add	r7, sp, #0
	*RCC_CR &=~(1<<16);
 800020a:	4b71      	ldr	r3, [pc, #452]	@ (80003d0 <main+0x1cc>)
 800020c:	681b      	ldr	r3, [r3, #0]
 800020e:	681a      	ldr	r2, [r3, #0]
 8000210:	4b6f      	ldr	r3, [pc, #444]	@ (80003d0 <main+0x1cc>)
 8000212:	681b      	ldr	r3, [r3, #0]
 8000214:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
 8000218:	601a      	str	r2, [r3, #0]
	*RCC_CR |=(1<<16);
 800021a:	4b6d      	ldr	r3, [pc, #436]	@ (80003d0 <main+0x1cc>)
 800021c:	681b      	ldr	r3, [r3, #0]
 800021e:	681a      	ldr	r2, [r3, #0]
 8000220:	4b6b      	ldr	r3, [pc, #428]	@ (80003d0 <main+0x1cc>)
 8000222:	681b      	ldr	r3, [r3, #0]
 8000224:	f442 3280 	orr.w	r2, r2, #65536	@ 0x10000
 8000228:	601a      	str	r2, [r3, #0]

	*RCC_CFGR &=~(1<<0);
 800022a:	4b6a      	ldr	r3, [pc, #424]	@ (80003d4 <main+0x1d0>)
 800022c:	681b      	ldr	r3, [r3, #0]
 800022e:	681a      	ldr	r2, [r3, #0]
 8000230:	4b68      	ldr	r3, [pc, #416]	@ (80003d4 <main+0x1d0>)
 8000232:	681b      	ldr	r3, [r3, #0]
 8000234:	f022 0201 	bic.w	r2, r2, #1
 8000238:	601a      	str	r2, [r3, #0]
	*RCC_CFGR |=(1<<0);
 800023a:	4b66      	ldr	r3, [pc, #408]	@ (80003d4 <main+0x1d0>)
 800023c:	681b      	ldr	r3, [r3, #0]
 800023e:	681a      	ldr	r2, [r3, #0]
 8000240:	4b64      	ldr	r3, [pc, #400]	@ (80003d4 <main+0x1d0>)
 8000242:	681b      	ldr	r3, [r3, #0]
 8000244:	f042 0201 	orr.w	r2, r2, #1
 8000248:	601a      	str	r2, [r3, #0]

	*RCC_AHB1ENR |=(1<<0);
 800024a:	4b63      	ldr	r3, [pc, #396]	@ (80003d8 <main+0x1d4>)
 800024c:	681b      	ldr	r3, [r3, #0]
 800024e:	681a      	ldr	r2, [r3, #0]
 8000250:	4b61      	ldr	r3, [pc, #388]	@ (80003d8 <main+0x1d4>)
 8000252:	681b      	ldr	r3, [r3, #0]
 8000254:	f042 0201 	orr.w	r2, r2, #1
 8000258:	601a      	str	r2, [r3, #0]
	*RCC_AHB1ENR |=(1<<1);
 800025a:	4b5f      	ldr	r3, [pc, #380]	@ (80003d8 <main+0x1d4>)
 800025c:	681b      	ldr	r3, [r3, #0]
 800025e:	681a      	ldr	r2, [r3, #0]
 8000260:	4b5d      	ldr	r3, [pc, #372]	@ (80003d8 <main+0x1d4>)
 8000262:	681b      	ldr	r3, [r3, #0]
 8000264:	f042 0202 	orr.w	r2, r2, #2
 8000268:	601a      	str	r2, [r3, #0]


    int j = 0;
 800026a:	2300      	movs	r3, #0
 800026c:	607b      	str	r3, [r7, #4]
    while (j <= 24) {
 800026e:	e01b      	b.n	80002a8 <main+0xa4>
        *GPIOA_MODER &= ~(1 << j);
 8000270:	4b5a      	ldr	r3, [pc, #360]	@ (80003dc <main+0x1d8>)
 8000272:	681b      	ldr	r3, [r3, #0]
 8000274:	681a      	ldr	r2, [r3, #0]
 8000276:	2101      	movs	r1, #1
 8000278:	687b      	ldr	r3, [r7, #4]
 800027a:	fa01 f303 	lsl.w	r3, r1, r3
 800027e:	43db      	mvns	r3, r3
 8000280:	4619      	mov	r1, r3
 8000282:	4b56      	ldr	r3, [pc, #344]	@ (80003dc <main+0x1d8>)
 8000284:	681b      	ldr	r3, [r3, #0]
 8000286:	400a      	ands	r2, r1
 8000288:	601a      	str	r2, [r3, #0]
        *GPIOA_MODER |=  (1 << j);
 800028a:	4b54      	ldr	r3, [pc, #336]	@ (80003dc <main+0x1d8>)
 800028c:	681b      	ldr	r3, [r3, #0]
 800028e:	681a      	ldr	r2, [r3, #0]
 8000290:	2101      	movs	r1, #1
 8000292:	687b      	ldr	r3, [r7, #4]
 8000294:	fa01 f303 	lsl.w	r3, r1, r3
 8000298:	4619      	mov	r1, r3
 800029a:	4b50      	ldr	r3, [pc, #320]	@ (80003dc <main+0x1d8>)
 800029c:	681b      	ldr	r3, [r3, #0]
 800029e:	430a      	orrs	r2, r1
 80002a0:	601a      	str	r2, [r3, #0]
        j += 2;
 80002a2:	687b      	ldr	r3, [r7, #4]
 80002a4:	3302      	adds	r3, #2
 80002a6:	607b      	str	r3, [r7, #4]
    while (j <= 24) {
 80002a8:	687b      	ldr	r3, [r7, #4]
 80002aa:	2b18      	cmp	r3, #24
 80002ac:	dde0      	ble.n	8000270 <main+0x6c>
    }


    int i = 0;
 80002ae:	2300      	movs	r3, #0
 80002b0:	603b      	str	r3, [r7, #0]
    while (i <= 24)
 80002b2:	e027      	b.n	8000304 <main+0x100>
    {
    	if ((i>=0&&i<=4)||(i>=10&&i<=30))
 80002b4:	683b      	ldr	r3, [r7, #0]
 80002b6:	2b00      	cmp	r3, #0
 80002b8:	db02      	blt.n	80002c0 <main+0xbc>
 80002ba:	683b      	ldr	r3, [r7, #0]
 80002bc:	2b04      	cmp	r3, #4
 80002be:	dd05      	ble.n	80002cc <main+0xc8>
 80002c0:	683b      	ldr	r3, [r7, #0]
 80002c2:	2b09      	cmp	r3, #9
 80002c4:	dd1b      	ble.n	80002fe <main+0xfa>
 80002c6:	683b      	ldr	r3, [r7, #0]
 80002c8:	2b1e      	cmp	r3, #30
 80002ca:	dc18      	bgt.n	80002fe <main+0xfa>
    	{
            *GPIOB_MODER &= ~(1 << i);
 80002cc:	4b44      	ldr	r3, [pc, #272]	@ (80003e0 <main+0x1dc>)
 80002ce:	681b      	ldr	r3, [r3, #0]
 80002d0:	681a      	ldr	r2, [r3, #0]
 80002d2:	2101      	movs	r1, #1
 80002d4:	683b      	ldr	r3, [r7, #0]
 80002d6:	fa01 f303 	lsl.w	r3, r1, r3
 80002da:	43db      	mvns	r3, r3
 80002dc:	4619      	mov	r1, r3
 80002de:	4b40      	ldr	r3, [pc, #256]	@ (80003e0 <main+0x1dc>)
 80002e0:	681b      	ldr	r3, [r3, #0]
 80002e2:	400a      	ands	r2, r1
 80002e4:	601a      	str	r2, [r3, #0]
            *GPIOB_MODER |=  (1 << i);
 80002e6:	4b3e      	ldr	r3, [pc, #248]	@ (80003e0 <main+0x1dc>)
 80002e8:	681b      	ldr	r3, [r3, #0]
 80002ea:	681a      	ldr	r2, [r3, #0]
 80002ec:	2101      	movs	r1, #1
 80002ee:	683b      	ldr	r3, [r7, #0]
 80002f0:	fa01 f303 	lsl.w	r3, r1, r3
 80002f4:	4619      	mov	r1, r3
 80002f6:	4b3a      	ldr	r3, [pc, #232]	@ (80003e0 <main+0x1dc>)
 80002f8:	681b      	ldr	r3, [r3, #0]
 80002fa:	430a      	orrs	r2, r1
 80002fc:	601a      	str	r2, [r3, #0]
    	}
        i += 2;
 80002fe:	683b      	ldr	r3, [r7, #0]
 8000300:	3302      	adds	r3, #2
 8000302:	603b      	str	r3, [r7, #0]
    while (i <= 24)
 8000304:	683b      	ldr	r3, [r7, #0]
 8000306:	2b18      	cmp	r3, #24
 8000308:	ddd4      	ble.n	80002b4 <main+0xb0>
    }

	*GPIOB_ODR |=(1<<0);
 800030a:	4b36      	ldr	r3, [pc, #216]	@ (80003e4 <main+0x1e0>)
 800030c:	681b      	ldr	r3, [r3, #0]
 800030e:	681a      	ldr	r2, [r3, #0]
 8000310:	4b34      	ldr	r3, [pc, #208]	@ (80003e4 <main+0x1e0>)
 8000312:	681b      	ldr	r3, [r3, #0]
 8000314:	f042 0201 	orr.w	r2, r2, #1
 8000318:	601a      	str	r2, [r3, #0]
	*GPIOB_ODR |=(1<<1);
 800031a:	4b32      	ldr	r3, [pc, #200]	@ (80003e4 <main+0x1e0>)
 800031c:	681b      	ldr	r3, [r3, #0]
 800031e:	681a      	ldr	r2, [r3, #0]
 8000320:	4b30      	ldr	r3, [pc, #192]	@ (80003e4 <main+0x1e0>)
 8000322:	681b      	ldr	r3, [r3, #0]
 8000324:	f042 0202 	orr.w	r2, r2, #2
 8000328:	601a      	str	r2, [r3, #0]
	*GPIOB_ODR |=(1<<2);
 800032a:	4b2e      	ldr	r3, [pc, #184]	@ (80003e4 <main+0x1e0>)
 800032c:	681b      	ldr	r3, [r3, #0]
 800032e:	681a      	ldr	r2, [r3, #0]
 8000330:	4b2c      	ldr	r3, [pc, #176]	@ (80003e4 <main+0x1e0>)
 8000332:	681b      	ldr	r3, [r3, #0]
 8000334:	f042 0204 	orr.w	r2, r2, #4
 8000338:	601a      	str	r2, [r3, #0]
	*GPIOB_ODR |=(1<<5);
 800033a:	4b2a      	ldr	r3, [pc, #168]	@ (80003e4 <main+0x1e0>)
 800033c:	681b      	ldr	r3, [r3, #0]
 800033e:	681a      	ldr	r2, [r3, #0]
 8000340:	4b28      	ldr	r3, [pc, #160]	@ (80003e4 <main+0x1e0>)
 8000342:	681b      	ldr	r3, [r3, #0]
 8000344:	f042 0220 	orr.w	r2, r2, #32
 8000348:	601a      	str	r2, [r3, #0]
	*GPIOB_ODR |=(1<<6);
 800034a:	4b26      	ldr	r3, [pc, #152]	@ (80003e4 <main+0x1e0>)
 800034c:	681b      	ldr	r3, [r3, #0]
 800034e:	681a      	ldr	r2, [r3, #0]
 8000350:	4b24      	ldr	r3, [pc, #144]	@ (80003e4 <main+0x1e0>)
 8000352:	681b      	ldr	r3, [r3, #0]
 8000354:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8000358:	601a      	str	r2, [r3, #0]
	*GPIOB_ODR |=(1<<7);
 800035a:	4b22      	ldr	r3, [pc, #136]	@ (80003e4 <main+0x1e0>)
 800035c:	681b      	ldr	r3, [r3, #0]
 800035e:	681a      	ldr	r2, [r3, #0]
 8000360:	4b20      	ldr	r3, [pc, #128]	@ (80003e4 <main+0x1e0>)
 8000362:	681b      	ldr	r3, [r3, #0]
 8000364:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 8000368:	601a      	str	r2, [r3, #0]
	*GPIOB_ODR |=(1<<8);
 800036a:	4b1e      	ldr	r3, [pc, #120]	@ (80003e4 <main+0x1e0>)
 800036c:	681b      	ldr	r3, [r3, #0]
 800036e:	681a      	ldr	r2, [r3, #0]
 8000370:	4b1c      	ldr	r3, [pc, #112]	@ (80003e4 <main+0x1e0>)
 8000372:	681b      	ldr	r3, [r3, #0]
 8000374:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8000378:	601a      	str	r2, [r3, #0]
	*GPIOB_ODR |=(1<<9);
 800037a:	4b1a      	ldr	r3, [pc, #104]	@ (80003e4 <main+0x1e0>)
 800037c:	681b      	ldr	r3, [r3, #0]
 800037e:	681a      	ldr	r2, [r3, #0]
 8000380:	4b18      	ldr	r3, [pc, #96]	@ (80003e4 <main+0x1e0>)
 8000382:	681b      	ldr	r3, [r3, #0]
 8000384:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8000388:	601a      	str	r2, [r3, #0]

    while (1)
    {
    	i = 0;
 800038a:	2300      	movs	r3, #0
 800038c:	603b      	str	r3, [r7, #0]
    	while (i <= 7) {
 800038e:	e00a      	b.n	80003a6 <main+0x1a2>
    		*GPIOA_ODR = (1 << i);
 8000390:	2201      	movs	r2, #1
 8000392:	683b      	ldr	r3, [r7, #0]
 8000394:	409a      	lsls	r2, r3
 8000396:	4b14      	ldr	r3, [pc, #80]	@ (80003e8 <main+0x1e4>)
 8000398:	681b      	ldr	r3, [r3, #0]
 800039a:	601a      	str	r2, [r3, #0]
    	            delay();
 800039c:	f7ff ff1a 	bl	80001d4 <delay>
    	            i++;
 80003a0:	683b      	ldr	r3, [r7, #0]
 80003a2:	3301      	adds	r3, #1
 80003a4:	603b      	str	r3, [r7, #0]
    	while (i <= 7) {
 80003a6:	683b      	ldr	r3, [r7, #0]
 80003a8:	2b07      	cmp	r3, #7
 80003aa:	ddf1      	ble.n	8000390 <main+0x18c>
    	        }
    	i = 6;
 80003ac:	2306      	movs	r3, #6
 80003ae:	603b      	str	r3, [r7, #0]
    	while (i >= 1) {
 80003b0:	e00a      	b.n	80003c8 <main+0x1c4>
    		*GPIOA_ODR = (1 << i);
 80003b2:	2201      	movs	r2, #1
 80003b4:	683b      	ldr	r3, [r7, #0]
 80003b6:	409a      	lsls	r2, r3
 80003b8:	4b0b      	ldr	r3, [pc, #44]	@ (80003e8 <main+0x1e4>)
 80003ba:	681b      	ldr	r3, [r3, #0]
 80003bc:	601a      	str	r2, [r3, #0]
    		delay();
 80003be:	f7ff ff09 	bl	80001d4 <delay>
    		i--;
 80003c2:	683b      	ldr	r3, [r7, #0]
 80003c4:	3b01      	subs	r3, #1
 80003c6:	603b      	str	r3, [r7, #0]
    	while (i >= 1) {
 80003c8:	683b      	ldr	r3, [r7, #0]
 80003ca:	2b00      	cmp	r3, #0
 80003cc:	dcf1      	bgt.n	80003b2 <main+0x1ae>
    	i = 0;
 80003ce:	e7dc      	b.n	800038a <main+0x186>
 80003d0:	20000000 	.word	0x20000000
 80003d4:	20000004 	.word	0x20000004
 80003d8:	20000008 	.word	0x20000008
 80003dc:	2000000c 	.word	0x2000000c
 80003e0:	20000014 	.word	0x20000014
 80003e4:	20000018 	.word	0x20000018
 80003e8:	20000010 	.word	0x20000010

080003ec <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80003ec:	480d      	ldr	r0, [pc, #52]	@ (8000424 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80003ee:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80003f0:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80003f4:	480c      	ldr	r0, [pc, #48]	@ (8000428 <LoopForever+0x6>)
  ldr r1, =_edata
 80003f6:	490d      	ldr	r1, [pc, #52]	@ (800042c <LoopForever+0xa>)
  ldr r2, =_sidata
 80003f8:	4a0d      	ldr	r2, [pc, #52]	@ (8000430 <LoopForever+0xe>)
  movs r3, #0
 80003fa:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80003fc:	e002      	b.n	8000404 <LoopCopyDataInit>

080003fe <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80003fe:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000400:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000402:	3304      	adds	r3, #4

08000404 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000404:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000406:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000408:	d3f9      	bcc.n	80003fe <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800040a:	4a0a      	ldr	r2, [pc, #40]	@ (8000434 <LoopForever+0x12>)
  ldr r4, =_ebss
 800040c:	4c0a      	ldr	r4, [pc, #40]	@ (8000438 <LoopForever+0x16>)
  movs r3, #0
 800040e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000410:	e001      	b.n	8000416 <LoopFillZerobss>

08000412 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000412:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000414:	3204      	adds	r2, #4

08000416 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000416:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000418:	d3fb      	bcc.n	8000412 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800041a:	f000 f811 	bl	8000440 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800041e:	f7ff fef1 	bl	8000204 <main>

08000422 <LoopForever>:

LoopForever:
  b LoopForever
 8000422:	e7fe      	b.n	8000422 <LoopForever>
  ldr   r0, =_estack
 8000424:	20010000 	.word	0x20010000
  ldr r0, =_sdata
 8000428:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800042c:	2000001c 	.word	0x2000001c
  ldr r2, =_sidata
 8000430:	080004a8 	.word	0x080004a8
  ldr r2, =_sbss
 8000434:	2000001c 	.word	0x2000001c
  ldr r4, =_ebss
 8000438:	20000038 	.word	0x20000038

0800043c <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800043c:	e7fe      	b.n	800043c <ADC_IRQHandler>
	...

08000440 <__libc_init_array>:
 8000440:	b570      	push	{r4, r5, r6, lr}
 8000442:	4d0d      	ldr	r5, [pc, #52]	@ (8000478 <__libc_init_array+0x38>)
 8000444:	4c0d      	ldr	r4, [pc, #52]	@ (800047c <__libc_init_array+0x3c>)
 8000446:	1b64      	subs	r4, r4, r5
 8000448:	10a4      	asrs	r4, r4, #2
 800044a:	2600      	movs	r6, #0
 800044c:	42a6      	cmp	r6, r4
 800044e:	d109      	bne.n	8000464 <__libc_init_array+0x24>
 8000450:	4d0b      	ldr	r5, [pc, #44]	@ (8000480 <__libc_init_array+0x40>)
 8000452:	4c0c      	ldr	r4, [pc, #48]	@ (8000484 <__libc_init_array+0x44>)
 8000454:	f000 f818 	bl	8000488 <_init>
 8000458:	1b64      	subs	r4, r4, r5
 800045a:	10a4      	asrs	r4, r4, #2
 800045c:	2600      	movs	r6, #0
 800045e:	42a6      	cmp	r6, r4
 8000460:	d105      	bne.n	800046e <__libc_init_array+0x2e>
 8000462:	bd70      	pop	{r4, r5, r6, pc}
 8000464:	f855 3b04 	ldr.w	r3, [r5], #4
 8000468:	4798      	blx	r3
 800046a:	3601      	adds	r6, #1
 800046c:	e7ee      	b.n	800044c <__libc_init_array+0xc>
 800046e:	f855 3b04 	ldr.w	r3, [r5], #4
 8000472:	4798      	blx	r3
 8000474:	3601      	adds	r6, #1
 8000476:	e7f2      	b.n	800045e <__libc_init_array+0x1e>
 8000478:	080004a0 	.word	0x080004a0
 800047c:	080004a0 	.word	0x080004a0
 8000480:	080004a0 	.word	0x080004a0
 8000484:	080004a4 	.word	0x080004a4

08000488 <_init>:
 8000488:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800048a:	bf00      	nop
 800048c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800048e:	bc08      	pop	{r3}
 8000490:	469e      	mov	lr, r3
 8000492:	4770      	bx	lr

08000494 <_fini>:
 8000494:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000496:	bf00      	nop
 8000498:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800049a:	bc08      	pop	{r3}
 800049c:	469e      	mov	lr, r3
 800049e:	4770      	bx	lr
