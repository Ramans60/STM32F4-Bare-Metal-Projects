
ASCII_Uppercase.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001c78  08000194  08000194  00001194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000c28  08001e0c  08001e0c  00002e0c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08002a34  08002a34  0000401c  2**0
                  CONTENTS
  4 .ARM          00000000  08002a34  08002a34  0000401c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08002a34  08002a34  0000401c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08002a34  08002a34  00003a34  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08002a38  08002a38  00003a38  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         0000001c  20000000  08002a3c  00004000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  2000001c  08002a58  0000401c  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000038  08002a58  00004038  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  0000401c  2**0
                  CONTENTS, READONLY
 12 .debug_info   000003f4  00000000  00000000  0000404c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000100  00000000  00000000  00004440  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000058  00000000  00000000  00004540  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000039  00000000  00000000  00004598  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00000acb  00000000  00000000  000045d1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000016a2  00000000  00000000  0000509c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00002f11  00000000  00000000  0000673e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  0000964f  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000000d8  00000000  00000000  00009694  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000061  00000000  00000000  0000976c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000194 <__do_global_dtors_aux>:
 8000194:	b510      	push	{r4, lr}
 8000196:	4c05      	ldr	r4, [pc, #20]	@ (80001ac <__do_global_dtors_aux+0x18>)
 8000198:	7823      	ldrb	r3, [r4, #0]
 800019a:	b933      	cbnz	r3, 80001aa <__do_global_dtors_aux+0x16>
 800019c:	4b04      	ldr	r3, [pc, #16]	@ (80001b0 <__do_global_dtors_aux+0x1c>)
 800019e:	b113      	cbz	r3, 80001a6 <__do_global_dtors_aux+0x12>
 80001a0:	4804      	ldr	r0, [pc, #16]	@ (80001b4 <__do_global_dtors_aux+0x20>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	2301      	movs	r3, #1
 80001a8:	7023      	strb	r3, [r4, #0]
 80001aa:	bd10      	pop	{r4, pc}
 80001ac:	2000001c 	.word	0x2000001c
 80001b0:	00000000 	.word	0x00000000
 80001b4:	08001df4 	.word	0x08001df4

080001b8 <frame_dummy>:
 80001b8:	b508      	push	{r3, lr}
 80001ba:	4b03      	ldr	r3, [pc, #12]	@ (80001c8 <frame_dummy+0x10>)
 80001bc:	b11b      	cbz	r3, 80001c6 <frame_dummy+0xe>
 80001be:	4903      	ldr	r1, [pc, #12]	@ (80001cc <frame_dummy+0x14>)
 80001c0:	4803      	ldr	r0, [pc, #12]	@ (80001d0 <frame_dummy+0x18>)
 80001c2:	f3af 8000 	nop.w
 80001c6:	bd08      	pop	{r3, pc}
 80001c8:	00000000 	.word	0x00000000
 80001cc:	20000020 	.word	0x20000020
 80001d0:	08001df4 	.word	0x08001df4

080001d4 <delay>:
volatile unsigned int *GPIOB_ODR=(volatile unsigned int*)0x40020414;



void delay()
{
 80001d4:	b480      	push	{r7}
 80001d6:	b083      	sub	sp, #12
 80001d8:	af00      	add	r7, sp, #0
    volatile int i = 0;
 80001da:	2300      	movs	r3, #0
 80001dc:	607b      	str	r3, [r7, #4]
    while (i < 100)
 80001de:	e003      	b.n	80001e8 <delay+0x14>
    {
        __asm("NOP");
 80001e0:	bf00      	nop
        i++;
 80001e2:	687b      	ldr	r3, [r7, #4]
 80001e4:	3301      	adds	r3, #1
 80001e6:	607b      	str	r3, [r7, #4]
    while (i < 100)
 80001e8:	687b      	ldr	r3, [r7, #4]
 80001ea:	2b63      	cmp	r3, #99	@ 0x63
 80001ec:	ddf8      	ble.n	80001e0 <delay+0xc>
    }
}
 80001ee:	bf00      	nop
 80001f0:	bf00      	nop
 80001f2:	370c      	adds	r7, #12
 80001f4:	46bd      	mov	sp, r7
 80001f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80001fa:	4770      	bx	lr

080001fc <delay1>:

void delay1()
{
 80001fc:	b490      	push	{r4, r7}
 80001fe:	b082      	sub	sp, #8
 8000200:	af00      	add	r7, sp, #0
    volatile long long i = 0;
 8000202:	f04f 0200 	mov.w	r2, #0
 8000206:	f04f 0300 	mov.w	r3, #0
 800020a:	e9c7 2300 	strd	r2, r3, [r7]
    while (i < 190000)
 800020e:	e007      	b.n	8000220 <delay1+0x24>
    {
        __asm("NOP");
 8000210:	bf00      	nop
        i++;
 8000212:	e9d7 2300 	ldrd	r2, r3, [r7]
 8000216:	1c50      	adds	r0, r2, #1
 8000218:	f143 0100 	adc.w	r1, r3, #0
 800021c:	e9c7 0100 	strd	r0, r1, [r7]
    while (i < 190000)
 8000220:	e9d7 2300 	ldrd	r2, r3, [r7]
 8000224:	4c05      	ldr	r4, [pc, #20]	@ (800023c <delay1+0x40>)
 8000226:	42a2      	cmp	r2, r4
 8000228:	f173 0300 	sbcs.w	r3, r3, #0
 800022c:	dbf0      	blt.n	8000210 <delay1+0x14>
    }
}
 800022e:	bf00      	nop
 8000230:	bf00      	nop
 8000232:	3708      	adds	r7, #8
 8000234:	46bd      	mov	sp, r7
 8000236:	bc90      	pop	{r4, r7}
 8000238:	4770      	bx	lr
 800023a:	bf00      	nop
 800023c:	0002e630 	.word	0x0002e630

08000240 <main>:


int main()
{
 8000240:	b5b0      	push	{r4, r5, r7, lr}
 8000242:	f6ad 4d38 	subw	sp, sp, #3128	@ 0xc38
 8000246:	af00      	add	r7, sp, #0
    *RCC_CR &=~(1<<16);
 8000248:	4b2d      	ldr	r3, [pc, #180]	@ (8000300 <main+0xc0>)
 800024a:	681b      	ldr	r3, [r3, #0]
 800024c:	681a      	ldr	r2, [r3, #0]
 800024e:	4b2c      	ldr	r3, [pc, #176]	@ (8000300 <main+0xc0>)
 8000250:	681b      	ldr	r3, [r3, #0]
 8000252:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
 8000256:	601a      	str	r2, [r3, #0]
    *RCC_CR |=(1<<16);
 8000258:	4b29      	ldr	r3, [pc, #164]	@ (8000300 <main+0xc0>)
 800025a:	681b      	ldr	r3, [r3, #0]
 800025c:	681a      	ldr	r2, [r3, #0]
 800025e:	4b28      	ldr	r3, [pc, #160]	@ (8000300 <main+0xc0>)
 8000260:	681b      	ldr	r3, [r3, #0]
 8000262:	f442 3280 	orr.w	r2, r2, #65536	@ 0x10000
 8000266:	601a      	str	r2, [r3, #0]

    *RCC_CFGR &=~(1<<0);
 8000268:	4b26      	ldr	r3, [pc, #152]	@ (8000304 <main+0xc4>)
 800026a:	681b      	ldr	r3, [r3, #0]
 800026c:	681a      	ldr	r2, [r3, #0]
 800026e:	4b25      	ldr	r3, [pc, #148]	@ (8000304 <main+0xc4>)
 8000270:	681b      	ldr	r3, [r3, #0]
 8000272:	f022 0201 	bic.w	r2, r2, #1
 8000276:	601a      	str	r2, [r3, #0]
    *RCC_CFGR |=(1<<0);
 8000278:	4b22      	ldr	r3, [pc, #136]	@ (8000304 <main+0xc4>)
 800027a:	681b      	ldr	r3, [r3, #0]
 800027c:	681a      	ldr	r2, [r3, #0]
 800027e:	4b21      	ldr	r3, [pc, #132]	@ (8000304 <main+0xc4>)
 8000280:	681b      	ldr	r3, [r3, #0]
 8000282:	f042 0201 	orr.w	r2, r2, #1
 8000286:	601a      	str	r2, [r3, #0]

    *RCC_AHB1ENR |=(1<<0);
 8000288:	4b1f      	ldr	r3, [pc, #124]	@ (8000308 <main+0xc8>)
 800028a:	681b      	ldr	r3, [r3, #0]
 800028c:	681a      	ldr	r2, [r3, #0]
 800028e:	4b1e      	ldr	r3, [pc, #120]	@ (8000308 <main+0xc8>)
 8000290:	681b      	ldr	r3, [r3, #0]
 8000292:	f042 0201 	orr.w	r2, r2, #1
 8000296:	601a      	str	r2, [r3, #0]
    *RCC_AHB1ENR |=(1<<1);
 8000298:	4b1b      	ldr	r3, [pc, #108]	@ (8000308 <main+0xc8>)
 800029a:	681b      	ldr	r3, [r3, #0]
 800029c:	681a      	ldr	r2, [r3, #0]
 800029e:	4b1a      	ldr	r3, [pc, #104]	@ (8000308 <main+0xc8>)
 80002a0:	681b      	ldr	r3, [r3, #0]
 80002a2:	f042 0202 	orr.w	r2, r2, #2
 80002a6:	601a      	str	r2, [r3, #0]

    int j = 0;
 80002a8:	2300      	movs	r3, #0
 80002aa:	f8c7 3c34 	str.w	r3, [r7, #3124]	@ 0xc34
    while (j <= 14)
 80002ae:	e01f      	b.n	80002f0 <main+0xb0>
    {
        *GPIOA_MODER &= ~(1 << j);
 80002b0:	4b16      	ldr	r3, [pc, #88]	@ (800030c <main+0xcc>)
 80002b2:	681b      	ldr	r3, [r3, #0]
 80002b4:	681a      	ldr	r2, [r3, #0]
 80002b6:	2101      	movs	r1, #1
 80002b8:	f8d7 3c34 	ldr.w	r3, [r7, #3124]	@ 0xc34
 80002bc:	fa01 f303 	lsl.w	r3, r1, r3
 80002c0:	43db      	mvns	r3, r3
 80002c2:	4619      	mov	r1, r3
 80002c4:	4b11      	ldr	r3, [pc, #68]	@ (800030c <main+0xcc>)
 80002c6:	681b      	ldr	r3, [r3, #0]
 80002c8:	400a      	ands	r2, r1
 80002ca:	601a      	str	r2, [r3, #0]
        *GPIOA_MODER |=  (1 << j);
 80002cc:	4b0f      	ldr	r3, [pc, #60]	@ (800030c <main+0xcc>)
 80002ce:	681b      	ldr	r3, [r3, #0]
 80002d0:	681a      	ldr	r2, [r3, #0]
 80002d2:	2101      	movs	r1, #1
 80002d4:	f8d7 3c34 	ldr.w	r3, [r7, #3124]	@ 0xc34
 80002d8:	fa01 f303 	lsl.w	r3, r1, r3
 80002dc:	4619      	mov	r1, r3
 80002de:	4b0b      	ldr	r3, [pc, #44]	@ (800030c <main+0xcc>)
 80002e0:	681b      	ldr	r3, [r3, #0]
 80002e2:	430a      	orrs	r2, r1
 80002e4:	601a      	str	r2, [r3, #0]
        j += 2;
 80002e6:	f8d7 3c34 	ldr.w	r3, [r7, #3124]	@ 0xc34
 80002ea:	3302      	adds	r3, #2
 80002ec:	f8c7 3c34 	str.w	r3, [r7, #3124]	@ 0xc34
    while (j <= 14)
 80002f0:	f8d7 3c34 	ldr.w	r3, [r7, #3124]	@ 0xc34
 80002f4:	2b0e      	cmp	r3, #14
 80002f6:	dddb      	ble.n	80002b0 <main+0x70>
    }

    int i = 0;
 80002f8:	2300      	movs	r3, #0
 80002fa:	f8c7 3c30 	str.w	r3, [r7, #3120]	@ 0xc30
    while (i <= 24)
 80002fe:	e037      	b.n	8000370 <main+0x130>
 8000300:	20000000 	.word	0x20000000
 8000304:	20000004 	.word	0x20000004
 8000308:	20000008 	.word	0x20000008
 800030c:	2000000c 	.word	0x2000000c
    {
        if ((i>=0&&i<=4)||(i>=10&&i<=18))
 8000310:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 8000314:	2b00      	cmp	r3, #0
 8000316:	db03      	blt.n	8000320 <main+0xe0>
 8000318:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 800031c:	2b04      	cmp	r3, #4
 800031e:	dd07      	ble.n	8000330 <main+0xf0>
 8000320:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 8000324:	2b09      	cmp	r3, #9
 8000326:	dd1e      	ble.n	8000366 <main+0x126>
 8000328:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 800032c:	2b12      	cmp	r3, #18
 800032e:	dc1a      	bgt.n	8000366 <main+0x126>
        {
            *GPIOB_MODER &= ~(1 << i);
 8000330:	4ba8      	ldr	r3, [pc, #672]	@ (80005d4 <main+0x394>)
 8000332:	681b      	ldr	r3, [r3, #0]
 8000334:	681a      	ldr	r2, [r3, #0]
 8000336:	2101      	movs	r1, #1
 8000338:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 800033c:	fa01 f303 	lsl.w	r3, r1, r3
 8000340:	43db      	mvns	r3, r3
 8000342:	4619      	mov	r1, r3
 8000344:	4ba3      	ldr	r3, [pc, #652]	@ (80005d4 <main+0x394>)
 8000346:	681b      	ldr	r3, [r3, #0]
 8000348:	400a      	ands	r2, r1
 800034a:	601a      	str	r2, [r3, #0]
            *GPIOB_MODER |=  (1 << i);
 800034c:	4ba1      	ldr	r3, [pc, #644]	@ (80005d4 <main+0x394>)
 800034e:	681b      	ldr	r3, [r3, #0]
 8000350:	681a      	ldr	r2, [r3, #0]
 8000352:	2101      	movs	r1, #1
 8000354:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 8000358:	fa01 f303 	lsl.w	r3, r1, r3
 800035c:	4619      	mov	r1, r3
 800035e:	4b9d      	ldr	r3, [pc, #628]	@ (80005d4 <main+0x394>)
 8000360:	681b      	ldr	r3, [r3, #0]
 8000362:	430a      	orrs	r2, r1
 8000364:	601a      	str	r2, [r3, #0]
        }
        i += 2;
 8000366:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 800036a:	3302      	adds	r3, #2
 800036c:	f8c7 3c30 	str.w	r3, [r7, #3120]	@ 0xc30
    while (i <= 24)
 8000370:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 8000374:	2b18      	cmp	r3, #24
 8000376:	ddcb      	ble.n	8000310 <main+0xd0>
    }
    // A
    int arrA[18][2] = {
 8000378:	4a97      	ldr	r2, [pc, #604]	@ (80005d8 <main+0x398>)
 800037a:	f607 339c 	addw	r3, r7, #2972	@ 0xb9c
 800037e:	4611      	mov	r1, r2
 8000380:	2290      	movs	r2, #144	@ 0x90
 8000382:	4618      	mov	r0, r3
 8000384:	f001 fd28 	bl	8001dd8 <memcpy>
    		{0,6},{0,7},{0,8},{1,5},{1,9},{2,5},{2,9},{3,5},{3,6},{3,7},
			{3,8},{3,9},{4,5},{4,9},{5,5},{5,9},{6,5},{6,9}
    };
    // B
    int arrB[20][2] = {
 8000388:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 800038c:	f5a3 739e 	sub.w	r3, r3, #316	@ 0x13c
 8000390:	4a92      	ldr	r2, [pc, #584]	@ (80005dc <main+0x39c>)
 8000392:	4618      	mov	r0, r3
 8000394:	4611      	mov	r1, r2
 8000396:	23a0      	movs	r3, #160	@ 0xa0
 8000398:	461a      	mov	r2, r3
 800039a:	f001 fd1d 	bl	8001dd8 <memcpy>
    		{0,6},{0,7},{0,8},{0,9},{1,5},{1,9},{2,5},{2,9},{3,6},{3,7},
			{3,8},{3,9},{4,5},{4,9},{5,5},{5,9},{6,6},{6,7},{6,8},{6,9}
    };
    // C
    int arrC[13][2] = {
 800039e:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 80003a2:	f5a3 73d2 	sub.w	r3, r3, #420	@ 0x1a4
 80003a6:	4a8e      	ldr	r2, [pc, #568]	@ (80005e0 <main+0x3a0>)
 80003a8:	4618      	mov	r0, r3
 80003aa:	4611      	mov	r1, r2
 80003ac:	2368      	movs	r3, #104	@ 0x68
 80003ae:	461a      	mov	r2, r3
 80003b0:	f001 fd12 	bl	8001dd8 <memcpy>
    		{0,5},{0,6},{0,7},{0,8},{1,9},{2,9},{3,9},{4,9},{5,9},{6,5},
			{6,6},{6,7},{6,8}
    };
    // D
    int arrD[18][2] = {
 80003b4:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 80003b8:	f5a3 730d 	sub.w	r3, r3, #564	@ 0x234
 80003bc:	4a89      	ldr	r2, [pc, #548]	@ (80005e4 <main+0x3a4>)
 80003be:	4618      	mov	r0, r3
 80003c0:	4611      	mov	r1, r2
 80003c2:	2390      	movs	r3, #144	@ 0x90
 80003c4:	461a      	mov	r2, r3
 80003c6:	f001 fd07 	bl	8001dd8 <memcpy>
    		{0,6},{0,7},{0,8},{0,9},{1,5},{1,9},{2,5},{2,9},{3,5},{3,9},
			{4,5},{4,9},{5,5},{5,9},{6,6},{6,7},{6,8},{6,9}
    };
    // E
    int arrE[19][2] = {
 80003ca:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 80003ce:	f5a3 7333 	sub.w	r3, r3, #716	@ 0x2cc
 80003d2:	4a85      	ldr	r2, [pc, #532]	@ (80005e8 <main+0x3a8>)
 80003d4:	4618      	mov	r0, r3
 80003d6:	4611      	mov	r1, r2
 80003d8:	2398      	movs	r3, #152	@ 0x98
 80003da:	461a      	mov	r2, r3
 80003dc:	f001 fcfc 	bl	8001dd8 <memcpy>
    		{0,5},{0,6},{0,7},{0,8},{0,9},{1,9},{2,9},{3,5},{3,6},{3,7},
			{3,8},{3,9},{4,9},{5,9},{6,5},{6,6},{6,7},{6,8},{6,9}
    };
    // F
    int arrF[15][2] = {
 80003e0:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 80003e4:	f5a3 7351 	sub.w	r3, r3, #836	@ 0x344
 80003e8:	4a80      	ldr	r2, [pc, #512]	@ (80005ec <main+0x3ac>)
 80003ea:	4618      	mov	r0, r3
 80003ec:	4611      	mov	r1, r2
 80003ee:	2378      	movs	r3, #120	@ 0x78
 80003f0:	461a      	mov	r2, r3
 80003f2:	f001 fcf1 	bl	8001dd8 <memcpy>
    		{0,5},{0,6},{0,7},{0,8},{0,9},{1,9},{2,9},{3,5},{3,6},{3,7},
			{3,8},{3,9},{4,9},{5,9},{6,9}
    };
    // G
    int arrG[15][2] = {
 80003f6:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 80003fa:	f5a3 736f 	sub.w	r3, r3, #956	@ 0x3bc
 80003fe:	4a7c      	ldr	r2, [pc, #496]	@ (80005f0 <main+0x3b0>)
 8000400:	4618      	mov	r0, r3
 8000402:	4611      	mov	r1, r2
 8000404:	2378      	movs	r3, #120	@ 0x78
 8000406:	461a      	mov	r2, r3
 8000408:	f001 fce6 	bl	8001dd8 <memcpy>
    		{0,6},{0,7},{0,8},{1,9},{2,9},{3,5},{3,6},{3,9},{4,5},{4,9},
			{5,5},{5,9},{6,6},{6,7},{6,8}
    };
    // H
    int arrH[17][2] = {
 800040c:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 8000410:	f2a3 4344 	subw	r3, r3, #1092	@ 0x444
 8000414:	4a77      	ldr	r2, [pc, #476]	@ (80005f4 <main+0x3b4>)
 8000416:	4618      	mov	r0, r3
 8000418:	4611      	mov	r1, r2
 800041a:	2388      	movs	r3, #136	@ 0x88
 800041c:	461a      	mov	r2, r3
 800041e:	f001 fcdb 	bl	8001dd8 <memcpy>
    		{0,5},{0,9},{1,5},{1,9},{2,5},{2,9},{3,5},{3,6},{3,7},{3,8},
			{3,9},{4,5},{4,9},{5,5},{5,9},{6,5},{6,9}
    };
    // I
    int arrI[7][2] = {
 8000422:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 8000426:	f2a3 437c 	subw	r3, r3, #1148	@ 0x47c
 800042a:	4a73      	ldr	r2, [pc, #460]	@ (80005f8 <main+0x3b8>)
 800042c:	461c      	mov	r4, r3
 800042e:	4615      	mov	r5, r2
 8000430:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8000432:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8000434:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8000436:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8000438:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800043a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800043c:	e895 0003 	ldmia.w	r5, {r0, r1}
 8000440:	e884 0003 	stmia.w	r4, {r0, r1}
    		{0,7},{1,7},{2,7},{3,7},{4,7},{5,7},{6,7}
    };
    //J
    int arrJ[12][2] = {
 8000444:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 8000448:	f2a3 43dc 	subw	r3, r3, #1244	@ 0x4dc
 800044c:	4a6b      	ldr	r2, [pc, #428]	@ (80005fc <main+0x3bc>)
 800044e:	4618      	mov	r0, r3
 8000450:	4611      	mov	r1, r2
 8000452:	2360      	movs	r3, #96	@ 0x60
 8000454:	461a      	mov	r2, r3
 8000456:	f001 fcbf 	bl	8001dd8 <memcpy>
    		{0,5},{0,6},{0,7},{1,5},{2,5},{3,5},{4,5},{5,5},{6,6},{6,7},
			{6,8},{5,9}
    };
    // K
    int arrK[14][2] = {
 800045a:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 800045e:	f2a3 534c 	subw	r3, r3, #1356	@ 0x54c
 8000462:	4a67      	ldr	r2, [pc, #412]	@ (8000600 <main+0x3c0>)
 8000464:	4618      	mov	r0, r3
 8000466:	4611      	mov	r1, r2
 8000468:	2370      	movs	r3, #112	@ 0x70
 800046a:	461a      	mov	r2, r3
 800046c:	f001 fcb4 	bl	8001dd8 <memcpy>
    		{0,5},{0,9},{1,6},{1,9},{2,7},{2,9},{3,8},{3,9},{4,7},{4,9},
			{5,6},{5,9},{6,5},{6,9}
    };
    // L
    int arrL[11][2] = {
 8000470:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 8000474:	f2a3 53a4 	subw	r3, r3, #1444	@ 0x5a4
 8000478:	4a62      	ldr	r2, [pc, #392]	@ (8000604 <main+0x3c4>)
 800047a:	4618      	mov	r0, r3
 800047c:	4611      	mov	r1, r2
 800047e:	2358      	movs	r3, #88	@ 0x58
 8000480:	461a      	mov	r2, r3
 8000482:	f001 fca9 	bl	8001dd8 <memcpy>
    		{0,9},{1,9},{2,9},{3,9},{4,9},{5,9},{6,5},{6,6},{6,7},{6,8},
			{6,9}
    };
    // M
    int arrM[17][2] = {
 8000486:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 800048a:	f2a3 632c 	subw	r3, r3, #1580	@ 0x62c
 800048e:	4a5e      	ldr	r2, [pc, #376]	@ (8000608 <main+0x3c8>)
 8000490:	4618      	mov	r0, r3
 8000492:	4611      	mov	r1, r2
 8000494:	2388      	movs	r3, #136	@ 0x88
 8000496:	461a      	mov	r2, r3
 8000498:	f001 fc9e 	bl	8001dd8 <memcpy>
    		{0,5},{0,9},{1,5},{1,6},{1,8},{1,9},{2,5},{2,7},{2,9},{3,5},
			{3,9},{4,5},{4,9},{5,5},{5,9},{6,5},{6,9}
    };
    // N
    int arrN[17][2] = {
 800049c:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 80004a0:	f2a3 63b4 	subw	r3, r3, #1716	@ 0x6b4
 80004a4:	4a59      	ldr	r2, [pc, #356]	@ (800060c <main+0x3cc>)
 80004a6:	4618      	mov	r0, r3
 80004a8:	4611      	mov	r1, r2
 80004aa:	2388      	movs	r3, #136	@ 0x88
 80004ac:	461a      	mov	r2, r3
 80004ae:	f001 fc93 	bl	8001dd8 <memcpy>
    		{0,5},{0,9},{1,5},{1,9},{2,5},{2,8},{2,9},{3,5},{3,7},{3,9},
    		{4,5},{4,6},{4,9},{5,5},{5,9},{6,5},{6,9}
    };
    // O
    int arrO[16][2] = {
 80004b2:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 80004b6:	f2a3 7334 	subw	r3, r3, #1844	@ 0x734
 80004ba:	4a55      	ldr	r2, [pc, #340]	@ (8000610 <main+0x3d0>)
 80004bc:	4618      	mov	r0, r3
 80004be:	4611      	mov	r1, r2
 80004c0:	2380      	movs	r3, #128	@ 0x80
 80004c2:	461a      	mov	r2, r3
 80004c4:	f001 fc88 	bl	8001dd8 <memcpy>
    		{0,6},{0,7},{0,8},{1,5},{1,9},{2,5},{2,9},{3,5},{3,9},{4,5},
			{4,9},{5,5},{5,9},{6,6},{6,7},{6,8}
    };
    // P
    int arrP[15][2] = {
 80004c8:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 80004cc:	f2a3 73ac 	subw	r3, r3, #1964	@ 0x7ac
 80004d0:	4a50      	ldr	r2, [pc, #320]	@ (8000614 <main+0x3d4>)
 80004d2:	4618      	mov	r0, r3
 80004d4:	4611      	mov	r1, r2
 80004d6:	2378      	movs	r3, #120	@ 0x78
 80004d8:	461a      	mov	r2, r3
 80004da:	f001 fc7d 	bl	8001dd8 <memcpy>
    		{0,6},{0,7},{0,8},{0,9},{1,5},{1,9},{2,5},{2,9},{3,6},{3,7},
			{3,8},{3,9},{4,9},{5,9},{6,9}
    };
    // Q
    int arrQ[17][2] = {
 80004de:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 80004e2:	f6a3 0334 	subw	r3, r3, #2100	@ 0x834
 80004e6:	4a4c      	ldr	r2, [pc, #304]	@ (8000618 <main+0x3d8>)
 80004e8:	4618      	mov	r0, r3
 80004ea:	4611      	mov	r1, r2
 80004ec:	2388      	movs	r3, #136	@ 0x88
 80004ee:	461a      	mov	r2, r3
 80004f0:	f001 fc72 	bl	8001dd8 <memcpy>
    		{0,6},{0,7},{0,8},{1,5},{1,9},{2,5},{2,9},{3,5},{3,9},{4,5},
			{4,7},{4,9},{5,6},{5,9},{6,5},{6,7},{6,8}
    };
    // R
    int arrR[18][2] = {
 80004f4:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 80004f8:	f6a3 03c4 	subw	r3, r3, #2244	@ 0x8c4
 80004fc:	4a47      	ldr	r2, [pc, #284]	@ (800061c <main+0x3dc>)
 80004fe:	4618      	mov	r0, r3
 8000500:	4611      	mov	r1, r2
 8000502:	2390      	movs	r3, #144	@ 0x90
 8000504:	461a      	mov	r2, r3
 8000506:	f001 fc67 	bl	8001dd8 <memcpy>
    		{0,6},{0,7},{0,8},{0,9},{1,5},{1,9},{2,5},{2,9},{3,6},{3,7},
			{3,8},{3,9},{4,5},{4,9},{5,5},{5,9},{6,5},{6,9}
    };
    // S
    int arrS[15][2] = {
 800050a:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 800050e:	f6a3 133c 	subw	r3, r3, #2364	@ 0x93c
 8000512:	4a43      	ldr	r2, [pc, #268]	@ (8000620 <main+0x3e0>)
 8000514:	4618      	mov	r0, r3
 8000516:	4611      	mov	r1, r2
 8000518:	2378      	movs	r3, #120	@ 0x78
 800051a:	461a      	mov	r2, r3
 800051c:	f001 fc5c 	bl	8001dd8 <memcpy>
    		{0,5},{0,6},{0,7},{0,8},{1,9},{2,9},{3,6},{3,7},{3,8},{4,5},
			{5,5},{6,6},{6,7},{6,8},{6,9}
    };
    //T
    int arrT[11][2] = {
 8000520:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 8000524:	f6a3 1394 	subw	r3, r3, #2452	@ 0x994
 8000528:	4a3e      	ldr	r2, [pc, #248]	@ (8000624 <main+0x3e4>)
 800052a:	4618      	mov	r0, r3
 800052c:	4611      	mov	r1, r2
 800052e:	2358      	movs	r3, #88	@ 0x58
 8000530:	461a      	mov	r2, r3
 8000532:	f001 fc51 	bl	8001dd8 <memcpy>
    		{0,5},{0,6},{0,7},{0,8},{0,9},{1,7},{2,7},{3,7},{4,7},{5,7},
			{6,7}
    };
    // U
    int arrU[15][2] = {
 8000536:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 800053a:	f6a3 230c 	subw	r3, r3, #2572	@ 0xa0c
 800053e:	4a3a      	ldr	r2, [pc, #232]	@ (8000628 <main+0x3e8>)
 8000540:	4618      	mov	r0, r3
 8000542:	4611      	mov	r1, r2
 8000544:	2378      	movs	r3, #120	@ 0x78
 8000546:	461a      	mov	r2, r3
 8000548:	f001 fc46 	bl	8001dd8 <memcpy>
    		{0,5},{0,9},{1,5},{1,9},{2,5},{2,9},{3,5},{3,9},{4,5},{4,9},
			{5,5},{5,9},{6,6},{6,7},{6,8}
    };
    // V
    int arrV[12][2] = {
 800054c:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 8000550:	f6a3 236c 	subw	r3, r3, #2668	@ 0xa6c
 8000554:	4a35      	ldr	r2, [pc, #212]	@ (800062c <main+0x3ec>)
 8000556:	4618      	mov	r0, r3
 8000558:	4611      	mov	r1, r2
 800055a:	2360      	movs	r3, #96	@ 0x60
 800055c:	461a      	mov	r2, r3
 800055e:	f001 fc3b 	bl	8001dd8 <memcpy>
    		{0,5},{0,9},{1,5},{1,9},{2,5},{2,9},{3,6},{3,8},{4,6},{4,8},
			{5,7},{6,7}
    };
    // W
    int arrW[19][2] = {
 8000562:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 8000566:	f6a3 3304 	subw	r3, r3, #2820	@ 0xb04
 800056a:	4a31      	ldr	r2, [pc, #196]	@ (8000630 <main+0x3f0>)
 800056c:	4618      	mov	r0, r3
 800056e:	4611      	mov	r1, r2
 8000570:	2398      	movs	r3, #152	@ 0x98
 8000572:	461a      	mov	r2, r3
 8000574:	f001 fc30 	bl	8001dd8 <memcpy>
    		{0,5},{0,9},{1,5},{1,9},{2,5},{2,7},{2,9},{3,5},{3,7},{3,9},
			{4,5},{4,7},{4,9},{5,5},{5,6},{5,8},{5,9},{6,5},{6,9}
    };
    // X
    int arrX[13][2] = {
 8000578:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 800057c:	f6a3 336c 	subw	r3, r3, #2924	@ 0xb6c
 8000580:	4a2c      	ldr	r2, [pc, #176]	@ (8000634 <main+0x3f4>)
 8000582:	4618      	mov	r0, r3
 8000584:	4611      	mov	r1, r2
 8000586:	2368      	movs	r3, #104	@ 0x68
 8000588:	461a      	mov	r2, r3
 800058a:	f001 fc25 	bl	8001dd8 <memcpy>
    		{0,5},{0,9},{1,5},{1,9},{2,6},{2,8},{3,7},{4,6},{4,8},{5,5},
			{5,9},{6,5},{6,9}
    };
    // Y
    int arrY[10][2] = {
 800058e:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 8000592:	f6a3 33bc 	subw	r3, r3, #3004	@ 0xbbc
 8000596:	4a28      	ldr	r2, [pc, #160]	@ (8000638 <main+0x3f8>)
 8000598:	4618      	mov	r0, r3
 800059a:	4611      	mov	r1, r2
 800059c:	2350      	movs	r3, #80	@ 0x50
 800059e:	461a      	mov	r2, r3
 80005a0:	f001 fc1a 	bl	8001dd8 <memcpy>
    		{0,5},{0,9},{1,5},{1,9},{2,6},{2,8},{3,7},{4,7},{5,7},{6,7}
    };
    // Z
    int arrZ[15][2] = {
 80005a4:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 80005a8:	f6a3 4334 	subw	r3, r3, #3124	@ 0xc34
 80005ac:	4a23      	ldr	r2, [pc, #140]	@ (800063c <main+0x3fc>)
 80005ae:	4618      	mov	r0, r3
 80005b0:	4611      	mov	r1, r2
 80005b2:	2378      	movs	r3, #120	@ 0x78
 80005b4:	461a      	mov	r2, r3
 80005b6:	f001 fc0f 	bl	8001dd8 <memcpy>
			{6,5},{6,6},{6,7},{6,8},{6,9}
    };

    while (1)
    {
    	int c = 1000;
 80005ba:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 80005be:	f8c7 3c2c 	str.w	r3, [r7, #3116]	@ 0xc2c
    	for (j = 0; j < c; j++)
 80005c2:	2300      	movs	r3, #0
 80005c4:	f8c7 3c34 	str.w	r3, [r7, #3124]	@ 0xc34
 80005c8:	e098      	b.n	80006fc <main+0x4bc>
    	{
    		for (i = 0; i < 18; i++)
 80005ca:	2300      	movs	r3, #0
 80005cc:	f8c7 3c30 	str.w	r3, [r7, #3120]	@ 0xc30
 80005d0:	e08b      	b.n	80006ea <main+0x4aa>
 80005d2:	bf00      	nop
 80005d4:	20000014 	.word	0x20000014
 80005d8:	08001e0c 	.word	0x08001e0c
 80005dc:	08001e9c 	.word	0x08001e9c
 80005e0:	08001f3c 	.word	0x08001f3c
 80005e4:	08001fa4 	.word	0x08001fa4
 80005e8:	08002034 	.word	0x08002034
 80005ec:	080020cc 	.word	0x080020cc
 80005f0:	08002144 	.word	0x08002144
 80005f4:	080021bc 	.word	0x080021bc
 80005f8:	08002244 	.word	0x08002244
 80005fc:	0800227c 	.word	0x0800227c
 8000600:	080022dc 	.word	0x080022dc
 8000604:	0800234c 	.word	0x0800234c
 8000608:	080023a4 	.word	0x080023a4
 800060c:	0800242c 	.word	0x0800242c
 8000610:	080024b4 	.word	0x080024b4
 8000614:	08002534 	.word	0x08002534
 8000618:	080025ac 	.word	0x080025ac
 800061c:	08002634 	.word	0x08002634
 8000620:	080026c4 	.word	0x080026c4
 8000624:	0800273c 	.word	0x0800273c
 8000628:	08002794 	.word	0x08002794
 800062c:	0800280c 	.word	0x0800280c
 8000630:	0800286c 	.word	0x0800286c
 8000634:	08002904 	.word	0x08002904
 8000638:	0800296c 	.word	0x0800296c
 800063c:	080029bc 	.word	0x080029bc
    		{
    			*GPIOA_ODR |= (1 << arrA[i][0]);
 8000640:	4ba7      	ldr	r3, [pc, #668]	@ (80008e0 <main+0x6a0>)
 8000642:	681b      	ldr	r3, [r3, #0]
 8000644:	681a      	ldr	r2, [r3, #0]
 8000646:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 800064a:	00db      	lsls	r3, r3, #3
 800064c:	f603 4338 	addw	r3, r3, #3128	@ 0xc38
 8000650:	443b      	add	r3, r7
 8000652:	f853 3c9c 	ldr.w	r3, [r3, #-156]
 8000656:	2101      	movs	r1, #1
 8000658:	fa01 f303 	lsl.w	r3, r1, r3
 800065c:	4619      	mov	r1, r3
 800065e:	4ba0      	ldr	r3, [pc, #640]	@ (80008e0 <main+0x6a0>)
 8000660:	681b      	ldr	r3, [r3, #0]
 8000662:	430a      	orrs	r2, r1
 8000664:	601a      	str	r2, [r3, #0]
    			*GPIOB_ODR |= (1 << arrA[i][1]);
 8000666:	4b9f      	ldr	r3, [pc, #636]	@ (80008e4 <main+0x6a4>)
 8000668:	681b      	ldr	r3, [r3, #0]
 800066a:	681a      	ldr	r2, [r3, #0]
 800066c:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 8000670:	00db      	lsls	r3, r3, #3
 8000672:	f603 4338 	addw	r3, r3, #3128	@ 0xc38
 8000676:	443b      	add	r3, r7
 8000678:	f853 3c98 	ldr.w	r3, [r3, #-152]
 800067c:	2101      	movs	r1, #1
 800067e:	fa01 f303 	lsl.w	r3, r1, r3
 8000682:	4619      	mov	r1, r3
 8000684:	4b97      	ldr	r3, [pc, #604]	@ (80008e4 <main+0x6a4>)
 8000686:	681b      	ldr	r3, [r3, #0]
 8000688:	430a      	orrs	r2, r1
 800068a:	601a      	str	r2, [r3, #0]
    			delay();
 800068c:	f7ff fda2 	bl	80001d4 <delay>
    			*GPIOA_ODR &= ~(1 << arrA[i][0]);
 8000690:	4b93      	ldr	r3, [pc, #588]	@ (80008e0 <main+0x6a0>)
 8000692:	681b      	ldr	r3, [r3, #0]
 8000694:	681a      	ldr	r2, [r3, #0]
 8000696:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 800069a:	00db      	lsls	r3, r3, #3
 800069c:	f603 4338 	addw	r3, r3, #3128	@ 0xc38
 80006a0:	443b      	add	r3, r7
 80006a2:	f853 3c9c 	ldr.w	r3, [r3, #-156]
 80006a6:	2101      	movs	r1, #1
 80006a8:	fa01 f303 	lsl.w	r3, r1, r3
 80006ac:	43db      	mvns	r3, r3
 80006ae:	4619      	mov	r1, r3
 80006b0:	4b8b      	ldr	r3, [pc, #556]	@ (80008e0 <main+0x6a0>)
 80006b2:	681b      	ldr	r3, [r3, #0]
 80006b4:	400a      	ands	r2, r1
 80006b6:	601a      	str	r2, [r3, #0]
    			*GPIOB_ODR &= ~(1 << arrA[i][1]);
 80006b8:	4b8a      	ldr	r3, [pc, #552]	@ (80008e4 <main+0x6a4>)
 80006ba:	681b      	ldr	r3, [r3, #0]
 80006bc:	681a      	ldr	r2, [r3, #0]
 80006be:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 80006c2:	00db      	lsls	r3, r3, #3
 80006c4:	f603 4338 	addw	r3, r3, #3128	@ 0xc38
 80006c8:	443b      	add	r3, r7
 80006ca:	f853 3c98 	ldr.w	r3, [r3, #-152]
 80006ce:	2101      	movs	r1, #1
 80006d0:	fa01 f303 	lsl.w	r3, r1, r3
 80006d4:	43db      	mvns	r3, r3
 80006d6:	4619      	mov	r1, r3
 80006d8:	4b82      	ldr	r3, [pc, #520]	@ (80008e4 <main+0x6a4>)
 80006da:	681b      	ldr	r3, [r3, #0]
 80006dc:	400a      	ands	r2, r1
 80006de:	601a      	str	r2, [r3, #0]
    		for (i = 0; i < 18; i++)
 80006e0:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 80006e4:	3301      	adds	r3, #1
 80006e6:	f8c7 3c30 	str.w	r3, [r7, #3120]	@ 0xc30
 80006ea:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 80006ee:	2b11      	cmp	r3, #17
 80006f0:	dda6      	ble.n	8000640 <main+0x400>
    	for (j = 0; j < c; j++)
 80006f2:	f8d7 3c34 	ldr.w	r3, [r7, #3124]	@ 0xc34
 80006f6:	3301      	adds	r3, #1
 80006f8:	f8c7 3c34 	str.w	r3, [r7, #3124]	@ 0xc34
 80006fc:	f8d7 2c34 	ldr.w	r2, [r7, #3124]	@ 0xc34
 8000700:	f8d7 3c2c 	ldr.w	r3, [r7, #3116]	@ 0xc2c
 8000704:	429a      	cmp	r2, r3
 8000706:	f6ff af60 	blt.w	80005ca <main+0x38a>
    		}
    	}
    	delay1();
 800070a:	f7ff fd77 	bl	80001fc <delay1>
       for (j = 0; j < c; j++)
 800070e:	2300      	movs	r3, #0
 8000710:	f8c7 3c34 	str.w	r3, [r7, #3124]	@ 0xc34
 8000714:	e063      	b.n	80007de <main+0x59e>
    	{
    		for (i = 0; i < 20; i++)
 8000716:	2300      	movs	r3, #0
 8000718:	f8c7 3c30 	str.w	r3, [r7, #3120]	@ 0xc30
 800071c:	e056      	b.n	80007cc <main+0x58c>
    		{
    			*GPIOA_ODR |= (1 << arrB[i][0]);
 800071e:	4b70      	ldr	r3, [pc, #448]	@ (80008e0 <main+0x6a0>)
 8000720:	681b      	ldr	r3, [r3, #0]
 8000722:	681a      	ldr	r2, [r3, #0]
 8000724:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 8000728:	f5a3 739e 	sub.w	r3, r3, #316	@ 0x13c
 800072c:	f8d7 1c30 	ldr.w	r1, [r7, #3120]	@ 0xc30
 8000730:	f853 3031 	ldr.w	r3, [r3, r1, lsl #3]
 8000734:	2101      	movs	r1, #1
 8000736:	fa01 f303 	lsl.w	r3, r1, r3
 800073a:	4619      	mov	r1, r3
 800073c:	4b68      	ldr	r3, [pc, #416]	@ (80008e0 <main+0x6a0>)
 800073e:	681b      	ldr	r3, [r3, #0]
 8000740:	430a      	orrs	r2, r1
 8000742:	601a      	str	r2, [r3, #0]
    			*GPIOB_ODR |= (1 << arrB[i][1]);
 8000744:	4b67      	ldr	r3, [pc, #412]	@ (80008e4 <main+0x6a4>)
 8000746:	681b      	ldr	r3, [r3, #0]
 8000748:	681a      	ldr	r2, [r3, #0]
 800074a:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 800074e:	f5a3 719e 	sub.w	r1, r3, #316	@ 0x13c
 8000752:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 8000756:	00db      	lsls	r3, r3, #3
 8000758:	440b      	add	r3, r1
 800075a:	685b      	ldr	r3, [r3, #4]
 800075c:	2101      	movs	r1, #1
 800075e:	fa01 f303 	lsl.w	r3, r1, r3
 8000762:	4619      	mov	r1, r3
 8000764:	4b5f      	ldr	r3, [pc, #380]	@ (80008e4 <main+0x6a4>)
 8000766:	681b      	ldr	r3, [r3, #0]
 8000768:	430a      	orrs	r2, r1
 800076a:	601a      	str	r2, [r3, #0]
    			delay();
 800076c:	f7ff fd32 	bl	80001d4 <delay>
    			*GPIOA_ODR &= ~(1 << arrB[i][0]);
 8000770:	4b5b      	ldr	r3, [pc, #364]	@ (80008e0 <main+0x6a0>)
 8000772:	681b      	ldr	r3, [r3, #0]
 8000774:	681a      	ldr	r2, [r3, #0]
 8000776:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 800077a:	f5a3 739e 	sub.w	r3, r3, #316	@ 0x13c
 800077e:	f8d7 1c30 	ldr.w	r1, [r7, #3120]	@ 0xc30
 8000782:	f853 3031 	ldr.w	r3, [r3, r1, lsl #3]
 8000786:	2101      	movs	r1, #1
 8000788:	fa01 f303 	lsl.w	r3, r1, r3
 800078c:	43db      	mvns	r3, r3
 800078e:	4619      	mov	r1, r3
 8000790:	4b53      	ldr	r3, [pc, #332]	@ (80008e0 <main+0x6a0>)
 8000792:	681b      	ldr	r3, [r3, #0]
 8000794:	400a      	ands	r2, r1
 8000796:	601a      	str	r2, [r3, #0]
    			*GPIOB_ODR &= ~(1 << arrB[i][1]);
 8000798:	4b52      	ldr	r3, [pc, #328]	@ (80008e4 <main+0x6a4>)
 800079a:	681b      	ldr	r3, [r3, #0]
 800079c:	681a      	ldr	r2, [r3, #0]
 800079e:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 80007a2:	f5a3 719e 	sub.w	r1, r3, #316	@ 0x13c
 80007a6:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 80007aa:	00db      	lsls	r3, r3, #3
 80007ac:	440b      	add	r3, r1
 80007ae:	685b      	ldr	r3, [r3, #4]
 80007b0:	2101      	movs	r1, #1
 80007b2:	fa01 f303 	lsl.w	r3, r1, r3
 80007b6:	43db      	mvns	r3, r3
 80007b8:	4619      	mov	r1, r3
 80007ba:	4b4a      	ldr	r3, [pc, #296]	@ (80008e4 <main+0x6a4>)
 80007bc:	681b      	ldr	r3, [r3, #0]
 80007be:	400a      	ands	r2, r1
 80007c0:	601a      	str	r2, [r3, #0]
    		for (i = 0; i < 20; i++)
 80007c2:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 80007c6:	3301      	adds	r3, #1
 80007c8:	f8c7 3c30 	str.w	r3, [r7, #3120]	@ 0xc30
 80007cc:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 80007d0:	2b13      	cmp	r3, #19
 80007d2:	dda4      	ble.n	800071e <main+0x4de>
       for (j = 0; j < c; j++)
 80007d4:	f8d7 3c34 	ldr.w	r3, [r7, #3124]	@ 0xc34
 80007d8:	3301      	adds	r3, #1
 80007da:	f8c7 3c34 	str.w	r3, [r7, #3124]	@ 0xc34
 80007de:	f8d7 2c34 	ldr.w	r2, [r7, #3124]	@ 0xc34
 80007e2:	f8d7 3c2c 	ldr.w	r3, [r7, #3116]	@ 0xc2c
 80007e6:	429a      	cmp	r2, r3
 80007e8:	db95      	blt.n	8000716 <main+0x4d6>
    		}
    	}
    	delay1();
 80007ea:	f7ff fd07 	bl	80001fc <delay1>
       for (j = 0; j < c; j++)
 80007ee:	2300      	movs	r3, #0
 80007f0:	f8c7 3c34 	str.w	r3, [r7, #3124]	@ 0xc34
 80007f4:	e063      	b.n	80008be <main+0x67e>
    	{
    		for (i = 0; i < 13; i++)
 80007f6:	2300      	movs	r3, #0
 80007f8:	f8c7 3c30 	str.w	r3, [r7, #3120]	@ 0xc30
 80007fc:	e056      	b.n	80008ac <main+0x66c>
    		{
    			*GPIOA_ODR |= (1 << arrC[i][0]);
 80007fe:	4b38      	ldr	r3, [pc, #224]	@ (80008e0 <main+0x6a0>)
 8000800:	681b      	ldr	r3, [r3, #0]
 8000802:	681a      	ldr	r2, [r3, #0]
 8000804:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 8000808:	f5a3 73d2 	sub.w	r3, r3, #420	@ 0x1a4
 800080c:	f8d7 1c30 	ldr.w	r1, [r7, #3120]	@ 0xc30
 8000810:	f853 3031 	ldr.w	r3, [r3, r1, lsl #3]
 8000814:	2101      	movs	r1, #1
 8000816:	fa01 f303 	lsl.w	r3, r1, r3
 800081a:	4619      	mov	r1, r3
 800081c:	4b30      	ldr	r3, [pc, #192]	@ (80008e0 <main+0x6a0>)
 800081e:	681b      	ldr	r3, [r3, #0]
 8000820:	430a      	orrs	r2, r1
 8000822:	601a      	str	r2, [r3, #0]
    			*GPIOB_ODR |= (1 << arrC[i][1]);
 8000824:	4b2f      	ldr	r3, [pc, #188]	@ (80008e4 <main+0x6a4>)
 8000826:	681b      	ldr	r3, [r3, #0]
 8000828:	681a      	ldr	r2, [r3, #0]
 800082a:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 800082e:	f5a3 71d2 	sub.w	r1, r3, #420	@ 0x1a4
 8000832:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 8000836:	00db      	lsls	r3, r3, #3
 8000838:	440b      	add	r3, r1
 800083a:	685b      	ldr	r3, [r3, #4]
 800083c:	2101      	movs	r1, #1
 800083e:	fa01 f303 	lsl.w	r3, r1, r3
 8000842:	4619      	mov	r1, r3
 8000844:	4b27      	ldr	r3, [pc, #156]	@ (80008e4 <main+0x6a4>)
 8000846:	681b      	ldr	r3, [r3, #0]
 8000848:	430a      	orrs	r2, r1
 800084a:	601a      	str	r2, [r3, #0]
    			delay();
 800084c:	f7ff fcc2 	bl	80001d4 <delay>
    			*GPIOA_ODR &= ~(1 << arrC[i][0]);
 8000850:	4b23      	ldr	r3, [pc, #140]	@ (80008e0 <main+0x6a0>)
 8000852:	681b      	ldr	r3, [r3, #0]
 8000854:	681a      	ldr	r2, [r3, #0]
 8000856:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 800085a:	f5a3 73d2 	sub.w	r3, r3, #420	@ 0x1a4
 800085e:	f8d7 1c30 	ldr.w	r1, [r7, #3120]	@ 0xc30
 8000862:	f853 3031 	ldr.w	r3, [r3, r1, lsl #3]
 8000866:	2101      	movs	r1, #1
 8000868:	fa01 f303 	lsl.w	r3, r1, r3
 800086c:	43db      	mvns	r3, r3
 800086e:	4619      	mov	r1, r3
 8000870:	4b1b      	ldr	r3, [pc, #108]	@ (80008e0 <main+0x6a0>)
 8000872:	681b      	ldr	r3, [r3, #0]
 8000874:	400a      	ands	r2, r1
 8000876:	601a      	str	r2, [r3, #0]
    			*GPIOB_ODR &= ~(1 << arrC[i][1]);
 8000878:	4b1a      	ldr	r3, [pc, #104]	@ (80008e4 <main+0x6a4>)
 800087a:	681b      	ldr	r3, [r3, #0]
 800087c:	681a      	ldr	r2, [r3, #0]
 800087e:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 8000882:	f5a3 71d2 	sub.w	r1, r3, #420	@ 0x1a4
 8000886:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 800088a:	00db      	lsls	r3, r3, #3
 800088c:	440b      	add	r3, r1
 800088e:	685b      	ldr	r3, [r3, #4]
 8000890:	2101      	movs	r1, #1
 8000892:	fa01 f303 	lsl.w	r3, r1, r3
 8000896:	43db      	mvns	r3, r3
 8000898:	4619      	mov	r1, r3
 800089a:	4b12      	ldr	r3, [pc, #72]	@ (80008e4 <main+0x6a4>)
 800089c:	681b      	ldr	r3, [r3, #0]
 800089e:	400a      	ands	r2, r1
 80008a0:	601a      	str	r2, [r3, #0]
    		for (i = 0; i < 13; i++)
 80008a2:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 80008a6:	3301      	adds	r3, #1
 80008a8:	f8c7 3c30 	str.w	r3, [r7, #3120]	@ 0xc30
 80008ac:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 80008b0:	2b0c      	cmp	r3, #12
 80008b2:	dda4      	ble.n	80007fe <main+0x5be>
       for (j = 0; j < c; j++)
 80008b4:	f8d7 3c34 	ldr.w	r3, [r7, #3124]	@ 0xc34
 80008b8:	3301      	adds	r3, #1
 80008ba:	f8c7 3c34 	str.w	r3, [r7, #3124]	@ 0xc34
 80008be:	f8d7 2c34 	ldr.w	r2, [r7, #3124]	@ 0xc34
 80008c2:	f8d7 3c2c 	ldr.w	r3, [r7, #3116]	@ 0xc2c
 80008c6:	429a      	cmp	r2, r3
 80008c8:	db95      	blt.n	80007f6 <main+0x5b6>
    		}
    	}
    	delay1();
 80008ca:	f7ff fc97 	bl	80001fc <delay1>
    	for (j = 0; j < c; j++)
 80008ce:	2300      	movs	r3, #0
 80008d0:	f8c7 3c34 	str.w	r3, [r7, #3124]	@ 0xc34
 80008d4:	e068      	b.n	80009a8 <main+0x768>
    	{
    		for (i = 0; i < 18; i++)
 80008d6:	2300      	movs	r3, #0
 80008d8:	f8c7 3c30 	str.w	r3, [r7, #3120]	@ 0xc30
 80008dc:	e05b      	b.n	8000996 <main+0x756>
 80008de:	bf00      	nop
 80008e0:	20000010 	.word	0x20000010
 80008e4:	20000018 	.word	0x20000018
    		{
    			*GPIOA_ODR |= (1 << arrD[i][0]);
 80008e8:	4ba7      	ldr	r3, [pc, #668]	@ (8000b88 <main+0x948>)
 80008ea:	681b      	ldr	r3, [r3, #0]
 80008ec:	681a      	ldr	r2, [r3, #0]
 80008ee:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 80008f2:	f5a3 730d 	sub.w	r3, r3, #564	@ 0x234
 80008f6:	f8d7 1c30 	ldr.w	r1, [r7, #3120]	@ 0xc30
 80008fa:	f853 3031 	ldr.w	r3, [r3, r1, lsl #3]
 80008fe:	2101      	movs	r1, #1
 8000900:	fa01 f303 	lsl.w	r3, r1, r3
 8000904:	4619      	mov	r1, r3
 8000906:	4ba0      	ldr	r3, [pc, #640]	@ (8000b88 <main+0x948>)
 8000908:	681b      	ldr	r3, [r3, #0]
 800090a:	430a      	orrs	r2, r1
 800090c:	601a      	str	r2, [r3, #0]
    			*GPIOB_ODR |= (1 << arrD[i][1]);
 800090e:	4b9f      	ldr	r3, [pc, #636]	@ (8000b8c <main+0x94c>)
 8000910:	681b      	ldr	r3, [r3, #0]
 8000912:	681a      	ldr	r2, [r3, #0]
 8000914:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 8000918:	f5a3 710d 	sub.w	r1, r3, #564	@ 0x234
 800091c:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 8000920:	00db      	lsls	r3, r3, #3
 8000922:	440b      	add	r3, r1
 8000924:	685b      	ldr	r3, [r3, #4]
 8000926:	2101      	movs	r1, #1
 8000928:	fa01 f303 	lsl.w	r3, r1, r3
 800092c:	4619      	mov	r1, r3
 800092e:	4b97      	ldr	r3, [pc, #604]	@ (8000b8c <main+0x94c>)
 8000930:	681b      	ldr	r3, [r3, #0]
 8000932:	430a      	orrs	r2, r1
 8000934:	601a      	str	r2, [r3, #0]
    			delay();
 8000936:	f7ff fc4d 	bl	80001d4 <delay>
    			*GPIOA_ODR &= ~(1 << arrD[i][0]);
 800093a:	4b93      	ldr	r3, [pc, #588]	@ (8000b88 <main+0x948>)
 800093c:	681b      	ldr	r3, [r3, #0]
 800093e:	681a      	ldr	r2, [r3, #0]
 8000940:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 8000944:	f5a3 730d 	sub.w	r3, r3, #564	@ 0x234
 8000948:	f8d7 1c30 	ldr.w	r1, [r7, #3120]	@ 0xc30
 800094c:	f853 3031 	ldr.w	r3, [r3, r1, lsl #3]
 8000950:	2101      	movs	r1, #1
 8000952:	fa01 f303 	lsl.w	r3, r1, r3
 8000956:	43db      	mvns	r3, r3
 8000958:	4619      	mov	r1, r3
 800095a:	4b8b      	ldr	r3, [pc, #556]	@ (8000b88 <main+0x948>)
 800095c:	681b      	ldr	r3, [r3, #0]
 800095e:	400a      	ands	r2, r1
 8000960:	601a      	str	r2, [r3, #0]
    			*GPIOB_ODR &= ~(1 << arrD[i][1]);
 8000962:	4b8a      	ldr	r3, [pc, #552]	@ (8000b8c <main+0x94c>)
 8000964:	681b      	ldr	r3, [r3, #0]
 8000966:	681a      	ldr	r2, [r3, #0]
 8000968:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 800096c:	f5a3 710d 	sub.w	r1, r3, #564	@ 0x234
 8000970:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 8000974:	00db      	lsls	r3, r3, #3
 8000976:	440b      	add	r3, r1
 8000978:	685b      	ldr	r3, [r3, #4]
 800097a:	2101      	movs	r1, #1
 800097c:	fa01 f303 	lsl.w	r3, r1, r3
 8000980:	43db      	mvns	r3, r3
 8000982:	4619      	mov	r1, r3
 8000984:	4b81      	ldr	r3, [pc, #516]	@ (8000b8c <main+0x94c>)
 8000986:	681b      	ldr	r3, [r3, #0]
 8000988:	400a      	ands	r2, r1
 800098a:	601a      	str	r2, [r3, #0]
    		for (i = 0; i < 18; i++)
 800098c:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 8000990:	3301      	adds	r3, #1
 8000992:	f8c7 3c30 	str.w	r3, [r7, #3120]	@ 0xc30
 8000996:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 800099a:	2b11      	cmp	r3, #17
 800099c:	dda4      	ble.n	80008e8 <main+0x6a8>
    	for (j = 0; j < c; j++)
 800099e:	f8d7 3c34 	ldr.w	r3, [r7, #3124]	@ 0xc34
 80009a2:	3301      	adds	r3, #1
 80009a4:	f8c7 3c34 	str.w	r3, [r7, #3124]	@ 0xc34
 80009a8:	f8d7 2c34 	ldr.w	r2, [r7, #3124]	@ 0xc34
 80009ac:	f8d7 3c2c 	ldr.w	r3, [r7, #3116]	@ 0xc2c
 80009b0:	429a      	cmp	r2, r3
 80009b2:	db90      	blt.n	80008d6 <main+0x696>
    		}
    	}
    	delay1();
 80009b4:	f7ff fc22 	bl	80001fc <delay1>
    	for (j = 0; j < c; j++)
 80009b8:	2300      	movs	r3, #0
 80009ba:	f8c7 3c34 	str.w	r3, [r7, #3124]	@ 0xc34
 80009be:	e063      	b.n	8000a88 <main+0x848>
    	{
    		for (i = 0; i < 19; i++)
 80009c0:	2300      	movs	r3, #0
 80009c2:	f8c7 3c30 	str.w	r3, [r7, #3120]	@ 0xc30
 80009c6:	e056      	b.n	8000a76 <main+0x836>
    		{
    			*GPIOA_ODR |= (1 << arrE[i][0]);
 80009c8:	4b6f      	ldr	r3, [pc, #444]	@ (8000b88 <main+0x948>)
 80009ca:	681b      	ldr	r3, [r3, #0]
 80009cc:	681a      	ldr	r2, [r3, #0]
 80009ce:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 80009d2:	f5a3 7333 	sub.w	r3, r3, #716	@ 0x2cc
 80009d6:	f8d7 1c30 	ldr.w	r1, [r7, #3120]	@ 0xc30
 80009da:	f853 3031 	ldr.w	r3, [r3, r1, lsl #3]
 80009de:	2101      	movs	r1, #1
 80009e0:	fa01 f303 	lsl.w	r3, r1, r3
 80009e4:	4619      	mov	r1, r3
 80009e6:	4b68      	ldr	r3, [pc, #416]	@ (8000b88 <main+0x948>)
 80009e8:	681b      	ldr	r3, [r3, #0]
 80009ea:	430a      	orrs	r2, r1
 80009ec:	601a      	str	r2, [r3, #0]
    			*GPIOB_ODR |= (1 << arrE[i][1]);
 80009ee:	4b67      	ldr	r3, [pc, #412]	@ (8000b8c <main+0x94c>)
 80009f0:	681b      	ldr	r3, [r3, #0]
 80009f2:	681a      	ldr	r2, [r3, #0]
 80009f4:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 80009f8:	f5a3 7133 	sub.w	r1, r3, #716	@ 0x2cc
 80009fc:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 8000a00:	00db      	lsls	r3, r3, #3
 8000a02:	440b      	add	r3, r1
 8000a04:	685b      	ldr	r3, [r3, #4]
 8000a06:	2101      	movs	r1, #1
 8000a08:	fa01 f303 	lsl.w	r3, r1, r3
 8000a0c:	4619      	mov	r1, r3
 8000a0e:	4b5f      	ldr	r3, [pc, #380]	@ (8000b8c <main+0x94c>)
 8000a10:	681b      	ldr	r3, [r3, #0]
 8000a12:	430a      	orrs	r2, r1
 8000a14:	601a      	str	r2, [r3, #0]
    			delay();
 8000a16:	f7ff fbdd 	bl	80001d4 <delay>
    			*GPIOA_ODR &= ~(1 << arrE[i][0]);
 8000a1a:	4b5b      	ldr	r3, [pc, #364]	@ (8000b88 <main+0x948>)
 8000a1c:	681b      	ldr	r3, [r3, #0]
 8000a1e:	681a      	ldr	r2, [r3, #0]
 8000a20:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 8000a24:	f5a3 7333 	sub.w	r3, r3, #716	@ 0x2cc
 8000a28:	f8d7 1c30 	ldr.w	r1, [r7, #3120]	@ 0xc30
 8000a2c:	f853 3031 	ldr.w	r3, [r3, r1, lsl #3]
 8000a30:	2101      	movs	r1, #1
 8000a32:	fa01 f303 	lsl.w	r3, r1, r3
 8000a36:	43db      	mvns	r3, r3
 8000a38:	4619      	mov	r1, r3
 8000a3a:	4b53      	ldr	r3, [pc, #332]	@ (8000b88 <main+0x948>)
 8000a3c:	681b      	ldr	r3, [r3, #0]
 8000a3e:	400a      	ands	r2, r1
 8000a40:	601a      	str	r2, [r3, #0]
    			*GPIOB_ODR &= ~(1 << arrE[i][1]);
 8000a42:	4b52      	ldr	r3, [pc, #328]	@ (8000b8c <main+0x94c>)
 8000a44:	681b      	ldr	r3, [r3, #0]
 8000a46:	681a      	ldr	r2, [r3, #0]
 8000a48:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 8000a4c:	f5a3 7133 	sub.w	r1, r3, #716	@ 0x2cc
 8000a50:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 8000a54:	00db      	lsls	r3, r3, #3
 8000a56:	440b      	add	r3, r1
 8000a58:	685b      	ldr	r3, [r3, #4]
 8000a5a:	2101      	movs	r1, #1
 8000a5c:	fa01 f303 	lsl.w	r3, r1, r3
 8000a60:	43db      	mvns	r3, r3
 8000a62:	4619      	mov	r1, r3
 8000a64:	4b49      	ldr	r3, [pc, #292]	@ (8000b8c <main+0x94c>)
 8000a66:	681b      	ldr	r3, [r3, #0]
 8000a68:	400a      	ands	r2, r1
 8000a6a:	601a      	str	r2, [r3, #0]
    		for (i = 0; i < 19; i++)
 8000a6c:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 8000a70:	3301      	adds	r3, #1
 8000a72:	f8c7 3c30 	str.w	r3, [r7, #3120]	@ 0xc30
 8000a76:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 8000a7a:	2b12      	cmp	r3, #18
 8000a7c:	dda4      	ble.n	80009c8 <main+0x788>
    	for (j = 0; j < c; j++)
 8000a7e:	f8d7 3c34 	ldr.w	r3, [r7, #3124]	@ 0xc34
 8000a82:	3301      	adds	r3, #1
 8000a84:	f8c7 3c34 	str.w	r3, [r7, #3124]	@ 0xc34
 8000a88:	f8d7 2c34 	ldr.w	r2, [r7, #3124]	@ 0xc34
 8000a8c:	f8d7 3c2c 	ldr.w	r3, [r7, #3116]	@ 0xc2c
 8000a90:	429a      	cmp	r2, r3
 8000a92:	db95      	blt.n	80009c0 <main+0x780>
    		}
    	}
    	delay1();
 8000a94:	f7ff fbb2 	bl	80001fc <delay1>
    	for (j = 0; j < c; j++)
 8000a98:	2300      	movs	r3, #0
 8000a9a:	f8c7 3c34 	str.w	r3, [r7, #3124]	@ 0xc34
 8000a9e:	e063      	b.n	8000b68 <main+0x928>
    	{
    		for (i = 0; i < 15; i++)
 8000aa0:	2300      	movs	r3, #0
 8000aa2:	f8c7 3c30 	str.w	r3, [r7, #3120]	@ 0xc30
 8000aa6:	e056      	b.n	8000b56 <main+0x916>
    		{
    			*GPIOA_ODR |= (1 << arrF[i][0]);
 8000aa8:	4b37      	ldr	r3, [pc, #220]	@ (8000b88 <main+0x948>)
 8000aaa:	681b      	ldr	r3, [r3, #0]
 8000aac:	681a      	ldr	r2, [r3, #0]
 8000aae:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 8000ab2:	f5a3 7351 	sub.w	r3, r3, #836	@ 0x344
 8000ab6:	f8d7 1c30 	ldr.w	r1, [r7, #3120]	@ 0xc30
 8000aba:	f853 3031 	ldr.w	r3, [r3, r1, lsl #3]
 8000abe:	2101      	movs	r1, #1
 8000ac0:	fa01 f303 	lsl.w	r3, r1, r3
 8000ac4:	4619      	mov	r1, r3
 8000ac6:	4b30      	ldr	r3, [pc, #192]	@ (8000b88 <main+0x948>)
 8000ac8:	681b      	ldr	r3, [r3, #0]
 8000aca:	430a      	orrs	r2, r1
 8000acc:	601a      	str	r2, [r3, #0]
    			*GPIOB_ODR |= (1 << arrF[i][1]);
 8000ace:	4b2f      	ldr	r3, [pc, #188]	@ (8000b8c <main+0x94c>)
 8000ad0:	681b      	ldr	r3, [r3, #0]
 8000ad2:	681a      	ldr	r2, [r3, #0]
 8000ad4:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 8000ad8:	f5a3 7151 	sub.w	r1, r3, #836	@ 0x344
 8000adc:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 8000ae0:	00db      	lsls	r3, r3, #3
 8000ae2:	440b      	add	r3, r1
 8000ae4:	685b      	ldr	r3, [r3, #4]
 8000ae6:	2101      	movs	r1, #1
 8000ae8:	fa01 f303 	lsl.w	r3, r1, r3
 8000aec:	4619      	mov	r1, r3
 8000aee:	4b27      	ldr	r3, [pc, #156]	@ (8000b8c <main+0x94c>)
 8000af0:	681b      	ldr	r3, [r3, #0]
 8000af2:	430a      	orrs	r2, r1
 8000af4:	601a      	str	r2, [r3, #0]
    			delay();
 8000af6:	f7ff fb6d 	bl	80001d4 <delay>
    			*GPIOA_ODR &= ~(1 << arrF[i][0]);
 8000afa:	4b23      	ldr	r3, [pc, #140]	@ (8000b88 <main+0x948>)
 8000afc:	681b      	ldr	r3, [r3, #0]
 8000afe:	681a      	ldr	r2, [r3, #0]
 8000b00:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 8000b04:	f5a3 7351 	sub.w	r3, r3, #836	@ 0x344
 8000b08:	f8d7 1c30 	ldr.w	r1, [r7, #3120]	@ 0xc30
 8000b0c:	f853 3031 	ldr.w	r3, [r3, r1, lsl #3]
 8000b10:	2101      	movs	r1, #1
 8000b12:	fa01 f303 	lsl.w	r3, r1, r3
 8000b16:	43db      	mvns	r3, r3
 8000b18:	4619      	mov	r1, r3
 8000b1a:	4b1b      	ldr	r3, [pc, #108]	@ (8000b88 <main+0x948>)
 8000b1c:	681b      	ldr	r3, [r3, #0]
 8000b1e:	400a      	ands	r2, r1
 8000b20:	601a      	str	r2, [r3, #0]
    			*GPIOB_ODR &= ~(1 << arrF[i][1]);
 8000b22:	4b1a      	ldr	r3, [pc, #104]	@ (8000b8c <main+0x94c>)
 8000b24:	681b      	ldr	r3, [r3, #0]
 8000b26:	681a      	ldr	r2, [r3, #0]
 8000b28:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 8000b2c:	f5a3 7151 	sub.w	r1, r3, #836	@ 0x344
 8000b30:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 8000b34:	00db      	lsls	r3, r3, #3
 8000b36:	440b      	add	r3, r1
 8000b38:	685b      	ldr	r3, [r3, #4]
 8000b3a:	2101      	movs	r1, #1
 8000b3c:	fa01 f303 	lsl.w	r3, r1, r3
 8000b40:	43db      	mvns	r3, r3
 8000b42:	4619      	mov	r1, r3
 8000b44:	4b11      	ldr	r3, [pc, #68]	@ (8000b8c <main+0x94c>)
 8000b46:	681b      	ldr	r3, [r3, #0]
 8000b48:	400a      	ands	r2, r1
 8000b4a:	601a      	str	r2, [r3, #0]
    		for (i = 0; i < 15; i++)
 8000b4c:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 8000b50:	3301      	adds	r3, #1
 8000b52:	f8c7 3c30 	str.w	r3, [r7, #3120]	@ 0xc30
 8000b56:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 8000b5a:	2b0e      	cmp	r3, #14
 8000b5c:	dda4      	ble.n	8000aa8 <main+0x868>
    	for (j = 0; j < c; j++)
 8000b5e:	f8d7 3c34 	ldr.w	r3, [r7, #3124]	@ 0xc34
 8000b62:	3301      	adds	r3, #1
 8000b64:	f8c7 3c34 	str.w	r3, [r7, #3124]	@ 0xc34
 8000b68:	f8d7 2c34 	ldr.w	r2, [r7, #3124]	@ 0xc34
 8000b6c:	f8d7 3c2c 	ldr.w	r3, [r7, #3116]	@ 0xc2c
 8000b70:	429a      	cmp	r2, r3
 8000b72:	db95      	blt.n	8000aa0 <main+0x860>
    		}
    	}
    	delay1();
 8000b74:	f7ff fb42 	bl	80001fc <delay1>
    	for (j = 0; j < c; j++)
 8000b78:	2300      	movs	r3, #0
 8000b7a:	f8c7 3c34 	str.w	r3, [r7, #3124]	@ 0xc34
 8000b7e:	e067      	b.n	8000c50 <main+0xa10>
    	{
    		for (i = 0; i < 15; i++)
 8000b80:	2300      	movs	r3, #0
 8000b82:	f8c7 3c30 	str.w	r3, [r7, #3120]	@ 0xc30
 8000b86:	e05a      	b.n	8000c3e <main+0x9fe>
 8000b88:	20000010 	.word	0x20000010
 8000b8c:	20000018 	.word	0x20000018
    		{
    			*GPIOA_ODR |= (1 << arrG[i][0]);
 8000b90:	4ba7      	ldr	r3, [pc, #668]	@ (8000e30 <main+0xbf0>)
 8000b92:	681b      	ldr	r3, [r3, #0]
 8000b94:	681a      	ldr	r2, [r3, #0]
 8000b96:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 8000b9a:	f5a3 736f 	sub.w	r3, r3, #956	@ 0x3bc
 8000b9e:	f8d7 1c30 	ldr.w	r1, [r7, #3120]	@ 0xc30
 8000ba2:	f853 3031 	ldr.w	r3, [r3, r1, lsl #3]
 8000ba6:	2101      	movs	r1, #1
 8000ba8:	fa01 f303 	lsl.w	r3, r1, r3
 8000bac:	4619      	mov	r1, r3
 8000bae:	4ba0      	ldr	r3, [pc, #640]	@ (8000e30 <main+0xbf0>)
 8000bb0:	681b      	ldr	r3, [r3, #0]
 8000bb2:	430a      	orrs	r2, r1
 8000bb4:	601a      	str	r2, [r3, #0]
    			*GPIOB_ODR |= (1 << arrG[i][1]);
 8000bb6:	4b9f      	ldr	r3, [pc, #636]	@ (8000e34 <main+0xbf4>)
 8000bb8:	681b      	ldr	r3, [r3, #0]
 8000bba:	681a      	ldr	r2, [r3, #0]
 8000bbc:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 8000bc0:	f5a3 716f 	sub.w	r1, r3, #956	@ 0x3bc
 8000bc4:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 8000bc8:	00db      	lsls	r3, r3, #3
 8000bca:	440b      	add	r3, r1
 8000bcc:	685b      	ldr	r3, [r3, #4]
 8000bce:	2101      	movs	r1, #1
 8000bd0:	fa01 f303 	lsl.w	r3, r1, r3
 8000bd4:	4619      	mov	r1, r3
 8000bd6:	4b97      	ldr	r3, [pc, #604]	@ (8000e34 <main+0xbf4>)
 8000bd8:	681b      	ldr	r3, [r3, #0]
 8000bda:	430a      	orrs	r2, r1
 8000bdc:	601a      	str	r2, [r3, #0]
    			delay();
 8000bde:	f7ff faf9 	bl	80001d4 <delay>
    			*GPIOA_ODR &= ~(1 << arrG[i][0]);
 8000be2:	4b93      	ldr	r3, [pc, #588]	@ (8000e30 <main+0xbf0>)
 8000be4:	681b      	ldr	r3, [r3, #0]
 8000be6:	681a      	ldr	r2, [r3, #0]
 8000be8:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 8000bec:	f5a3 736f 	sub.w	r3, r3, #956	@ 0x3bc
 8000bf0:	f8d7 1c30 	ldr.w	r1, [r7, #3120]	@ 0xc30
 8000bf4:	f853 3031 	ldr.w	r3, [r3, r1, lsl #3]
 8000bf8:	2101      	movs	r1, #1
 8000bfa:	fa01 f303 	lsl.w	r3, r1, r3
 8000bfe:	43db      	mvns	r3, r3
 8000c00:	4619      	mov	r1, r3
 8000c02:	4b8b      	ldr	r3, [pc, #556]	@ (8000e30 <main+0xbf0>)
 8000c04:	681b      	ldr	r3, [r3, #0]
 8000c06:	400a      	ands	r2, r1
 8000c08:	601a      	str	r2, [r3, #0]
    			*GPIOB_ODR &= ~(1 << arrG[i][1]);
 8000c0a:	4b8a      	ldr	r3, [pc, #552]	@ (8000e34 <main+0xbf4>)
 8000c0c:	681b      	ldr	r3, [r3, #0]
 8000c0e:	681a      	ldr	r2, [r3, #0]
 8000c10:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 8000c14:	f5a3 716f 	sub.w	r1, r3, #956	@ 0x3bc
 8000c18:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 8000c1c:	00db      	lsls	r3, r3, #3
 8000c1e:	440b      	add	r3, r1
 8000c20:	685b      	ldr	r3, [r3, #4]
 8000c22:	2101      	movs	r1, #1
 8000c24:	fa01 f303 	lsl.w	r3, r1, r3
 8000c28:	43db      	mvns	r3, r3
 8000c2a:	4619      	mov	r1, r3
 8000c2c:	4b81      	ldr	r3, [pc, #516]	@ (8000e34 <main+0xbf4>)
 8000c2e:	681b      	ldr	r3, [r3, #0]
 8000c30:	400a      	ands	r2, r1
 8000c32:	601a      	str	r2, [r3, #0]
    		for (i = 0; i < 15; i++)
 8000c34:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 8000c38:	3301      	adds	r3, #1
 8000c3a:	f8c7 3c30 	str.w	r3, [r7, #3120]	@ 0xc30
 8000c3e:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 8000c42:	2b0e      	cmp	r3, #14
 8000c44:	dda4      	ble.n	8000b90 <main+0x950>
    	for (j = 0; j < c; j++)
 8000c46:	f8d7 3c34 	ldr.w	r3, [r7, #3124]	@ 0xc34
 8000c4a:	3301      	adds	r3, #1
 8000c4c:	f8c7 3c34 	str.w	r3, [r7, #3124]	@ 0xc34
 8000c50:	f8d7 2c34 	ldr.w	r2, [r7, #3124]	@ 0xc34
 8000c54:	f8d7 3c2c 	ldr.w	r3, [r7, #3116]	@ 0xc2c
 8000c58:	429a      	cmp	r2, r3
 8000c5a:	db91      	blt.n	8000b80 <main+0x940>
    		}
    	}
    	delay1();
 8000c5c:	f7ff face 	bl	80001fc <delay1>
    	for (j = 0; j < c; j++)
 8000c60:	2300      	movs	r3, #0
 8000c62:	f8c7 3c34 	str.w	r3, [r7, #3124]	@ 0xc34
 8000c66:	e063      	b.n	8000d30 <main+0xaf0>
    	{
    		for (i = 0; i < 17; i++)
 8000c68:	2300      	movs	r3, #0
 8000c6a:	f8c7 3c30 	str.w	r3, [r7, #3120]	@ 0xc30
 8000c6e:	e056      	b.n	8000d1e <main+0xade>
    		{
    			*GPIOA_ODR |= (1 << arrH[i][0]);
 8000c70:	4b6f      	ldr	r3, [pc, #444]	@ (8000e30 <main+0xbf0>)
 8000c72:	681b      	ldr	r3, [r3, #0]
 8000c74:	681a      	ldr	r2, [r3, #0]
 8000c76:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 8000c7a:	f2a3 4344 	subw	r3, r3, #1092	@ 0x444
 8000c7e:	f8d7 1c30 	ldr.w	r1, [r7, #3120]	@ 0xc30
 8000c82:	f853 3031 	ldr.w	r3, [r3, r1, lsl #3]
 8000c86:	2101      	movs	r1, #1
 8000c88:	fa01 f303 	lsl.w	r3, r1, r3
 8000c8c:	4619      	mov	r1, r3
 8000c8e:	4b68      	ldr	r3, [pc, #416]	@ (8000e30 <main+0xbf0>)
 8000c90:	681b      	ldr	r3, [r3, #0]
 8000c92:	430a      	orrs	r2, r1
 8000c94:	601a      	str	r2, [r3, #0]
    			*GPIOB_ODR |= (1 << arrH[i][1]);
 8000c96:	4b67      	ldr	r3, [pc, #412]	@ (8000e34 <main+0xbf4>)
 8000c98:	681b      	ldr	r3, [r3, #0]
 8000c9a:	681a      	ldr	r2, [r3, #0]
 8000c9c:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 8000ca0:	f2a3 4144 	subw	r1, r3, #1092	@ 0x444
 8000ca4:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 8000ca8:	00db      	lsls	r3, r3, #3
 8000caa:	440b      	add	r3, r1
 8000cac:	685b      	ldr	r3, [r3, #4]
 8000cae:	2101      	movs	r1, #1
 8000cb0:	fa01 f303 	lsl.w	r3, r1, r3
 8000cb4:	4619      	mov	r1, r3
 8000cb6:	4b5f      	ldr	r3, [pc, #380]	@ (8000e34 <main+0xbf4>)
 8000cb8:	681b      	ldr	r3, [r3, #0]
 8000cba:	430a      	orrs	r2, r1
 8000cbc:	601a      	str	r2, [r3, #0]
    			delay();
 8000cbe:	f7ff fa89 	bl	80001d4 <delay>
    			*GPIOA_ODR &= ~(1 << arrH[i][0]);
 8000cc2:	4b5b      	ldr	r3, [pc, #364]	@ (8000e30 <main+0xbf0>)
 8000cc4:	681b      	ldr	r3, [r3, #0]
 8000cc6:	681a      	ldr	r2, [r3, #0]
 8000cc8:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 8000ccc:	f2a3 4344 	subw	r3, r3, #1092	@ 0x444
 8000cd0:	f8d7 1c30 	ldr.w	r1, [r7, #3120]	@ 0xc30
 8000cd4:	f853 3031 	ldr.w	r3, [r3, r1, lsl #3]
 8000cd8:	2101      	movs	r1, #1
 8000cda:	fa01 f303 	lsl.w	r3, r1, r3
 8000cde:	43db      	mvns	r3, r3
 8000ce0:	4619      	mov	r1, r3
 8000ce2:	4b53      	ldr	r3, [pc, #332]	@ (8000e30 <main+0xbf0>)
 8000ce4:	681b      	ldr	r3, [r3, #0]
 8000ce6:	400a      	ands	r2, r1
 8000ce8:	601a      	str	r2, [r3, #0]
    			*GPIOB_ODR &= ~(1 << arrH[i][1]);
 8000cea:	4b52      	ldr	r3, [pc, #328]	@ (8000e34 <main+0xbf4>)
 8000cec:	681b      	ldr	r3, [r3, #0]
 8000cee:	681a      	ldr	r2, [r3, #0]
 8000cf0:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 8000cf4:	f2a3 4144 	subw	r1, r3, #1092	@ 0x444
 8000cf8:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 8000cfc:	00db      	lsls	r3, r3, #3
 8000cfe:	440b      	add	r3, r1
 8000d00:	685b      	ldr	r3, [r3, #4]
 8000d02:	2101      	movs	r1, #1
 8000d04:	fa01 f303 	lsl.w	r3, r1, r3
 8000d08:	43db      	mvns	r3, r3
 8000d0a:	4619      	mov	r1, r3
 8000d0c:	4b49      	ldr	r3, [pc, #292]	@ (8000e34 <main+0xbf4>)
 8000d0e:	681b      	ldr	r3, [r3, #0]
 8000d10:	400a      	ands	r2, r1
 8000d12:	601a      	str	r2, [r3, #0]
    		for (i = 0; i < 17; i++)
 8000d14:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 8000d18:	3301      	adds	r3, #1
 8000d1a:	f8c7 3c30 	str.w	r3, [r7, #3120]	@ 0xc30
 8000d1e:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 8000d22:	2b10      	cmp	r3, #16
 8000d24:	dda4      	ble.n	8000c70 <main+0xa30>
    	for (j = 0; j < c; j++)
 8000d26:	f8d7 3c34 	ldr.w	r3, [r7, #3124]	@ 0xc34
 8000d2a:	3301      	adds	r3, #1
 8000d2c:	f8c7 3c34 	str.w	r3, [r7, #3124]	@ 0xc34
 8000d30:	f8d7 2c34 	ldr.w	r2, [r7, #3124]	@ 0xc34
 8000d34:	f8d7 3c2c 	ldr.w	r3, [r7, #3116]	@ 0xc2c
 8000d38:	429a      	cmp	r2, r3
 8000d3a:	db95      	blt.n	8000c68 <main+0xa28>
    		}
    	}
    	delay1();
 8000d3c:	f7ff fa5e 	bl	80001fc <delay1>
    	for (j = 0; j < c; j++)
 8000d40:	2300      	movs	r3, #0
 8000d42:	f8c7 3c34 	str.w	r3, [r7, #3124]	@ 0xc34
 8000d46:	e063      	b.n	8000e10 <main+0xbd0>
    	{
    		for (i = 0; i < 7; i++)
 8000d48:	2300      	movs	r3, #0
 8000d4a:	f8c7 3c30 	str.w	r3, [r7, #3120]	@ 0xc30
 8000d4e:	e056      	b.n	8000dfe <main+0xbbe>
    		{
    			*GPIOA_ODR |= (1 << arrI[i][0]);
 8000d50:	4b37      	ldr	r3, [pc, #220]	@ (8000e30 <main+0xbf0>)
 8000d52:	681b      	ldr	r3, [r3, #0]
 8000d54:	681a      	ldr	r2, [r3, #0]
 8000d56:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 8000d5a:	f2a3 437c 	subw	r3, r3, #1148	@ 0x47c
 8000d5e:	f8d7 1c30 	ldr.w	r1, [r7, #3120]	@ 0xc30
 8000d62:	f853 3031 	ldr.w	r3, [r3, r1, lsl #3]
 8000d66:	2101      	movs	r1, #1
 8000d68:	fa01 f303 	lsl.w	r3, r1, r3
 8000d6c:	4619      	mov	r1, r3
 8000d6e:	4b30      	ldr	r3, [pc, #192]	@ (8000e30 <main+0xbf0>)
 8000d70:	681b      	ldr	r3, [r3, #0]
 8000d72:	430a      	orrs	r2, r1
 8000d74:	601a      	str	r2, [r3, #0]
    			*GPIOB_ODR |= (1 << arrI[i][1]);
 8000d76:	4b2f      	ldr	r3, [pc, #188]	@ (8000e34 <main+0xbf4>)
 8000d78:	681b      	ldr	r3, [r3, #0]
 8000d7a:	681a      	ldr	r2, [r3, #0]
 8000d7c:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 8000d80:	f2a3 417c 	subw	r1, r3, #1148	@ 0x47c
 8000d84:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 8000d88:	00db      	lsls	r3, r3, #3
 8000d8a:	440b      	add	r3, r1
 8000d8c:	685b      	ldr	r3, [r3, #4]
 8000d8e:	2101      	movs	r1, #1
 8000d90:	fa01 f303 	lsl.w	r3, r1, r3
 8000d94:	4619      	mov	r1, r3
 8000d96:	4b27      	ldr	r3, [pc, #156]	@ (8000e34 <main+0xbf4>)
 8000d98:	681b      	ldr	r3, [r3, #0]
 8000d9a:	430a      	orrs	r2, r1
 8000d9c:	601a      	str	r2, [r3, #0]
    			delay();
 8000d9e:	f7ff fa19 	bl	80001d4 <delay>
    			*GPIOA_ODR &= ~(1 << arrI[i][0]);
 8000da2:	4b23      	ldr	r3, [pc, #140]	@ (8000e30 <main+0xbf0>)
 8000da4:	681b      	ldr	r3, [r3, #0]
 8000da6:	681a      	ldr	r2, [r3, #0]
 8000da8:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 8000dac:	f2a3 437c 	subw	r3, r3, #1148	@ 0x47c
 8000db0:	f8d7 1c30 	ldr.w	r1, [r7, #3120]	@ 0xc30
 8000db4:	f853 3031 	ldr.w	r3, [r3, r1, lsl #3]
 8000db8:	2101      	movs	r1, #1
 8000dba:	fa01 f303 	lsl.w	r3, r1, r3
 8000dbe:	43db      	mvns	r3, r3
 8000dc0:	4619      	mov	r1, r3
 8000dc2:	4b1b      	ldr	r3, [pc, #108]	@ (8000e30 <main+0xbf0>)
 8000dc4:	681b      	ldr	r3, [r3, #0]
 8000dc6:	400a      	ands	r2, r1
 8000dc8:	601a      	str	r2, [r3, #0]
    			*GPIOB_ODR &= ~(1 << arrI[i][1]);
 8000dca:	4b1a      	ldr	r3, [pc, #104]	@ (8000e34 <main+0xbf4>)
 8000dcc:	681b      	ldr	r3, [r3, #0]
 8000dce:	681a      	ldr	r2, [r3, #0]
 8000dd0:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 8000dd4:	f2a3 417c 	subw	r1, r3, #1148	@ 0x47c
 8000dd8:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 8000ddc:	00db      	lsls	r3, r3, #3
 8000dde:	440b      	add	r3, r1
 8000de0:	685b      	ldr	r3, [r3, #4]
 8000de2:	2101      	movs	r1, #1
 8000de4:	fa01 f303 	lsl.w	r3, r1, r3
 8000de8:	43db      	mvns	r3, r3
 8000dea:	4619      	mov	r1, r3
 8000dec:	4b11      	ldr	r3, [pc, #68]	@ (8000e34 <main+0xbf4>)
 8000dee:	681b      	ldr	r3, [r3, #0]
 8000df0:	400a      	ands	r2, r1
 8000df2:	601a      	str	r2, [r3, #0]
    		for (i = 0; i < 7; i++)
 8000df4:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 8000df8:	3301      	adds	r3, #1
 8000dfa:	f8c7 3c30 	str.w	r3, [r7, #3120]	@ 0xc30
 8000dfe:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 8000e02:	2b06      	cmp	r3, #6
 8000e04:	dda4      	ble.n	8000d50 <main+0xb10>
    	for (j = 0; j < c; j++)
 8000e06:	f8d7 3c34 	ldr.w	r3, [r7, #3124]	@ 0xc34
 8000e0a:	3301      	adds	r3, #1
 8000e0c:	f8c7 3c34 	str.w	r3, [r7, #3124]	@ 0xc34
 8000e10:	f8d7 2c34 	ldr.w	r2, [r7, #3124]	@ 0xc34
 8000e14:	f8d7 3c2c 	ldr.w	r3, [r7, #3116]	@ 0xc2c
 8000e18:	429a      	cmp	r2, r3
 8000e1a:	db95      	blt.n	8000d48 <main+0xb08>
    		}
    	}
    	delay1();
 8000e1c:	f7ff f9ee 	bl	80001fc <delay1>
    	for (j = 0; j < c; j++)
 8000e20:	2300      	movs	r3, #0
 8000e22:	f8c7 3c34 	str.w	r3, [r7, #3124]	@ 0xc34
 8000e26:	e067      	b.n	8000ef8 <main+0xcb8>
    	{
    		for (i = 0; i < 12; i++)
 8000e28:	2300      	movs	r3, #0
 8000e2a:	f8c7 3c30 	str.w	r3, [r7, #3120]	@ 0xc30
 8000e2e:	e05a      	b.n	8000ee6 <main+0xca6>
 8000e30:	20000010 	.word	0x20000010
 8000e34:	20000018 	.word	0x20000018
    		{
    			*GPIOA_ODR |= (1 << arrJ[i][0]);
 8000e38:	4ba7      	ldr	r3, [pc, #668]	@ (80010d8 <main+0xe98>)
 8000e3a:	681b      	ldr	r3, [r3, #0]
 8000e3c:	681a      	ldr	r2, [r3, #0]
 8000e3e:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 8000e42:	f2a3 43dc 	subw	r3, r3, #1244	@ 0x4dc
 8000e46:	f8d7 1c30 	ldr.w	r1, [r7, #3120]	@ 0xc30
 8000e4a:	f853 3031 	ldr.w	r3, [r3, r1, lsl #3]
 8000e4e:	2101      	movs	r1, #1
 8000e50:	fa01 f303 	lsl.w	r3, r1, r3
 8000e54:	4619      	mov	r1, r3
 8000e56:	4ba0      	ldr	r3, [pc, #640]	@ (80010d8 <main+0xe98>)
 8000e58:	681b      	ldr	r3, [r3, #0]
 8000e5a:	430a      	orrs	r2, r1
 8000e5c:	601a      	str	r2, [r3, #0]
    			*GPIOB_ODR |= (1 << arrJ[i][1]);
 8000e5e:	4b9f      	ldr	r3, [pc, #636]	@ (80010dc <main+0xe9c>)
 8000e60:	681b      	ldr	r3, [r3, #0]
 8000e62:	681a      	ldr	r2, [r3, #0]
 8000e64:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 8000e68:	f2a3 41dc 	subw	r1, r3, #1244	@ 0x4dc
 8000e6c:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 8000e70:	00db      	lsls	r3, r3, #3
 8000e72:	440b      	add	r3, r1
 8000e74:	685b      	ldr	r3, [r3, #4]
 8000e76:	2101      	movs	r1, #1
 8000e78:	fa01 f303 	lsl.w	r3, r1, r3
 8000e7c:	4619      	mov	r1, r3
 8000e7e:	4b97      	ldr	r3, [pc, #604]	@ (80010dc <main+0xe9c>)
 8000e80:	681b      	ldr	r3, [r3, #0]
 8000e82:	430a      	orrs	r2, r1
 8000e84:	601a      	str	r2, [r3, #0]
    			delay();
 8000e86:	f7ff f9a5 	bl	80001d4 <delay>
    			*GPIOA_ODR &= ~(1 << arrJ[i][0]);
 8000e8a:	4b93      	ldr	r3, [pc, #588]	@ (80010d8 <main+0xe98>)
 8000e8c:	681b      	ldr	r3, [r3, #0]
 8000e8e:	681a      	ldr	r2, [r3, #0]
 8000e90:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 8000e94:	f2a3 43dc 	subw	r3, r3, #1244	@ 0x4dc
 8000e98:	f8d7 1c30 	ldr.w	r1, [r7, #3120]	@ 0xc30
 8000e9c:	f853 3031 	ldr.w	r3, [r3, r1, lsl #3]
 8000ea0:	2101      	movs	r1, #1
 8000ea2:	fa01 f303 	lsl.w	r3, r1, r3
 8000ea6:	43db      	mvns	r3, r3
 8000ea8:	4619      	mov	r1, r3
 8000eaa:	4b8b      	ldr	r3, [pc, #556]	@ (80010d8 <main+0xe98>)
 8000eac:	681b      	ldr	r3, [r3, #0]
 8000eae:	400a      	ands	r2, r1
 8000eb0:	601a      	str	r2, [r3, #0]
    			*GPIOB_ODR &= ~(1 << arrJ[i][1]);
 8000eb2:	4b8a      	ldr	r3, [pc, #552]	@ (80010dc <main+0xe9c>)
 8000eb4:	681b      	ldr	r3, [r3, #0]
 8000eb6:	681a      	ldr	r2, [r3, #0]
 8000eb8:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 8000ebc:	f2a3 41dc 	subw	r1, r3, #1244	@ 0x4dc
 8000ec0:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 8000ec4:	00db      	lsls	r3, r3, #3
 8000ec6:	440b      	add	r3, r1
 8000ec8:	685b      	ldr	r3, [r3, #4]
 8000eca:	2101      	movs	r1, #1
 8000ecc:	fa01 f303 	lsl.w	r3, r1, r3
 8000ed0:	43db      	mvns	r3, r3
 8000ed2:	4619      	mov	r1, r3
 8000ed4:	4b81      	ldr	r3, [pc, #516]	@ (80010dc <main+0xe9c>)
 8000ed6:	681b      	ldr	r3, [r3, #0]
 8000ed8:	400a      	ands	r2, r1
 8000eda:	601a      	str	r2, [r3, #0]
    		for (i = 0; i < 12; i++)
 8000edc:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 8000ee0:	3301      	adds	r3, #1
 8000ee2:	f8c7 3c30 	str.w	r3, [r7, #3120]	@ 0xc30
 8000ee6:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 8000eea:	2b0b      	cmp	r3, #11
 8000eec:	dda4      	ble.n	8000e38 <main+0xbf8>
    	for (j = 0; j < c; j++)
 8000eee:	f8d7 3c34 	ldr.w	r3, [r7, #3124]	@ 0xc34
 8000ef2:	3301      	adds	r3, #1
 8000ef4:	f8c7 3c34 	str.w	r3, [r7, #3124]	@ 0xc34
 8000ef8:	f8d7 2c34 	ldr.w	r2, [r7, #3124]	@ 0xc34
 8000efc:	f8d7 3c2c 	ldr.w	r3, [r7, #3116]	@ 0xc2c
 8000f00:	429a      	cmp	r2, r3
 8000f02:	db91      	blt.n	8000e28 <main+0xbe8>
    		}
    	}
    	delay1();
 8000f04:	f7ff f97a 	bl	80001fc <delay1>

    	for (j = 0; j < c; j++)
 8000f08:	2300      	movs	r3, #0
 8000f0a:	f8c7 3c34 	str.w	r3, [r7, #3124]	@ 0xc34
 8000f0e:	e063      	b.n	8000fd8 <main+0xd98>
    	{
    		for (i = 0; i < 14; i++)
 8000f10:	2300      	movs	r3, #0
 8000f12:	f8c7 3c30 	str.w	r3, [r7, #3120]	@ 0xc30
 8000f16:	e056      	b.n	8000fc6 <main+0xd86>
    		{
    			*GPIOA_ODR |= (1 << arrK[i][0]);
 8000f18:	4b6f      	ldr	r3, [pc, #444]	@ (80010d8 <main+0xe98>)
 8000f1a:	681b      	ldr	r3, [r3, #0]
 8000f1c:	681a      	ldr	r2, [r3, #0]
 8000f1e:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 8000f22:	f2a3 534c 	subw	r3, r3, #1356	@ 0x54c
 8000f26:	f8d7 1c30 	ldr.w	r1, [r7, #3120]	@ 0xc30
 8000f2a:	f853 3031 	ldr.w	r3, [r3, r1, lsl #3]
 8000f2e:	2101      	movs	r1, #1
 8000f30:	fa01 f303 	lsl.w	r3, r1, r3
 8000f34:	4619      	mov	r1, r3
 8000f36:	4b68      	ldr	r3, [pc, #416]	@ (80010d8 <main+0xe98>)
 8000f38:	681b      	ldr	r3, [r3, #0]
 8000f3a:	430a      	orrs	r2, r1
 8000f3c:	601a      	str	r2, [r3, #0]
    			*GPIOB_ODR |= (1 << arrK[i][1]);
 8000f3e:	4b67      	ldr	r3, [pc, #412]	@ (80010dc <main+0xe9c>)
 8000f40:	681b      	ldr	r3, [r3, #0]
 8000f42:	681a      	ldr	r2, [r3, #0]
 8000f44:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 8000f48:	f2a3 514c 	subw	r1, r3, #1356	@ 0x54c
 8000f4c:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 8000f50:	00db      	lsls	r3, r3, #3
 8000f52:	440b      	add	r3, r1
 8000f54:	685b      	ldr	r3, [r3, #4]
 8000f56:	2101      	movs	r1, #1
 8000f58:	fa01 f303 	lsl.w	r3, r1, r3
 8000f5c:	4619      	mov	r1, r3
 8000f5e:	4b5f      	ldr	r3, [pc, #380]	@ (80010dc <main+0xe9c>)
 8000f60:	681b      	ldr	r3, [r3, #0]
 8000f62:	430a      	orrs	r2, r1
 8000f64:	601a      	str	r2, [r3, #0]
    			delay();
 8000f66:	f7ff f935 	bl	80001d4 <delay>
    			*GPIOA_ODR &= ~(1 << arrK[i][0]);
 8000f6a:	4b5b      	ldr	r3, [pc, #364]	@ (80010d8 <main+0xe98>)
 8000f6c:	681b      	ldr	r3, [r3, #0]
 8000f6e:	681a      	ldr	r2, [r3, #0]
 8000f70:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 8000f74:	f2a3 534c 	subw	r3, r3, #1356	@ 0x54c
 8000f78:	f8d7 1c30 	ldr.w	r1, [r7, #3120]	@ 0xc30
 8000f7c:	f853 3031 	ldr.w	r3, [r3, r1, lsl #3]
 8000f80:	2101      	movs	r1, #1
 8000f82:	fa01 f303 	lsl.w	r3, r1, r3
 8000f86:	43db      	mvns	r3, r3
 8000f88:	4619      	mov	r1, r3
 8000f8a:	4b53      	ldr	r3, [pc, #332]	@ (80010d8 <main+0xe98>)
 8000f8c:	681b      	ldr	r3, [r3, #0]
 8000f8e:	400a      	ands	r2, r1
 8000f90:	601a      	str	r2, [r3, #0]
    			*GPIOB_ODR &= ~(1 << arrK[i][1]);
 8000f92:	4b52      	ldr	r3, [pc, #328]	@ (80010dc <main+0xe9c>)
 8000f94:	681b      	ldr	r3, [r3, #0]
 8000f96:	681a      	ldr	r2, [r3, #0]
 8000f98:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 8000f9c:	f2a3 514c 	subw	r1, r3, #1356	@ 0x54c
 8000fa0:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 8000fa4:	00db      	lsls	r3, r3, #3
 8000fa6:	440b      	add	r3, r1
 8000fa8:	685b      	ldr	r3, [r3, #4]
 8000faa:	2101      	movs	r1, #1
 8000fac:	fa01 f303 	lsl.w	r3, r1, r3
 8000fb0:	43db      	mvns	r3, r3
 8000fb2:	4619      	mov	r1, r3
 8000fb4:	4b49      	ldr	r3, [pc, #292]	@ (80010dc <main+0xe9c>)
 8000fb6:	681b      	ldr	r3, [r3, #0]
 8000fb8:	400a      	ands	r2, r1
 8000fba:	601a      	str	r2, [r3, #0]
    		for (i = 0; i < 14; i++)
 8000fbc:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 8000fc0:	3301      	adds	r3, #1
 8000fc2:	f8c7 3c30 	str.w	r3, [r7, #3120]	@ 0xc30
 8000fc6:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 8000fca:	2b0d      	cmp	r3, #13
 8000fcc:	dda4      	ble.n	8000f18 <main+0xcd8>
    	for (j = 0; j < c; j++)
 8000fce:	f8d7 3c34 	ldr.w	r3, [r7, #3124]	@ 0xc34
 8000fd2:	3301      	adds	r3, #1
 8000fd4:	f8c7 3c34 	str.w	r3, [r7, #3124]	@ 0xc34
 8000fd8:	f8d7 2c34 	ldr.w	r2, [r7, #3124]	@ 0xc34
 8000fdc:	f8d7 3c2c 	ldr.w	r3, [r7, #3116]	@ 0xc2c
 8000fe0:	429a      	cmp	r2, r3
 8000fe2:	db95      	blt.n	8000f10 <main+0xcd0>
    		}
    	}
    	delay1();
 8000fe4:	f7ff f90a 	bl	80001fc <delay1>
       for (j = 0; j < c; j++)
 8000fe8:	2300      	movs	r3, #0
 8000fea:	f8c7 3c34 	str.w	r3, [r7, #3124]	@ 0xc34
 8000fee:	e063      	b.n	80010b8 <main+0xe78>
    	{
    		for (i = 0; i < 11; i++)
 8000ff0:	2300      	movs	r3, #0
 8000ff2:	f8c7 3c30 	str.w	r3, [r7, #3120]	@ 0xc30
 8000ff6:	e056      	b.n	80010a6 <main+0xe66>
    		{
    			*GPIOA_ODR |= (1 << arrL[i][0]);
 8000ff8:	4b37      	ldr	r3, [pc, #220]	@ (80010d8 <main+0xe98>)
 8000ffa:	681b      	ldr	r3, [r3, #0]
 8000ffc:	681a      	ldr	r2, [r3, #0]
 8000ffe:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 8001002:	f2a3 53a4 	subw	r3, r3, #1444	@ 0x5a4
 8001006:	f8d7 1c30 	ldr.w	r1, [r7, #3120]	@ 0xc30
 800100a:	f853 3031 	ldr.w	r3, [r3, r1, lsl #3]
 800100e:	2101      	movs	r1, #1
 8001010:	fa01 f303 	lsl.w	r3, r1, r3
 8001014:	4619      	mov	r1, r3
 8001016:	4b30      	ldr	r3, [pc, #192]	@ (80010d8 <main+0xe98>)
 8001018:	681b      	ldr	r3, [r3, #0]
 800101a:	430a      	orrs	r2, r1
 800101c:	601a      	str	r2, [r3, #0]
    			*GPIOB_ODR |= (1 << arrL[i][1]);
 800101e:	4b2f      	ldr	r3, [pc, #188]	@ (80010dc <main+0xe9c>)
 8001020:	681b      	ldr	r3, [r3, #0]
 8001022:	681a      	ldr	r2, [r3, #0]
 8001024:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 8001028:	f2a3 51a4 	subw	r1, r3, #1444	@ 0x5a4
 800102c:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 8001030:	00db      	lsls	r3, r3, #3
 8001032:	440b      	add	r3, r1
 8001034:	685b      	ldr	r3, [r3, #4]
 8001036:	2101      	movs	r1, #1
 8001038:	fa01 f303 	lsl.w	r3, r1, r3
 800103c:	4619      	mov	r1, r3
 800103e:	4b27      	ldr	r3, [pc, #156]	@ (80010dc <main+0xe9c>)
 8001040:	681b      	ldr	r3, [r3, #0]
 8001042:	430a      	orrs	r2, r1
 8001044:	601a      	str	r2, [r3, #0]
    			delay();
 8001046:	f7ff f8c5 	bl	80001d4 <delay>
    			*GPIOA_ODR &= ~(1 << arrL[i][0]);
 800104a:	4b23      	ldr	r3, [pc, #140]	@ (80010d8 <main+0xe98>)
 800104c:	681b      	ldr	r3, [r3, #0]
 800104e:	681a      	ldr	r2, [r3, #0]
 8001050:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 8001054:	f2a3 53a4 	subw	r3, r3, #1444	@ 0x5a4
 8001058:	f8d7 1c30 	ldr.w	r1, [r7, #3120]	@ 0xc30
 800105c:	f853 3031 	ldr.w	r3, [r3, r1, lsl #3]
 8001060:	2101      	movs	r1, #1
 8001062:	fa01 f303 	lsl.w	r3, r1, r3
 8001066:	43db      	mvns	r3, r3
 8001068:	4619      	mov	r1, r3
 800106a:	4b1b      	ldr	r3, [pc, #108]	@ (80010d8 <main+0xe98>)
 800106c:	681b      	ldr	r3, [r3, #0]
 800106e:	400a      	ands	r2, r1
 8001070:	601a      	str	r2, [r3, #0]
    			*GPIOB_ODR &= ~(1 << arrL[i][1]);
 8001072:	4b1a      	ldr	r3, [pc, #104]	@ (80010dc <main+0xe9c>)
 8001074:	681b      	ldr	r3, [r3, #0]
 8001076:	681a      	ldr	r2, [r3, #0]
 8001078:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 800107c:	f2a3 51a4 	subw	r1, r3, #1444	@ 0x5a4
 8001080:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 8001084:	00db      	lsls	r3, r3, #3
 8001086:	440b      	add	r3, r1
 8001088:	685b      	ldr	r3, [r3, #4]
 800108a:	2101      	movs	r1, #1
 800108c:	fa01 f303 	lsl.w	r3, r1, r3
 8001090:	43db      	mvns	r3, r3
 8001092:	4619      	mov	r1, r3
 8001094:	4b11      	ldr	r3, [pc, #68]	@ (80010dc <main+0xe9c>)
 8001096:	681b      	ldr	r3, [r3, #0]
 8001098:	400a      	ands	r2, r1
 800109a:	601a      	str	r2, [r3, #0]
    		for (i = 0; i < 11; i++)
 800109c:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 80010a0:	3301      	adds	r3, #1
 80010a2:	f8c7 3c30 	str.w	r3, [r7, #3120]	@ 0xc30
 80010a6:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 80010aa:	2b0a      	cmp	r3, #10
 80010ac:	dda4      	ble.n	8000ff8 <main+0xdb8>
       for (j = 0; j < c; j++)
 80010ae:	f8d7 3c34 	ldr.w	r3, [r7, #3124]	@ 0xc34
 80010b2:	3301      	adds	r3, #1
 80010b4:	f8c7 3c34 	str.w	r3, [r7, #3124]	@ 0xc34
 80010b8:	f8d7 2c34 	ldr.w	r2, [r7, #3124]	@ 0xc34
 80010bc:	f8d7 3c2c 	ldr.w	r3, [r7, #3116]	@ 0xc2c
 80010c0:	429a      	cmp	r2, r3
 80010c2:	db95      	blt.n	8000ff0 <main+0xdb0>
    		}
    	}
    	delay1();
 80010c4:	f7ff f89a 	bl	80001fc <delay1>
       for (j = 0; j < c; j++)
 80010c8:	2300      	movs	r3, #0
 80010ca:	f8c7 3c34 	str.w	r3, [r7, #3124]	@ 0xc34
 80010ce:	e067      	b.n	80011a0 <main+0xf60>
    	{
    		for (i = 0; i < 17; i++)
 80010d0:	2300      	movs	r3, #0
 80010d2:	f8c7 3c30 	str.w	r3, [r7, #3120]	@ 0xc30
 80010d6:	e05a      	b.n	800118e <main+0xf4e>
 80010d8:	20000010 	.word	0x20000010
 80010dc:	20000018 	.word	0x20000018
    		{
    			*GPIOA_ODR |= (1 << arrM[i][0]);
 80010e0:	4ba7      	ldr	r3, [pc, #668]	@ (8001380 <main+0x1140>)
 80010e2:	681b      	ldr	r3, [r3, #0]
 80010e4:	681a      	ldr	r2, [r3, #0]
 80010e6:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 80010ea:	f2a3 632c 	subw	r3, r3, #1580	@ 0x62c
 80010ee:	f8d7 1c30 	ldr.w	r1, [r7, #3120]	@ 0xc30
 80010f2:	f853 3031 	ldr.w	r3, [r3, r1, lsl #3]
 80010f6:	2101      	movs	r1, #1
 80010f8:	fa01 f303 	lsl.w	r3, r1, r3
 80010fc:	4619      	mov	r1, r3
 80010fe:	4ba0      	ldr	r3, [pc, #640]	@ (8001380 <main+0x1140>)
 8001100:	681b      	ldr	r3, [r3, #0]
 8001102:	430a      	orrs	r2, r1
 8001104:	601a      	str	r2, [r3, #0]
    			*GPIOB_ODR |= (1 << arrM[i][1]);
 8001106:	4b9f      	ldr	r3, [pc, #636]	@ (8001384 <main+0x1144>)
 8001108:	681b      	ldr	r3, [r3, #0]
 800110a:	681a      	ldr	r2, [r3, #0]
 800110c:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 8001110:	f2a3 612c 	subw	r1, r3, #1580	@ 0x62c
 8001114:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 8001118:	00db      	lsls	r3, r3, #3
 800111a:	440b      	add	r3, r1
 800111c:	685b      	ldr	r3, [r3, #4]
 800111e:	2101      	movs	r1, #1
 8001120:	fa01 f303 	lsl.w	r3, r1, r3
 8001124:	4619      	mov	r1, r3
 8001126:	4b97      	ldr	r3, [pc, #604]	@ (8001384 <main+0x1144>)
 8001128:	681b      	ldr	r3, [r3, #0]
 800112a:	430a      	orrs	r2, r1
 800112c:	601a      	str	r2, [r3, #0]
    			delay();
 800112e:	f7ff f851 	bl	80001d4 <delay>
    			*GPIOA_ODR &= ~(1 << arrM[i][0]);
 8001132:	4b93      	ldr	r3, [pc, #588]	@ (8001380 <main+0x1140>)
 8001134:	681b      	ldr	r3, [r3, #0]
 8001136:	681a      	ldr	r2, [r3, #0]
 8001138:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 800113c:	f2a3 632c 	subw	r3, r3, #1580	@ 0x62c
 8001140:	f8d7 1c30 	ldr.w	r1, [r7, #3120]	@ 0xc30
 8001144:	f853 3031 	ldr.w	r3, [r3, r1, lsl #3]
 8001148:	2101      	movs	r1, #1
 800114a:	fa01 f303 	lsl.w	r3, r1, r3
 800114e:	43db      	mvns	r3, r3
 8001150:	4619      	mov	r1, r3
 8001152:	4b8b      	ldr	r3, [pc, #556]	@ (8001380 <main+0x1140>)
 8001154:	681b      	ldr	r3, [r3, #0]
 8001156:	400a      	ands	r2, r1
 8001158:	601a      	str	r2, [r3, #0]
    			*GPIOB_ODR &= ~(1 << arrM[i][1]);
 800115a:	4b8a      	ldr	r3, [pc, #552]	@ (8001384 <main+0x1144>)
 800115c:	681b      	ldr	r3, [r3, #0]
 800115e:	681a      	ldr	r2, [r3, #0]
 8001160:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 8001164:	f2a3 612c 	subw	r1, r3, #1580	@ 0x62c
 8001168:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 800116c:	00db      	lsls	r3, r3, #3
 800116e:	440b      	add	r3, r1
 8001170:	685b      	ldr	r3, [r3, #4]
 8001172:	2101      	movs	r1, #1
 8001174:	fa01 f303 	lsl.w	r3, r1, r3
 8001178:	43db      	mvns	r3, r3
 800117a:	4619      	mov	r1, r3
 800117c:	4b81      	ldr	r3, [pc, #516]	@ (8001384 <main+0x1144>)
 800117e:	681b      	ldr	r3, [r3, #0]
 8001180:	400a      	ands	r2, r1
 8001182:	601a      	str	r2, [r3, #0]
    		for (i = 0; i < 17; i++)
 8001184:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 8001188:	3301      	adds	r3, #1
 800118a:	f8c7 3c30 	str.w	r3, [r7, #3120]	@ 0xc30
 800118e:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 8001192:	2b10      	cmp	r3, #16
 8001194:	dda4      	ble.n	80010e0 <main+0xea0>
       for (j = 0; j < c; j++)
 8001196:	f8d7 3c34 	ldr.w	r3, [r7, #3124]	@ 0xc34
 800119a:	3301      	adds	r3, #1
 800119c:	f8c7 3c34 	str.w	r3, [r7, #3124]	@ 0xc34
 80011a0:	f8d7 2c34 	ldr.w	r2, [r7, #3124]	@ 0xc34
 80011a4:	f8d7 3c2c 	ldr.w	r3, [r7, #3116]	@ 0xc2c
 80011a8:	429a      	cmp	r2, r3
 80011aa:	db91      	blt.n	80010d0 <main+0xe90>
    		}
    	}
    	delay1();
 80011ac:	f7ff f826 	bl	80001fc <delay1>
    	for (j = 0; j < c; j++)
 80011b0:	2300      	movs	r3, #0
 80011b2:	f8c7 3c34 	str.w	r3, [r7, #3124]	@ 0xc34
 80011b6:	e063      	b.n	8001280 <main+0x1040>
    	{
    		for (i = 0; i < 17; i++)
 80011b8:	2300      	movs	r3, #0
 80011ba:	f8c7 3c30 	str.w	r3, [r7, #3120]	@ 0xc30
 80011be:	e056      	b.n	800126e <main+0x102e>
    		{
    			*GPIOA_ODR |= (1 << arrN[i][0]);
 80011c0:	4b6f      	ldr	r3, [pc, #444]	@ (8001380 <main+0x1140>)
 80011c2:	681b      	ldr	r3, [r3, #0]
 80011c4:	681a      	ldr	r2, [r3, #0]
 80011c6:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 80011ca:	f2a3 63b4 	subw	r3, r3, #1716	@ 0x6b4
 80011ce:	f8d7 1c30 	ldr.w	r1, [r7, #3120]	@ 0xc30
 80011d2:	f853 3031 	ldr.w	r3, [r3, r1, lsl #3]
 80011d6:	2101      	movs	r1, #1
 80011d8:	fa01 f303 	lsl.w	r3, r1, r3
 80011dc:	4619      	mov	r1, r3
 80011de:	4b68      	ldr	r3, [pc, #416]	@ (8001380 <main+0x1140>)
 80011e0:	681b      	ldr	r3, [r3, #0]
 80011e2:	430a      	orrs	r2, r1
 80011e4:	601a      	str	r2, [r3, #0]
    			*GPIOB_ODR |= (1 << arrN[i][1]);
 80011e6:	4b67      	ldr	r3, [pc, #412]	@ (8001384 <main+0x1144>)
 80011e8:	681b      	ldr	r3, [r3, #0]
 80011ea:	681a      	ldr	r2, [r3, #0]
 80011ec:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 80011f0:	f2a3 61b4 	subw	r1, r3, #1716	@ 0x6b4
 80011f4:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 80011f8:	00db      	lsls	r3, r3, #3
 80011fa:	440b      	add	r3, r1
 80011fc:	685b      	ldr	r3, [r3, #4]
 80011fe:	2101      	movs	r1, #1
 8001200:	fa01 f303 	lsl.w	r3, r1, r3
 8001204:	4619      	mov	r1, r3
 8001206:	4b5f      	ldr	r3, [pc, #380]	@ (8001384 <main+0x1144>)
 8001208:	681b      	ldr	r3, [r3, #0]
 800120a:	430a      	orrs	r2, r1
 800120c:	601a      	str	r2, [r3, #0]
    			delay();
 800120e:	f7fe ffe1 	bl	80001d4 <delay>
    			*GPIOA_ODR &= ~(1 << arrN[i][0]);
 8001212:	4b5b      	ldr	r3, [pc, #364]	@ (8001380 <main+0x1140>)
 8001214:	681b      	ldr	r3, [r3, #0]
 8001216:	681a      	ldr	r2, [r3, #0]
 8001218:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 800121c:	f2a3 63b4 	subw	r3, r3, #1716	@ 0x6b4
 8001220:	f8d7 1c30 	ldr.w	r1, [r7, #3120]	@ 0xc30
 8001224:	f853 3031 	ldr.w	r3, [r3, r1, lsl #3]
 8001228:	2101      	movs	r1, #1
 800122a:	fa01 f303 	lsl.w	r3, r1, r3
 800122e:	43db      	mvns	r3, r3
 8001230:	4619      	mov	r1, r3
 8001232:	4b53      	ldr	r3, [pc, #332]	@ (8001380 <main+0x1140>)
 8001234:	681b      	ldr	r3, [r3, #0]
 8001236:	400a      	ands	r2, r1
 8001238:	601a      	str	r2, [r3, #0]
    			*GPIOB_ODR &= ~(1 << arrN[i][1]);
 800123a:	4b52      	ldr	r3, [pc, #328]	@ (8001384 <main+0x1144>)
 800123c:	681b      	ldr	r3, [r3, #0]
 800123e:	681a      	ldr	r2, [r3, #0]
 8001240:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 8001244:	f2a3 61b4 	subw	r1, r3, #1716	@ 0x6b4
 8001248:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 800124c:	00db      	lsls	r3, r3, #3
 800124e:	440b      	add	r3, r1
 8001250:	685b      	ldr	r3, [r3, #4]
 8001252:	2101      	movs	r1, #1
 8001254:	fa01 f303 	lsl.w	r3, r1, r3
 8001258:	43db      	mvns	r3, r3
 800125a:	4619      	mov	r1, r3
 800125c:	4b49      	ldr	r3, [pc, #292]	@ (8001384 <main+0x1144>)
 800125e:	681b      	ldr	r3, [r3, #0]
 8001260:	400a      	ands	r2, r1
 8001262:	601a      	str	r2, [r3, #0]
    		for (i = 0; i < 17; i++)
 8001264:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 8001268:	3301      	adds	r3, #1
 800126a:	f8c7 3c30 	str.w	r3, [r7, #3120]	@ 0xc30
 800126e:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 8001272:	2b10      	cmp	r3, #16
 8001274:	dda4      	ble.n	80011c0 <main+0xf80>
    	for (j = 0; j < c; j++)
 8001276:	f8d7 3c34 	ldr.w	r3, [r7, #3124]	@ 0xc34
 800127a:	3301      	adds	r3, #1
 800127c:	f8c7 3c34 	str.w	r3, [r7, #3124]	@ 0xc34
 8001280:	f8d7 2c34 	ldr.w	r2, [r7, #3124]	@ 0xc34
 8001284:	f8d7 3c2c 	ldr.w	r3, [r7, #3116]	@ 0xc2c
 8001288:	429a      	cmp	r2, r3
 800128a:	db95      	blt.n	80011b8 <main+0xf78>
    		}
    	}
    	delay1();
 800128c:	f7fe ffb6 	bl	80001fc <delay1>
    	for (j = 0; j < c; j++)
 8001290:	2300      	movs	r3, #0
 8001292:	f8c7 3c34 	str.w	r3, [r7, #3124]	@ 0xc34
 8001296:	e063      	b.n	8001360 <main+0x1120>
    	{
    		for (i = 0; i < 16; i++)
 8001298:	2300      	movs	r3, #0
 800129a:	f8c7 3c30 	str.w	r3, [r7, #3120]	@ 0xc30
 800129e:	e056      	b.n	800134e <main+0x110e>
    		{
    			*GPIOA_ODR |= (1 << arrO[i][0]);
 80012a0:	4b37      	ldr	r3, [pc, #220]	@ (8001380 <main+0x1140>)
 80012a2:	681b      	ldr	r3, [r3, #0]
 80012a4:	681a      	ldr	r2, [r3, #0]
 80012a6:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 80012aa:	f2a3 7334 	subw	r3, r3, #1844	@ 0x734
 80012ae:	f8d7 1c30 	ldr.w	r1, [r7, #3120]	@ 0xc30
 80012b2:	f853 3031 	ldr.w	r3, [r3, r1, lsl #3]
 80012b6:	2101      	movs	r1, #1
 80012b8:	fa01 f303 	lsl.w	r3, r1, r3
 80012bc:	4619      	mov	r1, r3
 80012be:	4b30      	ldr	r3, [pc, #192]	@ (8001380 <main+0x1140>)
 80012c0:	681b      	ldr	r3, [r3, #0]
 80012c2:	430a      	orrs	r2, r1
 80012c4:	601a      	str	r2, [r3, #0]
    			*GPIOB_ODR |= (1 << arrO[i][1]);
 80012c6:	4b2f      	ldr	r3, [pc, #188]	@ (8001384 <main+0x1144>)
 80012c8:	681b      	ldr	r3, [r3, #0]
 80012ca:	681a      	ldr	r2, [r3, #0]
 80012cc:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 80012d0:	f2a3 7134 	subw	r1, r3, #1844	@ 0x734
 80012d4:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 80012d8:	00db      	lsls	r3, r3, #3
 80012da:	440b      	add	r3, r1
 80012dc:	685b      	ldr	r3, [r3, #4]
 80012de:	2101      	movs	r1, #1
 80012e0:	fa01 f303 	lsl.w	r3, r1, r3
 80012e4:	4619      	mov	r1, r3
 80012e6:	4b27      	ldr	r3, [pc, #156]	@ (8001384 <main+0x1144>)
 80012e8:	681b      	ldr	r3, [r3, #0]
 80012ea:	430a      	orrs	r2, r1
 80012ec:	601a      	str	r2, [r3, #0]
    			delay();
 80012ee:	f7fe ff71 	bl	80001d4 <delay>
    			*GPIOA_ODR &= ~(1 << arrO[i][0]);
 80012f2:	4b23      	ldr	r3, [pc, #140]	@ (8001380 <main+0x1140>)
 80012f4:	681b      	ldr	r3, [r3, #0]
 80012f6:	681a      	ldr	r2, [r3, #0]
 80012f8:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 80012fc:	f2a3 7334 	subw	r3, r3, #1844	@ 0x734
 8001300:	f8d7 1c30 	ldr.w	r1, [r7, #3120]	@ 0xc30
 8001304:	f853 3031 	ldr.w	r3, [r3, r1, lsl #3]
 8001308:	2101      	movs	r1, #1
 800130a:	fa01 f303 	lsl.w	r3, r1, r3
 800130e:	43db      	mvns	r3, r3
 8001310:	4619      	mov	r1, r3
 8001312:	4b1b      	ldr	r3, [pc, #108]	@ (8001380 <main+0x1140>)
 8001314:	681b      	ldr	r3, [r3, #0]
 8001316:	400a      	ands	r2, r1
 8001318:	601a      	str	r2, [r3, #0]
    			*GPIOB_ODR &= ~(1 << arrO[i][1]);
 800131a:	4b1a      	ldr	r3, [pc, #104]	@ (8001384 <main+0x1144>)
 800131c:	681b      	ldr	r3, [r3, #0]
 800131e:	681a      	ldr	r2, [r3, #0]
 8001320:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 8001324:	f2a3 7134 	subw	r1, r3, #1844	@ 0x734
 8001328:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 800132c:	00db      	lsls	r3, r3, #3
 800132e:	440b      	add	r3, r1
 8001330:	685b      	ldr	r3, [r3, #4]
 8001332:	2101      	movs	r1, #1
 8001334:	fa01 f303 	lsl.w	r3, r1, r3
 8001338:	43db      	mvns	r3, r3
 800133a:	4619      	mov	r1, r3
 800133c:	4b11      	ldr	r3, [pc, #68]	@ (8001384 <main+0x1144>)
 800133e:	681b      	ldr	r3, [r3, #0]
 8001340:	400a      	ands	r2, r1
 8001342:	601a      	str	r2, [r3, #0]
    		for (i = 0; i < 16; i++)
 8001344:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 8001348:	3301      	adds	r3, #1
 800134a:	f8c7 3c30 	str.w	r3, [r7, #3120]	@ 0xc30
 800134e:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 8001352:	2b0f      	cmp	r3, #15
 8001354:	dda4      	ble.n	80012a0 <main+0x1060>
    	for (j = 0; j < c; j++)
 8001356:	f8d7 3c34 	ldr.w	r3, [r7, #3124]	@ 0xc34
 800135a:	3301      	adds	r3, #1
 800135c:	f8c7 3c34 	str.w	r3, [r7, #3124]	@ 0xc34
 8001360:	f8d7 2c34 	ldr.w	r2, [r7, #3124]	@ 0xc34
 8001364:	f8d7 3c2c 	ldr.w	r3, [r7, #3116]	@ 0xc2c
 8001368:	429a      	cmp	r2, r3
 800136a:	db95      	blt.n	8001298 <main+0x1058>
    		}
    	}
    	delay1();
 800136c:	f7fe ff46 	bl	80001fc <delay1>
    	for (j = 0; j < c; j++)
 8001370:	2300      	movs	r3, #0
 8001372:	f8c7 3c34 	str.w	r3, [r7, #3124]	@ 0xc34
 8001376:	e067      	b.n	8001448 <main+0x1208>
    	{
    		for (i = 0; i < 15; i++)
 8001378:	2300      	movs	r3, #0
 800137a:	f8c7 3c30 	str.w	r3, [r7, #3120]	@ 0xc30
 800137e:	e05a      	b.n	8001436 <main+0x11f6>
 8001380:	20000010 	.word	0x20000010
 8001384:	20000018 	.word	0x20000018
    		{
    			*GPIOA_ODR |= (1 << arrP[i][0]);
 8001388:	4ba7      	ldr	r3, [pc, #668]	@ (8001628 <main+0x13e8>)
 800138a:	681b      	ldr	r3, [r3, #0]
 800138c:	681a      	ldr	r2, [r3, #0]
 800138e:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 8001392:	f2a3 73ac 	subw	r3, r3, #1964	@ 0x7ac
 8001396:	f8d7 1c30 	ldr.w	r1, [r7, #3120]	@ 0xc30
 800139a:	f853 3031 	ldr.w	r3, [r3, r1, lsl #3]
 800139e:	2101      	movs	r1, #1
 80013a0:	fa01 f303 	lsl.w	r3, r1, r3
 80013a4:	4619      	mov	r1, r3
 80013a6:	4ba0      	ldr	r3, [pc, #640]	@ (8001628 <main+0x13e8>)
 80013a8:	681b      	ldr	r3, [r3, #0]
 80013aa:	430a      	orrs	r2, r1
 80013ac:	601a      	str	r2, [r3, #0]
    			*GPIOB_ODR |= (1 << arrP[i][1]);
 80013ae:	4b9f      	ldr	r3, [pc, #636]	@ (800162c <main+0x13ec>)
 80013b0:	681b      	ldr	r3, [r3, #0]
 80013b2:	681a      	ldr	r2, [r3, #0]
 80013b4:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 80013b8:	f2a3 71ac 	subw	r1, r3, #1964	@ 0x7ac
 80013bc:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 80013c0:	00db      	lsls	r3, r3, #3
 80013c2:	440b      	add	r3, r1
 80013c4:	685b      	ldr	r3, [r3, #4]
 80013c6:	2101      	movs	r1, #1
 80013c8:	fa01 f303 	lsl.w	r3, r1, r3
 80013cc:	4619      	mov	r1, r3
 80013ce:	4b97      	ldr	r3, [pc, #604]	@ (800162c <main+0x13ec>)
 80013d0:	681b      	ldr	r3, [r3, #0]
 80013d2:	430a      	orrs	r2, r1
 80013d4:	601a      	str	r2, [r3, #0]
    			delay();
 80013d6:	f7fe fefd 	bl	80001d4 <delay>
    			*GPIOA_ODR &= ~(1 << arrP[i][0]);
 80013da:	4b93      	ldr	r3, [pc, #588]	@ (8001628 <main+0x13e8>)
 80013dc:	681b      	ldr	r3, [r3, #0]
 80013de:	681a      	ldr	r2, [r3, #0]
 80013e0:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 80013e4:	f2a3 73ac 	subw	r3, r3, #1964	@ 0x7ac
 80013e8:	f8d7 1c30 	ldr.w	r1, [r7, #3120]	@ 0xc30
 80013ec:	f853 3031 	ldr.w	r3, [r3, r1, lsl #3]
 80013f0:	2101      	movs	r1, #1
 80013f2:	fa01 f303 	lsl.w	r3, r1, r3
 80013f6:	43db      	mvns	r3, r3
 80013f8:	4619      	mov	r1, r3
 80013fa:	4b8b      	ldr	r3, [pc, #556]	@ (8001628 <main+0x13e8>)
 80013fc:	681b      	ldr	r3, [r3, #0]
 80013fe:	400a      	ands	r2, r1
 8001400:	601a      	str	r2, [r3, #0]
    			*GPIOB_ODR &= ~(1 << arrP[i][1]);
 8001402:	4b8a      	ldr	r3, [pc, #552]	@ (800162c <main+0x13ec>)
 8001404:	681b      	ldr	r3, [r3, #0]
 8001406:	681a      	ldr	r2, [r3, #0]
 8001408:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 800140c:	f2a3 71ac 	subw	r1, r3, #1964	@ 0x7ac
 8001410:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 8001414:	00db      	lsls	r3, r3, #3
 8001416:	440b      	add	r3, r1
 8001418:	685b      	ldr	r3, [r3, #4]
 800141a:	2101      	movs	r1, #1
 800141c:	fa01 f303 	lsl.w	r3, r1, r3
 8001420:	43db      	mvns	r3, r3
 8001422:	4619      	mov	r1, r3
 8001424:	4b81      	ldr	r3, [pc, #516]	@ (800162c <main+0x13ec>)
 8001426:	681b      	ldr	r3, [r3, #0]
 8001428:	400a      	ands	r2, r1
 800142a:	601a      	str	r2, [r3, #0]
    		for (i = 0; i < 15; i++)
 800142c:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 8001430:	3301      	adds	r3, #1
 8001432:	f8c7 3c30 	str.w	r3, [r7, #3120]	@ 0xc30
 8001436:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 800143a:	2b0e      	cmp	r3, #14
 800143c:	dda4      	ble.n	8001388 <main+0x1148>
    	for (j = 0; j < c; j++)
 800143e:	f8d7 3c34 	ldr.w	r3, [r7, #3124]	@ 0xc34
 8001442:	3301      	adds	r3, #1
 8001444:	f8c7 3c34 	str.w	r3, [r7, #3124]	@ 0xc34
 8001448:	f8d7 2c34 	ldr.w	r2, [r7, #3124]	@ 0xc34
 800144c:	f8d7 3c2c 	ldr.w	r3, [r7, #3116]	@ 0xc2c
 8001450:	429a      	cmp	r2, r3
 8001452:	db91      	blt.n	8001378 <main+0x1138>
    		}
    	}
    	delay1();
 8001454:	f7fe fed2 	bl	80001fc <delay1>
    	for (j = 0; j < c; j++)
 8001458:	2300      	movs	r3, #0
 800145a:	f8c7 3c34 	str.w	r3, [r7, #3124]	@ 0xc34
 800145e:	e063      	b.n	8001528 <main+0x12e8>
    	{
    		for (i = 0; i < 17; i++)
 8001460:	2300      	movs	r3, #0
 8001462:	f8c7 3c30 	str.w	r3, [r7, #3120]	@ 0xc30
 8001466:	e056      	b.n	8001516 <main+0x12d6>
    		{
    			*GPIOA_ODR |= (1 << arrQ[i][0]);
 8001468:	4b6f      	ldr	r3, [pc, #444]	@ (8001628 <main+0x13e8>)
 800146a:	681b      	ldr	r3, [r3, #0]
 800146c:	681a      	ldr	r2, [r3, #0]
 800146e:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 8001472:	f6a3 0334 	subw	r3, r3, #2100	@ 0x834
 8001476:	f8d7 1c30 	ldr.w	r1, [r7, #3120]	@ 0xc30
 800147a:	f853 3031 	ldr.w	r3, [r3, r1, lsl #3]
 800147e:	2101      	movs	r1, #1
 8001480:	fa01 f303 	lsl.w	r3, r1, r3
 8001484:	4619      	mov	r1, r3
 8001486:	4b68      	ldr	r3, [pc, #416]	@ (8001628 <main+0x13e8>)
 8001488:	681b      	ldr	r3, [r3, #0]
 800148a:	430a      	orrs	r2, r1
 800148c:	601a      	str	r2, [r3, #0]
    			*GPIOB_ODR |= (1 << arrQ[i][1]);
 800148e:	4b67      	ldr	r3, [pc, #412]	@ (800162c <main+0x13ec>)
 8001490:	681b      	ldr	r3, [r3, #0]
 8001492:	681a      	ldr	r2, [r3, #0]
 8001494:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 8001498:	f6a3 0134 	subw	r1, r3, #2100	@ 0x834
 800149c:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 80014a0:	00db      	lsls	r3, r3, #3
 80014a2:	440b      	add	r3, r1
 80014a4:	685b      	ldr	r3, [r3, #4]
 80014a6:	2101      	movs	r1, #1
 80014a8:	fa01 f303 	lsl.w	r3, r1, r3
 80014ac:	4619      	mov	r1, r3
 80014ae:	4b5f      	ldr	r3, [pc, #380]	@ (800162c <main+0x13ec>)
 80014b0:	681b      	ldr	r3, [r3, #0]
 80014b2:	430a      	orrs	r2, r1
 80014b4:	601a      	str	r2, [r3, #0]
    			delay();
 80014b6:	f7fe fe8d 	bl	80001d4 <delay>
    			*GPIOA_ODR &= ~(1 << arrQ[i][0]);
 80014ba:	4b5b      	ldr	r3, [pc, #364]	@ (8001628 <main+0x13e8>)
 80014bc:	681b      	ldr	r3, [r3, #0]
 80014be:	681a      	ldr	r2, [r3, #0]
 80014c0:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 80014c4:	f6a3 0334 	subw	r3, r3, #2100	@ 0x834
 80014c8:	f8d7 1c30 	ldr.w	r1, [r7, #3120]	@ 0xc30
 80014cc:	f853 3031 	ldr.w	r3, [r3, r1, lsl #3]
 80014d0:	2101      	movs	r1, #1
 80014d2:	fa01 f303 	lsl.w	r3, r1, r3
 80014d6:	43db      	mvns	r3, r3
 80014d8:	4619      	mov	r1, r3
 80014da:	4b53      	ldr	r3, [pc, #332]	@ (8001628 <main+0x13e8>)
 80014dc:	681b      	ldr	r3, [r3, #0]
 80014de:	400a      	ands	r2, r1
 80014e0:	601a      	str	r2, [r3, #0]
    			*GPIOB_ODR &= ~(1 << arrQ[i][1]);
 80014e2:	4b52      	ldr	r3, [pc, #328]	@ (800162c <main+0x13ec>)
 80014e4:	681b      	ldr	r3, [r3, #0]
 80014e6:	681a      	ldr	r2, [r3, #0]
 80014e8:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 80014ec:	f6a3 0134 	subw	r1, r3, #2100	@ 0x834
 80014f0:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 80014f4:	00db      	lsls	r3, r3, #3
 80014f6:	440b      	add	r3, r1
 80014f8:	685b      	ldr	r3, [r3, #4]
 80014fa:	2101      	movs	r1, #1
 80014fc:	fa01 f303 	lsl.w	r3, r1, r3
 8001500:	43db      	mvns	r3, r3
 8001502:	4619      	mov	r1, r3
 8001504:	4b49      	ldr	r3, [pc, #292]	@ (800162c <main+0x13ec>)
 8001506:	681b      	ldr	r3, [r3, #0]
 8001508:	400a      	ands	r2, r1
 800150a:	601a      	str	r2, [r3, #0]
    		for (i = 0; i < 17; i++)
 800150c:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 8001510:	3301      	adds	r3, #1
 8001512:	f8c7 3c30 	str.w	r3, [r7, #3120]	@ 0xc30
 8001516:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 800151a:	2b10      	cmp	r3, #16
 800151c:	dda4      	ble.n	8001468 <main+0x1228>
    	for (j = 0; j < c; j++)
 800151e:	f8d7 3c34 	ldr.w	r3, [r7, #3124]	@ 0xc34
 8001522:	3301      	adds	r3, #1
 8001524:	f8c7 3c34 	str.w	r3, [r7, #3124]	@ 0xc34
 8001528:	f8d7 2c34 	ldr.w	r2, [r7, #3124]	@ 0xc34
 800152c:	f8d7 3c2c 	ldr.w	r3, [r7, #3116]	@ 0xc2c
 8001530:	429a      	cmp	r2, r3
 8001532:	db95      	blt.n	8001460 <main+0x1220>
    		}
    	}
    	delay1();
 8001534:	f7fe fe62 	bl	80001fc <delay1>
    	for (j = 0; j < c; j++)
 8001538:	2300      	movs	r3, #0
 800153a:	f8c7 3c34 	str.w	r3, [r7, #3124]	@ 0xc34
 800153e:	e063      	b.n	8001608 <main+0x13c8>
    	{
    		for (i = 0; i < 18; i++)
 8001540:	2300      	movs	r3, #0
 8001542:	f8c7 3c30 	str.w	r3, [r7, #3120]	@ 0xc30
 8001546:	e056      	b.n	80015f6 <main+0x13b6>
    		{
    			*GPIOA_ODR |= (1 << arrR[i][0]);
 8001548:	4b37      	ldr	r3, [pc, #220]	@ (8001628 <main+0x13e8>)
 800154a:	681b      	ldr	r3, [r3, #0]
 800154c:	681a      	ldr	r2, [r3, #0]
 800154e:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 8001552:	f6a3 03c4 	subw	r3, r3, #2244	@ 0x8c4
 8001556:	f8d7 1c30 	ldr.w	r1, [r7, #3120]	@ 0xc30
 800155a:	f853 3031 	ldr.w	r3, [r3, r1, lsl #3]
 800155e:	2101      	movs	r1, #1
 8001560:	fa01 f303 	lsl.w	r3, r1, r3
 8001564:	4619      	mov	r1, r3
 8001566:	4b30      	ldr	r3, [pc, #192]	@ (8001628 <main+0x13e8>)
 8001568:	681b      	ldr	r3, [r3, #0]
 800156a:	430a      	orrs	r2, r1
 800156c:	601a      	str	r2, [r3, #0]
    			*GPIOB_ODR |= (1 << arrR[i][1]);
 800156e:	4b2f      	ldr	r3, [pc, #188]	@ (800162c <main+0x13ec>)
 8001570:	681b      	ldr	r3, [r3, #0]
 8001572:	681a      	ldr	r2, [r3, #0]
 8001574:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 8001578:	f6a3 01c4 	subw	r1, r3, #2244	@ 0x8c4
 800157c:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 8001580:	00db      	lsls	r3, r3, #3
 8001582:	440b      	add	r3, r1
 8001584:	685b      	ldr	r3, [r3, #4]
 8001586:	2101      	movs	r1, #1
 8001588:	fa01 f303 	lsl.w	r3, r1, r3
 800158c:	4619      	mov	r1, r3
 800158e:	4b27      	ldr	r3, [pc, #156]	@ (800162c <main+0x13ec>)
 8001590:	681b      	ldr	r3, [r3, #0]
 8001592:	430a      	orrs	r2, r1
 8001594:	601a      	str	r2, [r3, #0]
    			delay();
 8001596:	f7fe fe1d 	bl	80001d4 <delay>
    			*GPIOA_ODR &= ~(1 << arrR[i][0]);
 800159a:	4b23      	ldr	r3, [pc, #140]	@ (8001628 <main+0x13e8>)
 800159c:	681b      	ldr	r3, [r3, #0]
 800159e:	681a      	ldr	r2, [r3, #0]
 80015a0:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 80015a4:	f6a3 03c4 	subw	r3, r3, #2244	@ 0x8c4
 80015a8:	f8d7 1c30 	ldr.w	r1, [r7, #3120]	@ 0xc30
 80015ac:	f853 3031 	ldr.w	r3, [r3, r1, lsl #3]
 80015b0:	2101      	movs	r1, #1
 80015b2:	fa01 f303 	lsl.w	r3, r1, r3
 80015b6:	43db      	mvns	r3, r3
 80015b8:	4619      	mov	r1, r3
 80015ba:	4b1b      	ldr	r3, [pc, #108]	@ (8001628 <main+0x13e8>)
 80015bc:	681b      	ldr	r3, [r3, #0]
 80015be:	400a      	ands	r2, r1
 80015c0:	601a      	str	r2, [r3, #0]
    			*GPIOB_ODR &= ~(1 << arrR[i][1]);
 80015c2:	4b1a      	ldr	r3, [pc, #104]	@ (800162c <main+0x13ec>)
 80015c4:	681b      	ldr	r3, [r3, #0]
 80015c6:	681a      	ldr	r2, [r3, #0]
 80015c8:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 80015cc:	f6a3 01c4 	subw	r1, r3, #2244	@ 0x8c4
 80015d0:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 80015d4:	00db      	lsls	r3, r3, #3
 80015d6:	440b      	add	r3, r1
 80015d8:	685b      	ldr	r3, [r3, #4]
 80015da:	2101      	movs	r1, #1
 80015dc:	fa01 f303 	lsl.w	r3, r1, r3
 80015e0:	43db      	mvns	r3, r3
 80015e2:	4619      	mov	r1, r3
 80015e4:	4b11      	ldr	r3, [pc, #68]	@ (800162c <main+0x13ec>)
 80015e6:	681b      	ldr	r3, [r3, #0]
 80015e8:	400a      	ands	r2, r1
 80015ea:	601a      	str	r2, [r3, #0]
    		for (i = 0; i < 18; i++)
 80015ec:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 80015f0:	3301      	adds	r3, #1
 80015f2:	f8c7 3c30 	str.w	r3, [r7, #3120]	@ 0xc30
 80015f6:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 80015fa:	2b11      	cmp	r3, #17
 80015fc:	dda4      	ble.n	8001548 <main+0x1308>
    	for (j = 0; j < c; j++)
 80015fe:	f8d7 3c34 	ldr.w	r3, [r7, #3124]	@ 0xc34
 8001602:	3301      	adds	r3, #1
 8001604:	f8c7 3c34 	str.w	r3, [r7, #3124]	@ 0xc34
 8001608:	f8d7 2c34 	ldr.w	r2, [r7, #3124]	@ 0xc34
 800160c:	f8d7 3c2c 	ldr.w	r3, [r7, #3116]	@ 0xc2c
 8001610:	429a      	cmp	r2, r3
 8001612:	db95      	blt.n	8001540 <main+0x1300>
    		}
    	}
    	delay1();
 8001614:	f7fe fdf2 	bl	80001fc <delay1>
    	for (j = 0; j < c; j++)
 8001618:	2300      	movs	r3, #0
 800161a:	f8c7 3c34 	str.w	r3, [r7, #3124]	@ 0xc34
 800161e:	e067      	b.n	80016f0 <main+0x14b0>
    	{
    		for (i = 0; i < 15; i++)
 8001620:	2300      	movs	r3, #0
 8001622:	f8c7 3c30 	str.w	r3, [r7, #3120]	@ 0xc30
 8001626:	e05a      	b.n	80016de <main+0x149e>
 8001628:	20000010 	.word	0x20000010
 800162c:	20000018 	.word	0x20000018
    		{
    			*GPIOA_ODR |= (1 << arrS[i][0]);
 8001630:	4ba7      	ldr	r3, [pc, #668]	@ (80018d0 <main+0x1690>)
 8001632:	681b      	ldr	r3, [r3, #0]
 8001634:	681a      	ldr	r2, [r3, #0]
 8001636:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 800163a:	f6a3 133c 	subw	r3, r3, #2364	@ 0x93c
 800163e:	f8d7 1c30 	ldr.w	r1, [r7, #3120]	@ 0xc30
 8001642:	f853 3031 	ldr.w	r3, [r3, r1, lsl #3]
 8001646:	2101      	movs	r1, #1
 8001648:	fa01 f303 	lsl.w	r3, r1, r3
 800164c:	4619      	mov	r1, r3
 800164e:	4ba0      	ldr	r3, [pc, #640]	@ (80018d0 <main+0x1690>)
 8001650:	681b      	ldr	r3, [r3, #0]
 8001652:	430a      	orrs	r2, r1
 8001654:	601a      	str	r2, [r3, #0]
    			*GPIOB_ODR |= (1 << arrS[i][1]);
 8001656:	4b9f      	ldr	r3, [pc, #636]	@ (80018d4 <main+0x1694>)
 8001658:	681b      	ldr	r3, [r3, #0]
 800165a:	681a      	ldr	r2, [r3, #0]
 800165c:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 8001660:	f6a3 113c 	subw	r1, r3, #2364	@ 0x93c
 8001664:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 8001668:	00db      	lsls	r3, r3, #3
 800166a:	440b      	add	r3, r1
 800166c:	685b      	ldr	r3, [r3, #4]
 800166e:	2101      	movs	r1, #1
 8001670:	fa01 f303 	lsl.w	r3, r1, r3
 8001674:	4619      	mov	r1, r3
 8001676:	4b97      	ldr	r3, [pc, #604]	@ (80018d4 <main+0x1694>)
 8001678:	681b      	ldr	r3, [r3, #0]
 800167a:	430a      	orrs	r2, r1
 800167c:	601a      	str	r2, [r3, #0]
    			delay();
 800167e:	f7fe fda9 	bl	80001d4 <delay>
    			*GPIOA_ODR &= ~(1 << arrS[i][0]);
 8001682:	4b93      	ldr	r3, [pc, #588]	@ (80018d0 <main+0x1690>)
 8001684:	681b      	ldr	r3, [r3, #0]
 8001686:	681a      	ldr	r2, [r3, #0]
 8001688:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 800168c:	f6a3 133c 	subw	r3, r3, #2364	@ 0x93c
 8001690:	f8d7 1c30 	ldr.w	r1, [r7, #3120]	@ 0xc30
 8001694:	f853 3031 	ldr.w	r3, [r3, r1, lsl #3]
 8001698:	2101      	movs	r1, #1
 800169a:	fa01 f303 	lsl.w	r3, r1, r3
 800169e:	43db      	mvns	r3, r3
 80016a0:	4619      	mov	r1, r3
 80016a2:	4b8b      	ldr	r3, [pc, #556]	@ (80018d0 <main+0x1690>)
 80016a4:	681b      	ldr	r3, [r3, #0]
 80016a6:	400a      	ands	r2, r1
 80016a8:	601a      	str	r2, [r3, #0]
    			*GPIOB_ODR &= ~(1 << arrS[i][1]);
 80016aa:	4b8a      	ldr	r3, [pc, #552]	@ (80018d4 <main+0x1694>)
 80016ac:	681b      	ldr	r3, [r3, #0]
 80016ae:	681a      	ldr	r2, [r3, #0]
 80016b0:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 80016b4:	f6a3 113c 	subw	r1, r3, #2364	@ 0x93c
 80016b8:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 80016bc:	00db      	lsls	r3, r3, #3
 80016be:	440b      	add	r3, r1
 80016c0:	685b      	ldr	r3, [r3, #4]
 80016c2:	2101      	movs	r1, #1
 80016c4:	fa01 f303 	lsl.w	r3, r1, r3
 80016c8:	43db      	mvns	r3, r3
 80016ca:	4619      	mov	r1, r3
 80016cc:	4b81      	ldr	r3, [pc, #516]	@ (80018d4 <main+0x1694>)
 80016ce:	681b      	ldr	r3, [r3, #0]
 80016d0:	400a      	ands	r2, r1
 80016d2:	601a      	str	r2, [r3, #0]
    		for (i = 0; i < 15; i++)
 80016d4:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 80016d8:	3301      	adds	r3, #1
 80016da:	f8c7 3c30 	str.w	r3, [r7, #3120]	@ 0xc30
 80016de:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 80016e2:	2b0e      	cmp	r3, #14
 80016e4:	dda4      	ble.n	8001630 <main+0x13f0>
    	for (j = 0; j < c; j++)
 80016e6:	f8d7 3c34 	ldr.w	r3, [r7, #3124]	@ 0xc34
 80016ea:	3301      	adds	r3, #1
 80016ec:	f8c7 3c34 	str.w	r3, [r7, #3124]	@ 0xc34
 80016f0:	f8d7 2c34 	ldr.w	r2, [r7, #3124]	@ 0xc34
 80016f4:	f8d7 3c2c 	ldr.w	r3, [r7, #3116]	@ 0xc2c
 80016f8:	429a      	cmp	r2, r3
 80016fa:	db91      	blt.n	8001620 <main+0x13e0>
    		}
    	}
    	delay1();
 80016fc:	f7fe fd7e 	bl	80001fc <delay1>
    	for (j = 0; j < c; j++)
 8001700:	2300      	movs	r3, #0
 8001702:	f8c7 3c34 	str.w	r3, [r7, #3124]	@ 0xc34
 8001706:	e063      	b.n	80017d0 <main+0x1590>
    	{
    		for (i = 0; i < 11; i++)
 8001708:	2300      	movs	r3, #0
 800170a:	f8c7 3c30 	str.w	r3, [r7, #3120]	@ 0xc30
 800170e:	e056      	b.n	80017be <main+0x157e>
    		{
    			*GPIOA_ODR |= (1 << arrT[i][0]);
 8001710:	4b6f      	ldr	r3, [pc, #444]	@ (80018d0 <main+0x1690>)
 8001712:	681b      	ldr	r3, [r3, #0]
 8001714:	681a      	ldr	r2, [r3, #0]
 8001716:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 800171a:	f6a3 1394 	subw	r3, r3, #2452	@ 0x994
 800171e:	f8d7 1c30 	ldr.w	r1, [r7, #3120]	@ 0xc30
 8001722:	f853 3031 	ldr.w	r3, [r3, r1, lsl #3]
 8001726:	2101      	movs	r1, #1
 8001728:	fa01 f303 	lsl.w	r3, r1, r3
 800172c:	4619      	mov	r1, r3
 800172e:	4b68      	ldr	r3, [pc, #416]	@ (80018d0 <main+0x1690>)
 8001730:	681b      	ldr	r3, [r3, #0]
 8001732:	430a      	orrs	r2, r1
 8001734:	601a      	str	r2, [r3, #0]
    			*GPIOB_ODR |= (1 << arrT[i][1]);
 8001736:	4b67      	ldr	r3, [pc, #412]	@ (80018d4 <main+0x1694>)
 8001738:	681b      	ldr	r3, [r3, #0]
 800173a:	681a      	ldr	r2, [r3, #0]
 800173c:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 8001740:	f6a3 1194 	subw	r1, r3, #2452	@ 0x994
 8001744:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 8001748:	00db      	lsls	r3, r3, #3
 800174a:	440b      	add	r3, r1
 800174c:	685b      	ldr	r3, [r3, #4]
 800174e:	2101      	movs	r1, #1
 8001750:	fa01 f303 	lsl.w	r3, r1, r3
 8001754:	4619      	mov	r1, r3
 8001756:	4b5f      	ldr	r3, [pc, #380]	@ (80018d4 <main+0x1694>)
 8001758:	681b      	ldr	r3, [r3, #0]
 800175a:	430a      	orrs	r2, r1
 800175c:	601a      	str	r2, [r3, #0]
    			delay();
 800175e:	f7fe fd39 	bl	80001d4 <delay>
    			*GPIOA_ODR &= ~(1 << arrT[i][0]);
 8001762:	4b5b      	ldr	r3, [pc, #364]	@ (80018d0 <main+0x1690>)
 8001764:	681b      	ldr	r3, [r3, #0]
 8001766:	681a      	ldr	r2, [r3, #0]
 8001768:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 800176c:	f6a3 1394 	subw	r3, r3, #2452	@ 0x994
 8001770:	f8d7 1c30 	ldr.w	r1, [r7, #3120]	@ 0xc30
 8001774:	f853 3031 	ldr.w	r3, [r3, r1, lsl #3]
 8001778:	2101      	movs	r1, #1
 800177a:	fa01 f303 	lsl.w	r3, r1, r3
 800177e:	43db      	mvns	r3, r3
 8001780:	4619      	mov	r1, r3
 8001782:	4b53      	ldr	r3, [pc, #332]	@ (80018d0 <main+0x1690>)
 8001784:	681b      	ldr	r3, [r3, #0]
 8001786:	400a      	ands	r2, r1
 8001788:	601a      	str	r2, [r3, #0]
    			*GPIOB_ODR &= ~(1 << arrT[i][1]);
 800178a:	4b52      	ldr	r3, [pc, #328]	@ (80018d4 <main+0x1694>)
 800178c:	681b      	ldr	r3, [r3, #0]
 800178e:	681a      	ldr	r2, [r3, #0]
 8001790:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 8001794:	f6a3 1194 	subw	r1, r3, #2452	@ 0x994
 8001798:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 800179c:	00db      	lsls	r3, r3, #3
 800179e:	440b      	add	r3, r1
 80017a0:	685b      	ldr	r3, [r3, #4]
 80017a2:	2101      	movs	r1, #1
 80017a4:	fa01 f303 	lsl.w	r3, r1, r3
 80017a8:	43db      	mvns	r3, r3
 80017aa:	4619      	mov	r1, r3
 80017ac:	4b49      	ldr	r3, [pc, #292]	@ (80018d4 <main+0x1694>)
 80017ae:	681b      	ldr	r3, [r3, #0]
 80017b0:	400a      	ands	r2, r1
 80017b2:	601a      	str	r2, [r3, #0]
    		for (i = 0; i < 11; i++)
 80017b4:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 80017b8:	3301      	adds	r3, #1
 80017ba:	f8c7 3c30 	str.w	r3, [r7, #3120]	@ 0xc30
 80017be:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 80017c2:	2b0a      	cmp	r3, #10
 80017c4:	dda4      	ble.n	8001710 <main+0x14d0>
    	for (j = 0; j < c; j++)
 80017c6:	f8d7 3c34 	ldr.w	r3, [r7, #3124]	@ 0xc34
 80017ca:	3301      	adds	r3, #1
 80017cc:	f8c7 3c34 	str.w	r3, [r7, #3124]	@ 0xc34
 80017d0:	f8d7 2c34 	ldr.w	r2, [r7, #3124]	@ 0xc34
 80017d4:	f8d7 3c2c 	ldr.w	r3, [r7, #3116]	@ 0xc2c
 80017d8:	429a      	cmp	r2, r3
 80017da:	db95      	blt.n	8001708 <main+0x14c8>
    		}
    	}
    	delay1();
 80017dc:	f7fe fd0e 	bl	80001fc <delay1>

    	for (j = 0; j < c; j++)
 80017e0:	2300      	movs	r3, #0
 80017e2:	f8c7 3c34 	str.w	r3, [r7, #3124]	@ 0xc34
 80017e6:	e063      	b.n	80018b0 <main+0x1670>
    	{
    		for (i = 0; i < 15; i++)
 80017e8:	2300      	movs	r3, #0
 80017ea:	f8c7 3c30 	str.w	r3, [r7, #3120]	@ 0xc30
 80017ee:	e056      	b.n	800189e <main+0x165e>
    		{
    			*GPIOA_ODR |= (1 << arrU[i][0]);
 80017f0:	4b37      	ldr	r3, [pc, #220]	@ (80018d0 <main+0x1690>)
 80017f2:	681b      	ldr	r3, [r3, #0]
 80017f4:	681a      	ldr	r2, [r3, #0]
 80017f6:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 80017fa:	f6a3 230c 	subw	r3, r3, #2572	@ 0xa0c
 80017fe:	f8d7 1c30 	ldr.w	r1, [r7, #3120]	@ 0xc30
 8001802:	f853 3031 	ldr.w	r3, [r3, r1, lsl #3]
 8001806:	2101      	movs	r1, #1
 8001808:	fa01 f303 	lsl.w	r3, r1, r3
 800180c:	4619      	mov	r1, r3
 800180e:	4b30      	ldr	r3, [pc, #192]	@ (80018d0 <main+0x1690>)
 8001810:	681b      	ldr	r3, [r3, #0]
 8001812:	430a      	orrs	r2, r1
 8001814:	601a      	str	r2, [r3, #0]
    			*GPIOB_ODR |= (1 << arrU[i][1]);
 8001816:	4b2f      	ldr	r3, [pc, #188]	@ (80018d4 <main+0x1694>)
 8001818:	681b      	ldr	r3, [r3, #0]
 800181a:	681a      	ldr	r2, [r3, #0]
 800181c:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 8001820:	f6a3 210c 	subw	r1, r3, #2572	@ 0xa0c
 8001824:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 8001828:	00db      	lsls	r3, r3, #3
 800182a:	440b      	add	r3, r1
 800182c:	685b      	ldr	r3, [r3, #4]
 800182e:	2101      	movs	r1, #1
 8001830:	fa01 f303 	lsl.w	r3, r1, r3
 8001834:	4619      	mov	r1, r3
 8001836:	4b27      	ldr	r3, [pc, #156]	@ (80018d4 <main+0x1694>)
 8001838:	681b      	ldr	r3, [r3, #0]
 800183a:	430a      	orrs	r2, r1
 800183c:	601a      	str	r2, [r3, #0]
    			delay();
 800183e:	f7fe fcc9 	bl	80001d4 <delay>
    			*GPIOA_ODR &= ~(1 << arrU[i][0]);
 8001842:	4b23      	ldr	r3, [pc, #140]	@ (80018d0 <main+0x1690>)
 8001844:	681b      	ldr	r3, [r3, #0]
 8001846:	681a      	ldr	r2, [r3, #0]
 8001848:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 800184c:	f6a3 230c 	subw	r3, r3, #2572	@ 0xa0c
 8001850:	f8d7 1c30 	ldr.w	r1, [r7, #3120]	@ 0xc30
 8001854:	f853 3031 	ldr.w	r3, [r3, r1, lsl #3]
 8001858:	2101      	movs	r1, #1
 800185a:	fa01 f303 	lsl.w	r3, r1, r3
 800185e:	43db      	mvns	r3, r3
 8001860:	4619      	mov	r1, r3
 8001862:	4b1b      	ldr	r3, [pc, #108]	@ (80018d0 <main+0x1690>)
 8001864:	681b      	ldr	r3, [r3, #0]
 8001866:	400a      	ands	r2, r1
 8001868:	601a      	str	r2, [r3, #0]
    			*GPIOB_ODR &= ~(1 << arrU[i][1]);
 800186a:	4b1a      	ldr	r3, [pc, #104]	@ (80018d4 <main+0x1694>)
 800186c:	681b      	ldr	r3, [r3, #0]
 800186e:	681a      	ldr	r2, [r3, #0]
 8001870:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 8001874:	f6a3 210c 	subw	r1, r3, #2572	@ 0xa0c
 8001878:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 800187c:	00db      	lsls	r3, r3, #3
 800187e:	440b      	add	r3, r1
 8001880:	685b      	ldr	r3, [r3, #4]
 8001882:	2101      	movs	r1, #1
 8001884:	fa01 f303 	lsl.w	r3, r1, r3
 8001888:	43db      	mvns	r3, r3
 800188a:	4619      	mov	r1, r3
 800188c:	4b11      	ldr	r3, [pc, #68]	@ (80018d4 <main+0x1694>)
 800188e:	681b      	ldr	r3, [r3, #0]
 8001890:	400a      	ands	r2, r1
 8001892:	601a      	str	r2, [r3, #0]
    		for (i = 0; i < 15; i++)
 8001894:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 8001898:	3301      	adds	r3, #1
 800189a:	f8c7 3c30 	str.w	r3, [r7, #3120]	@ 0xc30
 800189e:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 80018a2:	2b0e      	cmp	r3, #14
 80018a4:	dda4      	ble.n	80017f0 <main+0x15b0>
    	for (j = 0; j < c; j++)
 80018a6:	f8d7 3c34 	ldr.w	r3, [r7, #3124]	@ 0xc34
 80018aa:	3301      	adds	r3, #1
 80018ac:	f8c7 3c34 	str.w	r3, [r7, #3124]	@ 0xc34
 80018b0:	f8d7 2c34 	ldr.w	r2, [r7, #3124]	@ 0xc34
 80018b4:	f8d7 3c2c 	ldr.w	r3, [r7, #3116]	@ 0xc2c
 80018b8:	429a      	cmp	r2, r3
 80018ba:	db95      	blt.n	80017e8 <main+0x15a8>
    		}
    	}
    	delay1();
 80018bc:	f7fe fc9e 	bl	80001fc <delay1>
    	for (j = 0; j < c; j++)
 80018c0:	2300      	movs	r3, #0
 80018c2:	f8c7 3c34 	str.w	r3, [r7, #3124]	@ 0xc34
 80018c6:	e067      	b.n	8001998 <main+0x1758>
    	{
    		for (i = 0; i < 12; i++)
 80018c8:	2300      	movs	r3, #0
 80018ca:	f8c7 3c30 	str.w	r3, [r7, #3120]	@ 0xc30
 80018ce:	e05a      	b.n	8001986 <main+0x1746>
 80018d0:	20000010 	.word	0x20000010
 80018d4:	20000018 	.word	0x20000018
    		{
    			*GPIOA_ODR |= (1 << arrV[i][0]);
 80018d8:	4ba7      	ldr	r3, [pc, #668]	@ (8001b78 <main+0x1938>)
 80018da:	681b      	ldr	r3, [r3, #0]
 80018dc:	681a      	ldr	r2, [r3, #0]
 80018de:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 80018e2:	f6a3 236c 	subw	r3, r3, #2668	@ 0xa6c
 80018e6:	f8d7 1c30 	ldr.w	r1, [r7, #3120]	@ 0xc30
 80018ea:	f853 3031 	ldr.w	r3, [r3, r1, lsl #3]
 80018ee:	2101      	movs	r1, #1
 80018f0:	fa01 f303 	lsl.w	r3, r1, r3
 80018f4:	4619      	mov	r1, r3
 80018f6:	4ba0      	ldr	r3, [pc, #640]	@ (8001b78 <main+0x1938>)
 80018f8:	681b      	ldr	r3, [r3, #0]
 80018fa:	430a      	orrs	r2, r1
 80018fc:	601a      	str	r2, [r3, #0]
    			*GPIOB_ODR |= (1 << arrV[i][1]);
 80018fe:	4b9f      	ldr	r3, [pc, #636]	@ (8001b7c <main+0x193c>)
 8001900:	681b      	ldr	r3, [r3, #0]
 8001902:	681a      	ldr	r2, [r3, #0]
 8001904:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 8001908:	f6a3 216c 	subw	r1, r3, #2668	@ 0xa6c
 800190c:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 8001910:	00db      	lsls	r3, r3, #3
 8001912:	440b      	add	r3, r1
 8001914:	685b      	ldr	r3, [r3, #4]
 8001916:	2101      	movs	r1, #1
 8001918:	fa01 f303 	lsl.w	r3, r1, r3
 800191c:	4619      	mov	r1, r3
 800191e:	4b97      	ldr	r3, [pc, #604]	@ (8001b7c <main+0x193c>)
 8001920:	681b      	ldr	r3, [r3, #0]
 8001922:	430a      	orrs	r2, r1
 8001924:	601a      	str	r2, [r3, #0]
    			delay();
 8001926:	f7fe fc55 	bl	80001d4 <delay>
    			*GPIOA_ODR &= ~(1 << arrV[i][0]);
 800192a:	4b93      	ldr	r3, [pc, #588]	@ (8001b78 <main+0x1938>)
 800192c:	681b      	ldr	r3, [r3, #0]
 800192e:	681a      	ldr	r2, [r3, #0]
 8001930:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 8001934:	f6a3 236c 	subw	r3, r3, #2668	@ 0xa6c
 8001938:	f8d7 1c30 	ldr.w	r1, [r7, #3120]	@ 0xc30
 800193c:	f853 3031 	ldr.w	r3, [r3, r1, lsl #3]
 8001940:	2101      	movs	r1, #1
 8001942:	fa01 f303 	lsl.w	r3, r1, r3
 8001946:	43db      	mvns	r3, r3
 8001948:	4619      	mov	r1, r3
 800194a:	4b8b      	ldr	r3, [pc, #556]	@ (8001b78 <main+0x1938>)
 800194c:	681b      	ldr	r3, [r3, #0]
 800194e:	400a      	ands	r2, r1
 8001950:	601a      	str	r2, [r3, #0]
    			*GPIOB_ODR &= ~(1 << arrV[i][1]);
 8001952:	4b8a      	ldr	r3, [pc, #552]	@ (8001b7c <main+0x193c>)
 8001954:	681b      	ldr	r3, [r3, #0]
 8001956:	681a      	ldr	r2, [r3, #0]
 8001958:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 800195c:	f6a3 216c 	subw	r1, r3, #2668	@ 0xa6c
 8001960:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 8001964:	00db      	lsls	r3, r3, #3
 8001966:	440b      	add	r3, r1
 8001968:	685b      	ldr	r3, [r3, #4]
 800196a:	2101      	movs	r1, #1
 800196c:	fa01 f303 	lsl.w	r3, r1, r3
 8001970:	43db      	mvns	r3, r3
 8001972:	4619      	mov	r1, r3
 8001974:	4b81      	ldr	r3, [pc, #516]	@ (8001b7c <main+0x193c>)
 8001976:	681b      	ldr	r3, [r3, #0]
 8001978:	400a      	ands	r2, r1
 800197a:	601a      	str	r2, [r3, #0]
    		for (i = 0; i < 12; i++)
 800197c:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 8001980:	3301      	adds	r3, #1
 8001982:	f8c7 3c30 	str.w	r3, [r7, #3120]	@ 0xc30
 8001986:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 800198a:	2b0b      	cmp	r3, #11
 800198c:	dda4      	ble.n	80018d8 <main+0x1698>
    	for (j = 0; j < c; j++)
 800198e:	f8d7 3c34 	ldr.w	r3, [r7, #3124]	@ 0xc34
 8001992:	3301      	adds	r3, #1
 8001994:	f8c7 3c34 	str.w	r3, [r7, #3124]	@ 0xc34
 8001998:	f8d7 2c34 	ldr.w	r2, [r7, #3124]	@ 0xc34
 800199c:	f8d7 3c2c 	ldr.w	r3, [r7, #3116]	@ 0xc2c
 80019a0:	429a      	cmp	r2, r3
 80019a2:	db91      	blt.n	80018c8 <main+0x1688>
    		}
    	}
    	delay1();
 80019a4:	f7fe fc2a 	bl	80001fc <delay1>
       for (j = 0; j < c; j++)
 80019a8:	2300      	movs	r3, #0
 80019aa:	f8c7 3c34 	str.w	r3, [r7, #3124]	@ 0xc34
 80019ae:	e063      	b.n	8001a78 <main+0x1838>
    	{
    		for (i = 0; i < 19; i++)
 80019b0:	2300      	movs	r3, #0
 80019b2:	f8c7 3c30 	str.w	r3, [r7, #3120]	@ 0xc30
 80019b6:	e056      	b.n	8001a66 <main+0x1826>
    		{
    			*GPIOA_ODR |= (1 << arrW[i][0]);
 80019b8:	4b6f      	ldr	r3, [pc, #444]	@ (8001b78 <main+0x1938>)
 80019ba:	681b      	ldr	r3, [r3, #0]
 80019bc:	681a      	ldr	r2, [r3, #0]
 80019be:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 80019c2:	f6a3 3304 	subw	r3, r3, #2820	@ 0xb04
 80019c6:	f8d7 1c30 	ldr.w	r1, [r7, #3120]	@ 0xc30
 80019ca:	f853 3031 	ldr.w	r3, [r3, r1, lsl #3]
 80019ce:	2101      	movs	r1, #1
 80019d0:	fa01 f303 	lsl.w	r3, r1, r3
 80019d4:	4619      	mov	r1, r3
 80019d6:	4b68      	ldr	r3, [pc, #416]	@ (8001b78 <main+0x1938>)
 80019d8:	681b      	ldr	r3, [r3, #0]
 80019da:	430a      	orrs	r2, r1
 80019dc:	601a      	str	r2, [r3, #0]
    			*GPIOB_ODR |= (1 << arrW[i][1]);
 80019de:	4b67      	ldr	r3, [pc, #412]	@ (8001b7c <main+0x193c>)
 80019e0:	681b      	ldr	r3, [r3, #0]
 80019e2:	681a      	ldr	r2, [r3, #0]
 80019e4:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 80019e8:	f6a3 3104 	subw	r1, r3, #2820	@ 0xb04
 80019ec:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 80019f0:	00db      	lsls	r3, r3, #3
 80019f2:	440b      	add	r3, r1
 80019f4:	685b      	ldr	r3, [r3, #4]
 80019f6:	2101      	movs	r1, #1
 80019f8:	fa01 f303 	lsl.w	r3, r1, r3
 80019fc:	4619      	mov	r1, r3
 80019fe:	4b5f      	ldr	r3, [pc, #380]	@ (8001b7c <main+0x193c>)
 8001a00:	681b      	ldr	r3, [r3, #0]
 8001a02:	430a      	orrs	r2, r1
 8001a04:	601a      	str	r2, [r3, #0]
    			delay();
 8001a06:	f7fe fbe5 	bl	80001d4 <delay>
    			*GPIOA_ODR &= ~(1 << arrW[i][0]);
 8001a0a:	4b5b      	ldr	r3, [pc, #364]	@ (8001b78 <main+0x1938>)
 8001a0c:	681b      	ldr	r3, [r3, #0]
 8001a0e:	681a      	ldr	r2, [r3, #0]
 8001a10:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 8001a14:	f6a3 3304 	subw	r3, r3, #2820	@ 0xb04
 8001a18:	f8d7 1c30 	ldr.w	r1, [r7, #3120]	@ 0xc30
 8001a1c:	f853 3031 	ldr.w	r3, [r3, r1, lsl #3]
 8001a20:	2101      	movs	r1, #1
 8001a22:	fa01 f303 	lsl.w	r3, r1, r3
 8001a26:	43db      	mvns	r3, r3
 8001a28:	4619      	mov	r1, r3
 8001a2a:	4b53      	ldr	r3, [pc, #332]	@ (8001b78 <main+0x1938>)
 8001a2c:	681b      	ldr	r3, [r3, #0]
 8001a2e:	400a      	ands	r2, r1
 8001a30:	601a      	str	r2, [r3, #0]
    			*GPIOB_ODR &= ~(1 << arrW[i][1]);
 8001a32:	4b52      	ldr	r3, [pc, #328]	@ (8001b7c <main+0x193c>)
 8001a34:	681b      	ldr	r3, [r3, #0]
 8001a36:	681a      	ldr	r2, [r3, #0]
 8001a38:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 8001a3c:	f6a3 3104 	subw	r1, r3, #2820	@ 0xb04
 8001a40:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 8001a44:	00db      	lsls	r3, r3, #3
 8001a46:	440b      	add	r3, r1
 8001a48:	685b      	ldr	r3, [r3, #4]
 8001a4a:	2101      	movs	r1, #1
 8001a4c:	fa01 f303 	lsl.w	r3, r1, r3
 8001a50:	43db      	mvns	r3, r3
 8001a52:	4619      	mov	r1, r3
 8001a54:	4b49      	ldr	r3, [pc, #292]	@ (8001b7c <main+0x193c>)
 8001a56:	681b      	ldr	r3, [r3, #0]
 8001a58:	400a      	ands	r2, r1
 8001a5a:	601a      	str	r2, [r3, #0]
    		for (i = 0; i < 19; i++)
 8001a5c:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 8001a60:	3301      	adds	r3, #1
 8001a62:	f8c7 3c30 	str.w	r3, [r7, #3120]	@ 0xc30
 8001a66:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 8001a6a:	2b12      	cmp	r3, #18
 8001a6c:	dda4      	ble.n	80019b8 <main+0x1778>
       for (j = 0; j < c; j++)
 8001a6e:	f8d7 3c34 	ldr.w	r3, [r7, #3124]	@ 0xc34
 8001a72:	3301      	adds	r3, #1
 8001a74:	f8c7 3c34 	str.w	r3, [r7, #3124]	@ 0xc34
 8001a78:	f8d7 2c34 	ldr.w	r2, [r7, #3124]	@ 0xc34
 8001a7c:	f8d7 3c2c 	ldr.w	r3, [r7, #3116]	@ 0xc2c
 8001a80:	429a      	cmp	r2, r3
 8001a82:	db95      	blt.n	80019b0 <main+0x1770>
    		}
    	}
    	delay1();
 8001a84:	f7fe fbba 	bl	80001fc <delay1>
       for (j = 0; j < c; j++)
 8001a88:	2300      	movs	r3, #0
 8001a8a:	f8c7 3c34 	str.w	r3, [r7, #3124]	@ 0xc34
 8001a8e:	e063      	b.n	8001b58 <main+0x1918>
    	{
    		for (i = 0; i < 13; i++)
 8001a90:	2300      	movs	r3, #0
 8001a92:	f8c7 3c30 	str.w	r3, [r7, #3120]	@ 0xc30
 8001a96:	e056      	b.n	8001b46 <main+0x1906>
    		{
    			*GPIOA_ODR |= (1 << arrX[i][0]);
 8001a98:	4b37      	ldr	r3, [pc, #220]	@ (8001b78 <main+0x1938>)
 8001a9a:	681b      	ldr	r3, [r3, #0]
 8001a9c:	681a      	ldr	r2, [r3, #0]
 8001a9e:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 8001aa2:	f6a3 336c 	subw	r3, r3, #2924	@ 0xb6c
 8001aa6:	f8d7 1c30 	ldr.w	r1, [r7, #3120]	@ 0xc30
 8001aaa:	f853 3031 	ldr.w	r3, [r3, r1, lsl #3]
 8001aae:	2101      	movs	r1, #1
 8001ab0:	fa01 f303 	lsl.w	r3, r1, r3
 8001ab4:	4619      	mov	r1, r3
 8001ab6:	4b30      	ldr	r3, [pc, #192]	@ (8001b78 <main+0x1938>)
 8001ab8:	681b      	ldr	r3, [r3, #0]
 8001aba:	430a      	orrs	r2, r1
 8001abc:	601a      	str	r2, [r3, #0]
    			*GPIOB_ODR |= (1 << arrX[i][1]);
 8001abe:	4b2f      	ldr	r3, [pc, #188]	@ (8001b7c <main+0x193c>)
 8001ac0:	681b      	ldr	r3, [r3, #0]
 8001ac2:	681a      	ldr	r2, [r3, #0]
 8001ac4:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 8001ac8:	f6a3 316c 	subw	r1, r3, #2924	@ 0xb6c
 8001acc:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 8001ad0:	00db      	lsls	r3, r3, #3
 8001ad2:	440b      	add	r3, r1
 8001ad4:	685b      	ldr	r3, [r3, #4]
 8001ad6:	2101      	movs	r1, #1
 8001ad8:	fa01 f303 	lsl.w	r3, r1, r3
 8001adc:	4619      	mov	r1, r3
 8001ade:	4b27      	ldr	r3, [pc, #156]	@ (8001b7c <main+0x193c>)
 8001ae0:	681b      	ldr	r3, [r3, #0]
 8001ae2:	430a      	orrs	r2, r1
 8001ae4:	601a      	str	r2, [r3, #0]
    			delay();
 8001ae6:	f7fe fb75 	bl	80001d4 <delay>
    			*GPIOA_ODR &= ~(1 << arrX[i][0]);
 8001aea:	4b23      	ldr	r3, [pc, #140]	@ (8001b78 <main+0x1938>)
 8001aec:	681b      	ldr	r3, [r3, #0]
 8001aee:	681a      	ldr	r2, [r3, #0]
 8001af0:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 8001af4:	f6a3 336c 	subw	r3, r3, #2924	@ 0xb6c
 8001af8:	f8d7 1c30 	ldr.w	r1, [r7, #3120]	@ 0xc30
 8001afc:	f853 3031 	ldr.w	r3, [r3, r1, lsl #3]
 8001b00:	2101      	movs	r1, #1
 8001b02:	fa01 f303 	lsl.w	r3, r1, r3
 8001b06:	43db      	mvns	r3, r3
 8001b08:	4619      	mov	r1, r3
 8001b0a:	4b1b      	ldr	r3, [pc, #108]	@ (8001b78 <main+0x1938>)
 8001b0c:	681b      	ldr	r3, [r3, #0]
 8001b0e:	400a      	ands	r2, r1
 8001b10:	601a      	str	r2, [r3, #0]
    			*GPIOB_ODR &= ~(1 << arrX[i][1]);
 8001b12:	4b1a      	ldr	r3, [pc, #104]	@ (8001b7c <main+0x193c>)
 8001b14:	681b      	ldr	r3, [r3, #0]
 8001b16:	681a      	ldr	r2, [r3, #0]
 8001b18:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 8001b1c:	f6a3 316c 	subw	r1, r3, #2924	@ 0xb6c
 8001b20:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 8001b24:	00db      	lsls	r3, r3, #3
 8001b26:	440b      	add	r3, r1
 8001b28:	685b      	ldr	r3, [r3, #4]
 8001b2a:	2101      	movs	r1, #1
 8001b2c:	fa01 f303 	lsl.w	r3, r1, r3
 8001b30:	43db      	mvns	r3, r3
 8001b32:	4619      	mov	r1, r3
 8001b34:	4b11      	ldr	r3, [pc, #68]	@ (8001b7c <main+0x193c>)
 8001b36:	681b      	ldr	r3, [r3, #0]
 8001b38:	400a      	ands	r2, r1
 8001b3a:	601a      	str	r2, [r3, #0]
    		for (i = 0; i < 13; i++)
 8001b3c:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 8001b40:	3301      	adds	r3, #1
 8001b42:	f8c7 3c30 	str.w	r3, [r7, #3120]	@ 0xc30
 8001b46:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 8001b4a:	2b0c      	cmp	r3, #12
 8001b4c:	dda4      	ble.n	8001a98 <main+0x1858>
       for (j = 0; j < c; j++)
 8001b4e:	f8d7 3c34 	ldr.w	r3, [r7, #3124]	@ 0xc34
 8001b52:	3301      	adds	r3, #1
 8001b54:	f8c7 3c34 	str.w	r3, [r7, #3124]	@ 0xc34
 8001b58:	f8d7 2c34 	ldr.w	r2, [r7, #3124]	@ 0xc34
 8001b5c:	f8d7 3c2c 	ldr.w	r3, [r7, #3116]	@ 0xc2c
 8001b60:	429a      	cmp	r2, r3
 8001b62:	db95      	blt.n	8001a90 <main+0x1850>
    		}
    	}
    	delay1();
 8001b64:	f7fe fb4a 	bl	80001fc <delay1>
    	for (j = 0; j < c; j++)
 8001b68:	2300      	movs	r3, #0
 8001b6a:	f8c7 3c34 	str.w	r3, [r7, #3124]	@ 0xc34
 8001b6e:	e067      	b.n	8001c40 <main+0x1a00>
    	{
    		for (i = 0; i < 10; i++)
 8001b70:	2300      	movs	r3, #0
 8001b72:	f8c7 3c30 	str.w	r3, [r7, #3120]	@ 0xc30
 8001b76:	e05a      	b.n	8001c2e <main+0x19ee>
 8001b78:	20000010 	.word	0x20000010
 8001b7c:	20000018 	.word	0x20000018
    		{
    			*GPIOA_ODR |= (1 << arrY[i][0]);
 8001b80:	4b6c      	ldr	r3, [pc, #432]	@ (8001d34 <main+0x1af4>)
 8001b82:	681b      	ldr	r3, [r3, #0]
 8001b84:	681a      	ldr	r2, [r3, #0]
 8001b86:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 8001b8a:	f6a3 33bc 	subw	r3, r3, #3004	@ 0xbbc
 8001b8e:	f8d7 1c30 	ldr.w	r1, [r7, #3120]	@ 0xc30
 8001b92:	f853 3031 	ldr.w	r3, [r3, r1, lsl #3]
 8001b96:	2101      	movs	r1, #1
 8001b98:	fa01 f303 	lsl.w	r3, r1, r3
 8001b9c:	4619      	mov	r1, r3
 8001b9e:	4b65      	ldr	r3, [pc, #404]	@ (8001d34 <main+0x1af4>)
 8001ba0:	681b      	ldr	r3, [r3, #0]
 8001ba2:	430a      	orrs	r2, r1
 8001ba4:	601a      	str	r2, [r3, #0]
    			*GPIOB_ODR |= (1 << arrY[i][1]);
 8001ba6:	4b64      	ldr	r3, [pc, #400]	@ (8001d38 <main+0x1af8>)
 8001ba8:	681b      	ldr	r3, [r3, #0]
 8001baa:	681a      	ldr	r2, [r3, #0]
 8001bac:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 8001bb0:	f6a3 31bc 	subw	r1, r3, #3004	@ 0xbbc
 8001bb4:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 8001bb8:	00db      	lsls	r3, r3, #3
 8001bba:	440b      	add	r3, r1
 8001bbc:	685b      	ldr	r3, [r3, #4]
 8001bbe:	2101      	movs	r1, #1
 8001bc0:	fa01 f303 	lsl.w	r3, r1, r3
 8001bc4:	4619      	mov	r1, r3
 8001bc6:	4b5c      	ldr	r3, [pc, #368]	@ (8001d38 <main+0x1af8>)
 8001bc8:	681b      	ldr	r3, [r3, #0]
 8001bca:	430a      	orrs	r2, r1
 8001bcc:	601a      	str	r2, [r3, #0]
    			delay();
 8001bce:	f7fe fb01 	bl	80001d4 <delay>
    			*GPIOA_ODR &= ~(1 << arrY[i][0]);
 8001bd2:	4b58      	ldr	r3, [pc, #352]	@ (8001d34 <main+0x1af4>)
 8001bd4:	681b      	ldr	r3, [r3, #0]
 8001bd6:	681a      	ldr	r2, [r3, #0]
 8001bd8:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 8001bdc:	f6a3 33bc 	subw	r3, r3, #3004	@ 0xbbc
 8001be0:	f8d7 1c30 	ldr.w	r1, [r7, #3120]	@ 0xc30
 8001be4:	f853 3031 	ldr.w	r3, [r3, r1, lsl #3]
 8001be8:	2101      	movs	r1, #1
 8001bea:	fa01 f303 	lsl.w	r3, r1, r3
 8001bee:	43db      	mvns	r3, r3
 8001bf0:	4619      	mov	r1, r3
 8001bf2:	4b50      	ldr	r3, [pc, #320]	@ (8001d34 <main+0x1af4>)
 8001bf4:	681b      	ldr	r3, [r3, #0]
 8001bf6:	400a      	ands	r2, r1
 8001bf8:	601a      	str	r2, [r3, #0]
    			*GPIOB_ODR &= ~(1 << arrY[i][1]);
 8001bfa:	4b4f      	ldr	r3, [pc, #316]	@ (8001d38 <main+0x1af8>)
 8001bfc:	681b      	ldr	r3, [r3, #0]
 8001bfe:	681a      	ldr	r2, [r3, #0]
 8001c00:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 8001c04:	f6a3 31bc 	subw	r1, r3, #3004	@ 0xbbc
 8001c08:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 8001c0c:	00db      	lsls	r3, r3, #3
 8001c0e:	440b      	add	r3, r1
 8001c10:	685b      	ldr	r3, [r3, #4]
 8001c12:	2101      	movs	r1, #1
 8001c14:	fa01 f303 	lsl.w	r3, r1, r3
 8001c18:	43db      	mvns	r3, r3
 8001c1a:	4619      	mov	r1, r3
 8001c1c:	4b46      	ldr	r3, [pc, #280]	@ (8001d38 <main+0x1af8>)
 8001c1e:	681b      	ldr	r3, [r3, #0]
 8001c20:	400a      	ands	r2, r1
 8001c22:	601a      	str	r2, [r3, #0]
    		for (i = 0; i < 10; i++)
 8001c24:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 8001c28:	3301      	adds	r3, #1
 8001c2a:	f8c7 3c30 	str.w	r3, [r7, #3120]	@ 0xc30
 8001c2e:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 8001c32:	2b09      	cmp	r3, #9
 8001c34:	dda4      	ble.n	8001b80 <main+0x1940>
    	for (j = 0; j < c; j++)
 8001c36:	f8d7 3c34 	ldr.w	r3, [r7, #3124]	@ 0xc34
 8001c3a:	3301      	adds	r3, #1
 8001c3c:	f8c7 3c34 	str.w	r3, [r7, #3124]	@ 0xc34
 8001c40:	f8d7 2c34 	ldr.w	r2, [r7, #3124]	@ 0xc34
 8001c44:	f8d7 3c2c 	ldr.w	r3, [r7, #3116]	@ 0xc2c
 8001c48:	429a      	cmp	r2, r3
 8001c4a:	db91      	blt.n	8001b70 <main+0x1930>
    		}
    	}
    	delay1();
 8001c4c:	f7fe fad6 	bl	80001fc <delay1>
    	for (j = 0; j < c; j++)
 8001c50:	2300      	movs	r3, #0
 8001c52:	f8c7 3c34 	str.w	r3, [r7, #3124]	@ 0xc34
 8001c56:	e063      	b.n	8001d20 <main+0x1ae0>
    	{
    		for (i = 0; i < 15; i++)
 8001c58:	2300      	movs	r3, #0
 8001c5a:	f8c7 3c30 	str.w	r3, [r7, #3120]	@ 0xc30
 8001c5e:	e056      	b.n	8001d0e <main+0x1ace>
    		{
    			*GPIOA_ODR |= (1 << arrZ[i][0]);
 8001c60:	4b34      	ldr	r3, [pc, #208]	@ (8001d34 <main+0x1af4>)
 8001c62:	681b      	ldr	r3, [r3, #0]
 8001c64:	681a      	ldr	r2, [r3, #0]
 8001c66:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 8001c6a:	f6a3 4334 	subw	r3, r3, #3124	@ 0xc34
 8001c6e:	f8d7 1c30 	ldr.w	r1, [r7, #3120]	@ 0xc30
 8001c72:	f853 3031 	ldr.w	r3, [r3, r1, lsl #3]
 8001c76:	2101      	movs	r1, #1
 8001c78:	fa01 f303 	lsl.w	r3, r1, r3
 8001c7c:	4619      	mov	r1, r3
 8001c7e:	4b2d      	ldr	r3, [pc, #180]	@ (8001d34 <main+0x1af4>)
 8001c80:	681b      	ldr	r3, [r3, #0]
 8001c82:	430a      	orrs	r2, r1
 8001c84:	601a      	str	r2, [r3, #0]
    			*GPIOB_ODR |= (1 << arrZ[i][1]);
 8001c86:	4b2c      	ldr	r3, [pc, #176]	@ (8001d38 <main+0x1af8>)
 8001c88:	681b      	ldr	r3, [r3, #0]
 8001c8a:	681a      	ldr	r2, [r3, #0]
 8001c8c:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 8001c90:	f6a3 4134 	subw	r1, r3, #3124	@ 0xc34
 8001c94:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 8001c98:	00db      	lsls	r3, r3, #3
 8001c9a:	440b      	add	r3, r1
 8001c9c:	685b      	ldr	r3, [r3, #4]
 8001c9e:	2101      	movs	r1, #1
 8001ca0:	fa01 f303 	lsl.w	r3, r1, r3
 8001ca4:	4619      	mov	r1, r3
 8001ca6:	4b24      	ldr	r3, [pc, #144]	@ (8001d38 <main+0x1af8>)
 8001ca8:	681b      	ldr	r3, [r3, #0]
 8001caa:	430a      	orrs	r2, r1
 8001cac:	601a      	str	r2, [r3, #0]
    			delay();
 8001cae:	f7fe fa91 	bl	80001d4 <delay>
    			*GPIOA_ODR &= ~(1 << arrZ[i][0]);
 8001cb2:	4b20      	ldr	r3, [pc, #128]	@ (8001d34 <main+0x1af4>)
 8001cb4:	681b      	ldr	r3, [r3, #0]
 8001cb6:	681a      	ldr	r2, [r3, #0]
 8001cb8:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 8001cbc:	f6a3 4334 	subw	r3, r3, #3124	@ 0xc34
 8001cc0:	f8d7 1c30 	ldr.w	r1, [r7, #3120]	@ 0xc30
 8001cc4:	f853 3031 	ldr.w	r3, [r3, r1, lsl #3]
 8001cc8:	2101      	movs	r1, #1
 8001cca:	fa01 f303 	lsl.w	r3, r1, r3
 8001cce:	43db      	mvns	r3, r3
 8001cd0:	4619      	mov	r1, r3
 8001cd2:	4b18      	ldr	r3, [pc, #96]	@ (8001d34 <main+0x1af4>)
 8001cd4:	681b      	ldr	r3, [r3, #0]
 8001cd6:	400a      	ands	r2, r1
 8001cd8:	601a      	str	r2, [r3, #0]
    			*GPIOB_ODR &= ~(1 << arrZ[i][1]);
 8001cda:	4b17      	ldr	r3, [pc, #92]	@ (8001d38 <main+0x1af8>)
 8001cdc:	681b      	ldr	r3, [r3, #0]
 8001cde:	681a      	ldr	r2, [r3, #0]
 8001ce0:	f607 4338 	addw	r3, r7, #3128	@ 0xc38
 8001ce4:	f6a3 4134 	subw	r1, r3, #3124	@ 0xc34
 8001ce8:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 8001cec:	00db      	lsls	r3, r3, #3
 8001cee:	440b      	add	r3, r1
 8001cf0:	685b      	ldr	r3, [r3, #4]
 8001cf2:	2101      	movs	r1, #1
 8001cf4:	fa01 f303 	lsl.w	r3, r1, r3
 8001cf8:	43db      	mvns	r3, r3
 8001cfa:	4619      	mov	r1, r3
 8001cfc:	4b0e      	ldr	r3, [pc, #56]	@ (8001d38 <main+0x1af8>)
 8001cfe:	681b      	ldr	r3, [r3, #0]
 8001d00:	400a      	ands	r2, r1
 8001d02:	601a      	str	r2, [r3, #0]
    		for (i = 0; i < 15; i++)
 8001d04:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 8001d08:	3301      	adds	r3, #1
 8001d0a:	f8c7 3c30 	str.w	r3, [r7, #3120]	@ 0xc30
 8001d0e:	f8d7 3c30 	ldr.w	r3, [r7, #3120]	@ 0xc30
 8001d12:	2b0e      	cmp	r3, #14
 8001d14:	dda4      	ble.n	8001c60 <main+0x1a20>
    	for (j = 0; j < c; j++)
 8001d16:	f8d7 3c34 	ldr.w	r3, [r7, #3124]	@ 0xc34
 8001d1a:	3301      	adds	r3, #1
 8001d1c:	f8c7 3c34 	str.w	r3, [r7, #3124]	@ 0xc34
 8001d20:	f8d7 2c34 	ldr.w	r2, [r7, #3124]	@ 0xc34
 8001d24:	f8d7 3c2c 	ldr.w	r3, [r7, #3116]	@ 0xc2c
 8001d28:	429a      	cmp	r2, r3
 8001d2a:	db95      	blt.n	8001c58 <main+0x1a18>
    		}
    	}
    	delay1();
 8001d2c:	f7fe fa66 	bl	80001fc <delay1>
    {
 8001d30:	f7fe bc43 	b.w	80005ba <main+0x37a>
 8001d34:	20000010 	.word	0x20000010
 8001d38:	20000018 	.word	0x20000018

08001d3c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8001d3c:	480d      	ldr	r0, [pc, #52]	@ (8001d74 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8001d3e:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8001d40:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8001d44:	480c      	ldr	r0, [pc, #48]	@ (8001d78 <LoopForever+0x6>)
  ldr r1, =_edata
 8001d46:	490d      	ldr	r1, [pc, #52]	@ (8001d7c <LoopForever+0xa>)
  ldr r2, =_sidata
 8001d48:	4a0d      	ldr	r2, [pc, #52]	@ (8001d80 <LoopForever+0xe>)
  movs r3, #0
 8001d4a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8001d4c:	e002      	b.n	8001d54 <LoopCopyDataInit>

08001d4e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8001d4e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8001d50:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8001d52:	3304      	adds	r3, #4

08001d54 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8001d54:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8001d56:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8001d58:	d3f9      	bcc.n	8001d4e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8001d5a:	4a0a      	ldr	r2, [pc, #40]	@ (8001d84 <LoopForever+0x12>)
  ldr r4, =_ebss
 8001d5c:	4c0a      	ldr	r4, [pc, #40]	@ (8001d88 <LoopForever+0x16>)
  movs r3, #0
 8001d5e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8001d60:	e001      	b.n	8001d66 <LoopFillZerobss>

08001d62 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8001d62:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8001d64:	3204      	adds	r2, #4

08001d66 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8001d66:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8001d68:	d3fb      	bcc.n	8001d62 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8001d6a:	f000 f811 	bl	8001d90 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8001d6e:	f7fe fa67 	bl	8000240 <main>

08001d72 <LoopForever>:

LoopForever:
  b LoopForever
 8001d72:	e7fe      	b.n	8001d72 <LoopForever>
  ldr   r0, =_estack
 8001d74:	20010000 	.word	0x20010000
  ldr r0, =_sdata
 8001d78:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8001d7c:	2000001c 	.word	0x2000001c
  ldr r2, =_sidata
 8001d80:	08002a3c 	.word	0x08002a3c
  ldr r2, =_sbss
 8001d84:	2000001c 	.word	0x2000001c
  ldr r4, =_ebss
 8001d88:	20000038 	.word	0x20000038

08001d8c <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8001d8c:	e7fe      	b.n	8001d8c <ADC_IRQHandler>
	...

08001d90 <__libc_init_array>:
 8001d90:	b570      	push	{r4, r5, r6, lr}
 8001d92:	4d0d      	ldr	r5, [pc, #52]	@ (8001dc8 <__libc_init_array+0x38>)
 8001d94:	4c0d      	ldr	r4, [pc, #52]	@ (8001dcc <__libc_init_array+0x3c>)
 8001d96:	1b64      	subs	r4, r4, r5
 8001d98:	10a4      	asrs	r4, r4, #2
 8001d9a:	2600      	movs	r6, #0
 8001d9c:	42a6      	cmp	r6, r4
 8001d9e:	d109      	bne.n	8001db4 <__libc_init_array+0x24>
 8001da0:	4d0b      	ldr	r5, [pc, #44]	@ (8001dd0 <__libc_init_array+0x40>)
 8001da2:	4c0c      	ldr	r4, [pc, #48]	@ (8001dd4 <__libc_init_array+0x44>)
 8001da4:	f000 f826 	bl	8001df4 <_init>
 8001da8:	1b64      	subs	r4, r4, r5
 8001daa:	10a4      	asrs	r4, r4, #2
 8001dac:	2600      	movs	r6, #0
 8001dae:	42a6      	cmp	r6, r4
 8001db0:	d105      	bne.n	8001dbe <__libc_init_array+0x2e>
 8001db2:	bd70      	pop	{r4, r5, r6, pc}
 8001db4:	f855 3b04 	ldr.w	r3, [r5], #4
 8001db8:	4798      	blx	r3
 8001dba:	3601      	adds	r6, #1
 8001dbc:	e7ee      	b.n	8001d9c <__libc_init_array+0xc>
 8001dbe:	f855 3b04 	ldr.w	r3, [r5], #4
 8001dc2:	4798      	blx	r3
 8001dc4:	3601      	adds	r6, #1
 8001dc6:	e7f2      	b.n	8001dae <__libc_init_array+0x1e>
 8001dc8:	08002a34 	.word	0x08002a34
 8001dcc:	08002a34 	.word	0x08002a34
 8001dd0:	08002a34 	.word	0x08002a34
 8001dd4:	08002a38 	.word	0x08002a38

08001dd8 <memcpy>:
 8001dd8:	440a      	add	r2, r1
 8001dda:	4291      	cmp	r1, r2
 8001ddc:	f100 33ff 	add.w	r3, r0, #4294967295	@ 0xffffffff
 8001de0:	d100      	bne.n	8001de4 <memcpy+0xc>
 8001de2:	4770      	bx	lr
 8001de4:	b510      	push	{r4, lr}
 8001de6:	f811 4b01 	ldrb.w	r4, [r1], #1
 8001dea:	f803 4f01 	strb.w	r4, [r3, #1]!
 8001dee:	4291      	cmp	r1, r2
 8001df0:	d1f9      	bne.n	8001de6 <memcpy+0xe>
 8001df2:	bd10      	pop	{r4, pc}

08001df4 <_init>:
 8001df4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001df6:	bf00      	nop
 8001df8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001dfa:	bc08      	pop	{r3}
 8001dfc:	469e      	mov	lr, r3
 8001dfe:	4770      	bx	lr

08001e00 <_fini>:
 8001e00:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001e02:	bf00      	nop
 8001e04:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001e06:	bc08      	pop	{r3}
 8001e08:	469e      	mov	lr, r3
 8001e0a:	4770      	bx	lr
